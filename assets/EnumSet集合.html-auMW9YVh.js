import{_ as s,c as a,e,o as p}from"./app-DO9Fsueg.js";const t={};function l(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h2 id="enumset" tabindex="-1"><a class="header-anchor" href="#enumset"><span>EnumSet</span></a></h2><p>EnumSet<code>&lt;E extends Enum&lt;E&gt;&gt;</code>是一个专门存放枚举的集合，这是一个抽象类，Java对其有两个实现类RegularEnumSet(枚举元素&lt;=64)和JumboEnumSet。这两个类都是缺省的修饰符访问权限，不能通过new来创建对象，提供了noneOf(枚举)、allOf(枚举类)来创建对应的对象。</p><figure><img src="http://47.101.155.205/image-20240229140130327.png" alt="image-20240229140130327" tabindex="0" loading="lazy"><figcaption>image-20240229140130327</figcaption></figure><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 通过debug发现getEnumConstantsShared方法执行会调用到System类</span></span>
<span class="line"><span class="token comment">// SharedSecrets.getJavaLangAccess().getEnumConstantsShared(elementType)该方法可以获取一个共享的枚举类对象数组,注意这个数组被修改后,后续获取到的都是修改的对象。</span></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span> <span class="token keyword">extends</span> <span class="token class-name">Enum</span><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">E</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getUniverse</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> elementType<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token class-name">SharedSecrets</span><span class="token punctuation">.</span><span class="token function">getJavaLangAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getEnumConstantsShared</span><span class="token punctuation">(</span>elementType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20240229141059629.png" alt="image-20240229141059629" tabindex="0" loading="lazy"><figcaption>image-20240229141059629</figcaption></figure><h3 id="regularenumset" tabindex="-1"><a class="header-anchor" href="#regularenumset"><span>RegularEnumSet</span></a></h3><p>RegularEnumSet基于枚举的可数性，结合一个long类型的数字实现对一个集合的增、删、查等。</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">long</span> elements <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">final</span> <span class="token class-name">Class</span>\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>\` elementType<span class="token punctuation">;</span><span class="token comment">// 枚举的类</span></span>
<span class="line"><span class="token keyword">final</span> <span class="token class-name">Enum</span>\`<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span>\`<span class="token punctuation">[</span><span class="token punctuation">]</span> universe<span class="token punctuation">;</span><span class="token comment">// SharedSecrets.getJavaLangAccess().getEnumConstantsShared(elementType)获取的枚举所有信息</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>Enum&lt;?&gt;.ordinal()范围[0,63]</p><ul><li>增加元素</li></ul><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 先进行类型校验</span></span>
<span class="line"><span class="token comment">// | 或运算 一个为1就是1</span></span>
<span class="line"><span class="token keyword">long</span> oldElements <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>elements<span class="token punctuation">;</span></span>
<span class="line">elements <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token number">1L</span> <span class="token operator">&lt;&lt;</span> <span class="token class-name">Enum</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span><span class="token function">ordinal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">return</span> elements <span class="token operator">!=</span> oldElements<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><ul><li>是否存在</li></ul><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 先进行类型校验</span></span>
<span class="line"><span class="token comment">// &amp; 与运算 两个为1才是1</span></span>
<span class="line"><span class="token keyword">return</span> <span class="token punctuation">(</span>elements <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1L</span> <span class="token operator">&lt;&lt;</span> <span class="token class-name">Enum</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span><span class="token function">ordinal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><ul><li>移除元素</li></ul><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 先进行类型校验</span></span>
<span class="line"><span class="token comment">// ~ 非运算,取反;然后&amp; 与运算 两个为1才是1</span></span>
<span class="line"><span class="token keyword">long</span> oldElements <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>elements<span class="token punctuation">;</span></span>
<span class="line">elements <span class="token operator">&amp;=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1L</span> <span class="token operator">&lt;&lt;</span> <span class="token class-name">Enum</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span><span class="token function">ordinal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">return</span> oldElements <span class="token operator">!=</span> elements<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><ul><li>遍历元素</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">EnumSetIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span> <span class="token keyword">extends</span> <span class="token class-name">Enum</span><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">long</span> unseen<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">	<span class="token keyword">long</span> lastReturned <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">EnumSetIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// bit位占用情况</span></span>
<span class="line">		unseen <span class="token operator">=</span> elements<span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> unseen <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>unseen <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchElementException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// unseen初始化代表即初始的集合元素布局情况,这里运算的目的是找出二进制最低位的1</span></span>
<span class="line"><span class="token comment">// unseen为正整数:-unseen的补码为unseen全部取反+1;这就意味着结果为unseen最低位为1的二进制结果</span></span>
<span class="line"><span class="token comment">// unseen为负整数:-unseen的补码为unseen全部取反+1(MAX为自己);后面同上</span></span>
<span class="line">		lastReturned <span class="token operator">=</span> unseen <span class="token operator">&amp;</span> <span class="token operator">-</span>unseen<span class="token punctuation">;</span></span>
<span class="line">		unseen <span class="token operator">-=</span> lastReturned<span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> universe<span class="token punctuation">[</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">numberOfTrailingZeros</span><span class="token punctuation">(</span>lastReturned<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>lastReturned <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 和移除元素是异曲同工之妙 ~(1L Long.numberOfTrailingZeros(lastReturned)))</span></span>
<span class="line">		elements <span class="token operator">&amp;=</span> <span class="token operator">~</span>lastReturned<span class="token punctuation">;</span></span>
<span class="line">		lastReturned <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://47.101.155.205/image-20240229211844803.png" alt="image-20240229211844803" tabindex="0" loading="lazy"><figcaption>image-20240229211844803</figcaption></figure>`,18)]))}const i=s(t,[["render",l],["__file","EnumSet集合.html.vue"]]),u=JSON.parse('{"path":"/JavaEE/EnumSet%E9%9B%86%E5%90%88.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"EnumSet","slug":"enumset","link":"#enumset","children":[{"level":3,"title":"RegularEnumSet","slug":"regularenumset","link":"#regularenumset","children":[]}]}],"git":{"updatedTime":1729606500000,"contributors":[{"name":"oycm","username":"oycm","email":"1164864987@qq.com","commits":1,"url":"https://github.com/oycm"}]},"filePathRelative":"JavaEE/EnumSet集合.md"}');export{i as comp,u as data};
