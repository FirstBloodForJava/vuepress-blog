import{_ as n,c as s,e,o as p}from"./app-DO9Fsueg.js";const l={};function i(t,a){return p(),s("div",null,a[0]||(a[0]=[e(`<h1 id="gradle" tabindex="-1"><a class="header-anchor" href="#gradle"><span>gradle</span></a></h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>需要有Java环境</p><p>下载地址：https://gradle.org/releases/</p><p>8.5版本仅有二进制文件：https://gradle.org/next-steps/?version=8.5&amp;format=bin</p><p>8.5版本包含文档和源码及二进制文件：https://gradle.org/next-steps/?version=8.5&amp;format=all</p><h3 id="linux安装" tabindex="-1"><a class="header-anchor" href="#linux安装"><span>Linux安装</span></a></h3><p>官网文档：https://docs.gradle.org/8.5/userguide/installation.html#ex-installing-manuall</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 新建目录</span></span>
<span class="line"><span class="token function">mkdir</span> /opt/gradle</span>
<span class="line"><span class="token comment"># 将压缩包上传到该目录下,在压缩文件目录下,执行接所以命令</span></span>
<span class="line"><span class="token comment"># 将文件解压缩到/opt/gradle目录下</span></span>
<span class="line"><span class="token function">unzip</span> <span class="token parameter variable">-d</span> /opt/gradle gradle-8.5-bin.zip</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看文件</span></span>
<span class="line"><span class="token function">ls</span> /opt/gradle/gradle-8.5</span>
<span class="line">LICENSE  NOTICE  bin  getting-started.html  init.d  lib  media</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 配置环境变量,即上面文件解压的路径到bin目录</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/opt/gradle/gradle-8.5/bin</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="windows安装" tabindex="-1"><a class="header-anchor" href="#windows安装"><span>Windows安装</span></a></h3><p>新建一个gradle安装目录：G:\\environment\\gradle；</p><p>双击打开下载的压缩包，将打开的里面的gradle-*.*文件拖拽复制到G:\\environment\\gradle目录中；</p><p>配置环境变量：</p><ol><li>GRADLE_HOME</li><li>GRADLE_USER_HOME</li></ol><figure><img src="http://47.101.155.205/image-20240110152021864.png" alt="image-20240110152021864" tabindex="0" loading="lazy"><figcaption>image-20240110152021864</figcaption></figure><h2 id="gradle-wrapper" tabindex="-1"><a class="header-anchor" href="#gradle-wrapper"><span>Gradle Wrapper</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 在Gradle项目中生成或更新Gradle Wrapper,用于下载和运行特定 Gradle 版本的脚本文件</span></span>
<span class="line">./gradlew wrapper --gradle-version<span class="token operator">=</span><span class="token number">8.5</span> --distribution-type<span class="token operator">=</span>bin</span>
<span class="line"></span>
<span class="line">./gradlew wrapper --gradle-version<span class="token operator">=</span><span class="token number">6.6</span>.1 --distribution-type<span class="token operator">=</span>bin</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 配置gradle之后,可以不用安装gradle也能构建项目</span></span>
<span class="line">./gradlew tasks Downloading https://services.gradle.org/distributions/gradle-6.6.1-bin.zip</span>
<span class="line"></span>
<span class="line">./gradlew tasks Downloading http://192.168.27.20:8081/repository/gradle-distribution/gradle-6.6.1-bin.zip</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://47.101.155.205/image-20240110162757142.png" alt="image-20240110162757142" tabindex="0" loading="lazy"><figcaption>image-20240110162757142</figcaption></figure><p>3种使用的方式：</p><ol><li>新建Gradle项目，添加一个Gradle Wrapper；</li><li>使用现有的Gradle Wrapper运行项目；</li><li>通过升级Gradle Wrapper来达到升级Gradle版本的效果</li></ol><h3 id="_1-添加gradle-wrapper" tabindex="-1"><a class="header-anchor" href="#_1-添加gradle-wrapper"><span>1.添加Gradle Wrapper</span></a></h3><p>新建的项目，如果没有Gradle Wrapper，可以通过gradle wrapper给当前项目添加Gradle Wrapper(需要安装Gradle)。可以将这个生成的文件添加到git版本控制上面，就能实现Gradle构建版本一致。</p><p>gradle/wrapper/gradle-wrapper.properties文件存储相关信息</p><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">distributionBase</span><span class="token punctuation">=</span><span class="token value attr-value">GRADLE_USER_HOME</span></span>
<span class="line"><span class="token key attr-name">distributionPath</span><span class="token punctuation">=</span><span class="token value attr-value">wrapper/dists</span></span>
<span class="line"><span class="token key attr-name">distributionUrl</span><span class="token punctuation">=</span><span class="token value attr-value">https\\://services.gradle.org/distributions/gradle-8.5-bin.zip</span></span>
<span class="line"><span class="token comment">#distributionUrl=file:///D:/environment/zip/gradle-8.5-bin.zip 指定本地文件地址</span></span>
<span class="line"><span class="token key attr-name">networkTimeout</span><span class="token punctuation">=</span><span class="token value attr-value">10000</span></span>
<span class="line"><span class="token key attr-name">validateDistributionUrl</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"><span class="token key attr-name">zipStoreBase</span><span class="token punctuation">=</span><span class="token value attr-value">GRADLE_USER_HOME</span></span>
<span class="line"><span class="token key attr-name">zipStorePath</span><span class="token punctuation">=</span><span class="token value attr-value">wrapper/dists</span></span>
<span class="line"></span>
<span class="line"><span class="token key attr-name">--gradle-distribution-url</span><span class="token punctuation">=</span><span class="token value attr-value">https://services.gradle.org/distributions/gradle-7.6-bin.zip </span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以通过参数控制Gradle Wrapper生成的情况：</p><ul><li>--gradle-version：控制版本，可选项：latest、release-candidate、nightly、release-nightly、具体版本；</li><li>--distribution-type：gradle版本类型：bin-压缩版、all，默认bin；</li><li>--gradle-distribution-url：可以指定远程的gradle的下载地址及版本，会将properties文件中的值替换，这个会让上面两个参数失效；</li><li>--gradle-distribution-sha256-sum：用于验证下载的Gradle发行版的SHA256哈希和；</li><li>--network-timeout：下载Gradle发行版本的超时时间，单位ms，默认10000；</li><li>--no-validate-url：禁用对配置的分发URL的验证，URL的有效性校验；</li><li>--validate-url：启用对配置的分发URL的验证，默认开启；</li></ul><p>the URL is validated by sending a HEAD request in the case of the https scheme or by checking the existence of the file in the case of the file scheme.</p><p>文件的作用：</p><ul><li>gradle-wrapper.jar：包含了下载Gradle发行版的代码。</li><li>gradle-wrapper.properties：Wrapper运行时的配置文件，控制gradle下载的版本及地址，本机的位置等；更多的配置如：配置代理，需要去不同的配置文件。官网文档：https://docs.gradle.org/8.5/userguide/build_environment.html#sec:gradle_configuration_properties</li><li>gradlew、gradlew.bat：用于使用Gradle Wrapper执行构建的linux或Windows脚本。有配置Gradle Wrapper的情况下，不需要安装Gradle环境。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 生成当前gradle版本的Gradle Wrapper</span></span>
<span class="line">gradle wrapper</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 执行失败，可能是构建过程下载文件超时</span></span>
<span class="line">gradle wrapper --gradle-distribution-url<span class="token operator">=</span>https://services.gradle.org/distributions/gradle-7.6-bin.zip</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 换成本地下载的文件，就可以</span></span>
<span class="line">gradle wrapper --gradle-distribution-url<span class="token operator">=</span>file:///G:/environment/gradle-7.6-all.zip</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 生成默认版本的Gradle Wrapper</span></span>
<span class="line">gradle wrapper</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://47.101.155.205/image-20240111110535371.png" alt="image-20240111110535371" tabindex="0" loading="lazy"><figcaption>image-20240111110535371</figcaption></figure><h3 id="_2-使用gradle-wrapper" tabindex="-1"><a class="header-anchor" href="#_2-使用gradle-wrapper"><span>2.使用Gradle Wrapper</span></a></h3><p>使用Wrapper方式构建是值得推荐的，这个能确保构建的过程可靠的、可控的、标准的。使用Wrapper构建看起来就像使用安装的Gradle构建一样。可以根据操作系统来选中gradlew或gradlew.bat而不是gradle命令。</p><figure><img src="http://47.101.155.205/image-20240111112032151.png" alt="image-20240111112032151" tabindex="0" loading="lazy"><figcaption>image-20240111112032151</figcaption></figure><p>如果在系统上没有安装可用的gradle版本，Wrapper将会根据gradle-wrapper.properties的配置去下载文件，将其存储在本地。只要配置文件中的distributionUrl没有发送改变，后续的构建调用就会复用之前下载的gradle版本。</p><h3 id="_3-升级gradle-wrapper" tabindex="-1"><a class="header-anchor" href="#_3-升级gradle-wrapper"><span>3.升级Gradle Wrapper</span></a></h3><p>方式：</p><ol><li>修改gradle-wrapper.properties中的distributionUrl的版本；</li><li>通过执行gradle wrapper指定具体的版本(如果gradle-wrapper.jar有优化也能获取到)；</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 将Gradle Wrapper升级到最新版本(没有安装Gradle也能通过这个命令升级)</span></span>
<span class="line">./gradlew.bat wrapper --gradle-version latest</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 将Gradle Wrapper升级到指定版本</span></span>
<span class="line">./gradlew.bat wrapper --gradle-version <span class="token number">8.5</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看Gradle的版本,根据Gradle Wrapper版本来的</span></span>
<span class="line">./gradlew.bat <span class="token parameter variable">--version</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20240111133224083.png" alt="image-20240111133224083" tabindex="0" loading="lazy"><figcaption>image-20240111133224083</figcaption></figure><p>通过这个./gradlew.bat会面临没有代理导致gradle的jar包无法下载的问题，配置代理之后也会出现Gradle Wrapper构建失败的(猜测会不会是多次构建，下载，ip被屏蔽)，经过测试发起确实如此</p><figure><img src="http://47.101.155.205/image-20240111133456579.png" alt="image-20240111133456579" tabindex="0" loading="lazy"><figcaption>image-20240111133456579</figcaption></figure><figure><img src="http://47.101.155.205/image-20240111141317154.png" alt="下载失败提示2" tabindex="0" loading="lazy"><figcaption>下载失败提示2</figcaption></figure><p>可以通过给自动下载的gradle配置代理，实现下载依赖，gradle-*.*/init.d/目录下新建init.gradle内容如下：</p><div class="language-gradle line-numbers-mode" data-highlighter="prismjs" data-ext="gradle" data-title="gradle"><pre><code><span class="line"><span class="token comment">// 全局的Maven仓库</span></span>
<span class="line">allprojects<span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">repositories</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">mavenLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/public/&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/jcenter/&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/google/&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token comment">// gradle下载仓库</span></span>
<span class="line">        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/gradle-plugin/&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://jitpack.io/&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">settingsEvaluated <span class="token punctuation">{</span> settings <span class="token operator">-&gt;</span></span>
<span class="line">    settings<span class="token punctuation">.</span>pluginManagement <span class="token punctuation">{</span></span>
<span class="line">    	<span class="token comment">// 清除了默认的插件仓库配置</span></span>
<span class="line">        <span class="token keyword">repositories</span><span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">repositories</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">mavenLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token comment">// 可以多个地址</span></span>
<span class="line">            maven <span class="token punctuation">{</span></span>
<span class="line">                url <span class="token string">&#39;https://maven.aliyun.com/repository/gradle-plugin/&#39;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://47.101.155.205/image-20240111133847641.png" alt="image-20240111133847641" tabindex="0" loading="lazy"><figcaption>image-20240111133847641</figcaption></figure><figure><img src="http://47.101.155.205/image-20240111133943968.png" alt="image-20240111133943968" tabindex="0" loading="lazy"><figcaption>image-20240111133943968</figcaption></figure><h4 id="下载被屏蔽测试" tabindex="-1"><a class="header-anchor" href="#下载被屏蔽测试"><span>下载被屏蔽测试</span></a></h4><p>通过将配置文件换成gradle仓库，发现会提示要换成https协议，通过allowInsecureProtocol = true可以解决；插件找不到，将下面换的地址换成aliyun的gradle插件地址，发现就能下载了。</p><h4 id="协议不支持报错" tabindex="-1"><a class="header-anchor" href="#协议不支持报错"><span>协议不支持报错</span></a></h4><figure><img src="http://47.101.155.205/image-20240111151523080.png" alt="image-20240111151523080" tabindex="0" loading="lazy"><figcaption>image-20240111151523080</figcaption></figure><p><strong>找不到id: &#39;org.springframework.boot&#39;, version: &#39;3.1.7&#39;这个插件</strong></p><figure><img src="http://47.101.155.205/image-20240111150949507.png" alt="image-20240111150949507" tabindex="0" loading="lazy"><figcaption>image-20240111150949507</figcaption></figure><blockquote><p>最终配置</p></blockquote><figure><img src="http://47.101.155.205/image-20240111145416733.png" alt="image-20240111145416733" tabindex="0" loading="lazy"><figcaption>image-20240111145416733</figcaption></figure><blockquote><p>构建成功</p></blockquote><figure><img src="http://47.101.155.205/image-20240111150358444.png" alt="image-20240111150358444" tabindex="0" loading="lazy"><figcaption>image-20240111150358444</figcaption></figure><h3 id="_4-自定义gradle-wrapper" tabindex="-1"><a class="header-anchor" href="#_4-自定义gradle-wrapper"><span>4.自定义Gradle Wrapper</span></a></h3><p>https://docs.gradle.org/8.5/dsl/org.gradle.api.tasks.wrapper.Wrapper.html</p><p>buidl.gradle文件指定配置的Gralde Wrapper的版本类型，这样就不用在构建时通过参数指定</p><div class="language-gradle" data-highlighter="prismjs" data-ext="gradle" data-title="gradle"><pre><code><span class="line"><span class="token keyword">tasks</span><span class="token punctuation">.</span><span class="token function">named</span><span class="token punctuation">(</span><span class="token string">&#39;wrapper&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    distributionType <span class="token operator">=</span> Wrapper<span class="token punctuation">.</span>DistributionType<span class="token punctuation">.</span>ALL</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h4 id="下载认证" tabindex="-1"><a class="header-anchor" href="#下载认证"><span>下载认证</span></a></h4><p>Gradle Wrapper可以使用Http基本身份验证从服务器下载Gradle压缩包。可以在私人的Gradle仓库设置身份认证。有两个方式进行认证：</p><ol><li>作为系统配置gradle.properties，放在特定的位置；</li><li>在distributionUrl路径中配置身份验证</li></ol><p>官网提示：HTTP 基本身份验证只能与 HTTPS URL 一起使用，而不能与普通 HTTP URL 一起使用。使用基本身份验证时，用户凭据以明文形式发送。</p><blockquote><p>gradle.propertis</p></blockquote><p>gradle.properties相关文档：https://docs.gradle.org/8.5/userguide/build_environment.html#sec:gradle_configuration_properties</p><div class="language-properties" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">systemProp.gradle.wrapperUser</span><span class="token punctuation">=</span><span class="token value attr-value">username</span></span>
<span class="line"><span class="token key attr-name">systemProp.gradle.wrapperPassword</span><span class="token punctuation">=</span><span class="token value attr-value">password</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><blockquote><p>distributionUrl</p></blockquote><div class="language-properties" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">distributionUrl</span><span class="token punctuation">=</span><span class="token value attr-value">https://username:password@somehost/path/to/gradle-distribution.zip</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h4 id="gradle-wrapper代理" tabindex="-1"><a class="header-anchor" href="#gradle-wrapper代理"><span>Gradle Wrapper代理</span></a></h4><p>官网文档：https://docs.gradle.org/8.5/userguide/networking.html#sec:accessing_the_web_via_a_proxy</p><h5 id="sha-256校验" tabindex="-1"><a class="header-anchor" href="#sha-256校验"><span>SHA-256校验</span></a></h5><p>可以通过命令参数或者wrapper.properties的方式配置Hash和校验</p><div class="language-properties" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">distributionSha256Sum</span><span class="token punctuation">=</span><span class="token value attr-value">371cb9fbebbe9880d147f59bab36d61eee122854ef8c9ee1ecf12b82368bcf10</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>命令行参数：--gradle-distribution-sha256-sum</p><h3 id="_5-校验gradle的完整性" tabindex="-1"><a class="header-anchor" href="#_5-校验gradle的完整性"><span>5.校验Gradle的完整性</span></a></h3><p>手动校验Hash和</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># linux</span></span>
<span class="line"><span class="token builtin class-name">cd</span> gradle/wrapper</span>
<span class="line"></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">--location</span> <span class="token parameter variable">--output</span> gradle-wrapper.jar.sha256 https://services.gradle.org/distributions/gradle-<span class="token punctuation">{</span>gradleVersion<span class="token punctuation">}</span>-wrapper.jar.sha256</span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;gradle-wrapper.jar&quot;</span> <span class="token operator">&gt;&gt;</span> gradle-wrapper.jar.sha256</span>
<span class="line"></span>
<span class="line">sha256sum <span class="token parameter variable">--check</span> gradle-wrapper.jar.sha256</span>
<span class="line"></span>
<span class="line"><span class="token comment"># mac</span></span>
<span class="line"><span class="token builtin class-name">cd</span> gradle/wrapper</span>
<span class="line"></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">--location</span> <span class="token parameter variable">--output</span> gradle-wrapper.jar.sha256 https://services.gradle.org/distributions/gradle-<span class="token punctuation">{</span>gradleVersion<span class="token punctuation">}</span>-wrapper.jar.sha256</span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;gradle-wrapper.jar&quot;</span> <span class="token operator">&gt;&gt;</span> gradle-wrapper.jar.sha256</span>
<span class="line"></span>
<span class="line">shasum <span class="token parameter variable">--check</span> gradle-wrapper.jar.sha256</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Windows</span></span>
<span class="line">expected <span class="token operator">=</span> Invoke-RestMethod <span class="token parameter variable">-Uri</span> https://services.gradle.org/distributions/gradle-8.5-wrapper.jar.sha256</span>
<span class="line"></span>
<span class="line">actual <span class="token operator">=</span> <span class="token punctuation">(</span>Get-FileHash gradle<span class="token punctuation">\\</span>wrapper<span class="token punctuation">\\</span>gradle-wrapper.jar <span class="token parameter variable">-Algorithm</span> SHA256<span class="token punctuation">)</span>.Hash.ToLower<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">@<span class="token punctuation">{</span><span class="token variable">$true</span> <span class="token operator">=</span> <span class="token string">&#39;OK: Checksum match&#39;</span><span class="token punctuation">;</span> <span class="token variable">$false</span> <span class="token operator">=</span> <span class="token string">&quot;ERROR: Checksum mismatch!<span class="token variable"><span class="token variable">\`</span>nExpected: $expected<span class="token variable">\`</span></span>nActual:   <span class="token variable">$actual</span>&quot;</span><span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token variable">$actual</span> <span class="token parameter variable">-eq</span> <span class="token variable">$expected</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取hash和</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># linux</span></span>
<span class="line">sha256sum gradle/wrapper/gradle-wrapper.jar</span>
<span class="line"></span>
<span class="line"><span class="token comment"># mac</span></span>
<span class="line">shasum <span class="token parameter variable">--algorithm</span><span class="token operator">=</span><span class="token number">256</span> gradle/wrapper/gradle-wrapper.jar</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Windows</span></span>
<span class="line"><span class="token punctuation">(</span>Get-FileHash gradle<span class="token punctuation">\\</span>wrapper<span class="token punctuation">\\</span>gradle-wrapper.jar <span class="token parameter variable">-Algorithm</span> SHA256<span class="token punctuation">)</span>.Hash.ToLower<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="首次下载gradle-wrapper失败解决方式" tabindex="-1"><a class="header-anchor" href="#首次下载gradle-wrapper失败解决方式"><span>首次下载gradle wrapper失败解决方式</span></a></h2><p>当前项目指定的gradle-wrapper版本是7.2，首次就没有把gradle7.2版本下载成功，这个时候如果要通过./gradlew.bat wrapper升级gradle版本，首先会去下载gradle7.2版本。</p><figure><img src="http://47.101.155.205/image-20240121155842162.png" alt="image-20240121155842162" tabindex="0" loading="lazy"><figcaption>image-20240121155842162</figcaption></figure><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 会在当前项目下生成一个gradle wrapper当前gradle版本的</span></span>
<span class="line">gradle wrapper</span>
<span class="line"></span>
<span class="line">gradle wrapper --gradle-version <span class="token number">7.2</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20240121162823331.png" alt="image-20240121162823331" tabindex="0" loading="lazy"><figcaption>image-20240121162823331</figcaption></figure><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 尝试下载,发现在当前gradle下配置的仓库代理没有生效</span></span>
<span class="line">./gradlew wrapper --gradle-version<span class="token operator">=</span><span class="token number">7.2</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20240121163244863.png" alt="image-20240121163244863" tabindex="0" loading="lazy"><figcaption>image-20240121163244863</figcaption></figure><h3 id="_1-使用代理" tabindex="-1"><a class="header-anchor" href="#_1-使用代理"><span>1.使用代理</span></a></h3><p>要解决下载超时问题，可以通过让下载走代理来解决：在gradle-wrapper.properties中配置了代理</p><div class="language-properties" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">systemProp.http.proxyHost</span><span class="token punctuation">=</span><span class="token value attr-value">127.0.0.1</span></span>
<span class="line"><span class="token key attr-name">systemProp.http.proxyPort</span><span class="token punctuation">=</span><span class="token value attr-value">33210</span></span>
<span class="line"><span class="token key attr-name">systemProp.https.proxyHost</span><span class="token punctuation">=</span><span class="token value attr-value">127.0.0.1</span></span>
<span class="line"><span class="token key attr-name">systemProp.https.proxyPort</span><span class="token punctuation">=</span><span class="token value attr-value">33210</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20240121163741357.png" alt="image-20240121163741357" tabindex="0" loading="lazy"><figcaption>image-20240121163741357</figcaption></figure><p>发现在gradle-wrapper.proper添加了上面的配置文件之后，还是提示下载连接超时，通过jps查询这个下载启动JVM进程id，使用jinfo -sysprops &lt;vimid&gt;发现System的properties中没有代理这些属性(不知道是不是构建工具设置未选择配置)。</p><p><strong>这里没生效，可能是因为选择的gradle来源不对，应该选用gradle-wrapper.properties file</strong></p><figure><img src="http://47.101.155.205/image-20240121212409138.png" alt="image-20240121212409138" tabindex="0" loading="lazy"><figcaption>image-20240121212409138</figcaption></figure><h3 id="_2-环境变量配置代理" tabindex="-1"><a class="header-anchor" href="#_2-环境变量配置代理"><span>2.环境变量配置代理</span></a></h3><p><strong>通过配置环境变量的方式加入这个系统参数，发现还是不能下载，此时配置已经加载到JVM进程中了。</strong></p><p>不能下载的原因是没有配置https的代理，因为下载的地址是https。</p><figure><img src="http://47.101.155.205/image-20240121173653361.png" alt="image-20240121173653361" tabindex="0" loading="lazy"><figcaption>image-20240121173653361</figcaption></figure><div class="language-conf" data-highlighter="prismjs" data-ext="conf" data-title="conf"><pre><code><span class="line">_JAVA_OPTIONS</span>
<span class="line"></span>
<span class="line">-Dhttp.proxyHost=127.0.0.1 -Dhttp.proxyPort=33210 -Dhttps.proxyHost=127.0.0.1 -Dhttps.proxyPort=33210</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20240121204701337.png" alt="image-20240121204701337" tabindex="0" loading="lazy"><figcaption>image-20240121204701337</figcaption></figure><figure><img src="http://47.101.155.205/image-20240121204621509.png" alt="image-20240121204621509" tabindex="0" loading="lazy"><figcaption>image-20240121204621509</figcaption></figure><h3 id="_3-本地替换" tabindex="-1"><a class="header-anchor" href="#_3-本地替换"><span>3.本地替换</span></a></h3><p>也可以手动先下载文件，在配置下载地址指向本地才能解决</p><div class="language-properties" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">distributionUrl</span><span class="token punctuation">=</span><span class="token value attr-value">file:///D:/environment/zip/gradle/gradle-7.2-bin.zip</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20240121174029033.png" alt="image-20240121174029033" tabindex="0" loading="lazy"><figcaption>image-20240121174029033</figcaption></figure><h3 id="_4-使用国内镜像" tabindex="-1"><a class="header-anchor" href="#_4-使用国内镜像"><span>4.使用国内镜像</span></a></h3><p>地址替换成国内镜像地址</p><div class="language-properties" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">distributionUrl</span><span class="token punctuation">=</span><span class="token value attr-value">https://mirrors.cloud.tencent.com/gradle/gradle-6.6.1-bin.zip</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="_5-wrapper-配置镜像" tabindex="-1"><a class="header-anchor" href="#_5-wrapper-配置镜像"><span>5.wrapper 配置镜像</span></a></h3><p>在一个已经下载好gradle wrapper的目录的gradle版本的init.d目录中配置一个init.gradle文件，内容包含你的镜像内容。执行命令，升级gradle版本，下载对应的gradle wrapper，如：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 当前gradle 7.2版本的gradle wrapper已下载好,init.d文件中添加好配置文件,执行命令</span></span>
<span class="line">./gradlew.bat wrapper --gradle-version <span class="token number">8.4</span> <span class="token comment"># 将gradle wrapper升级到8.4</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 再执行</span></span>
<span class="line">./gradlew.bat wrapper</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 如果这样不能下载,建议将gradle环境变量GRADLE_HOME目录中的init.d的文件里面也添加上</span></span>
<span class="line"><span class="token comment"># 如果短时间内，多次从镜像下载这个gradle压缩包，镜像可能会对你的ip做一些限制，导致下载不了</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>init.d目录的init.gradle配置：</p><div class="language-gradle line-numbers-mode" data-highlighter="prismjs" data-ext="gradle" data-title="gradle"><pre><code><span class="line"><span class="token comment">// 全局的Maven仓库</span></span>
<span class="line">allprojects<span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">repositories</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">mavenLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/public/&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/jcenter/&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/google/&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token comment">// gradle下载仓库</span></span>
<span class="line">        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://maven.aliyun.com/repository/gradle-plugin/&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">        maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://jitpack.io/&#39;</span> <span class="token punctuation">}</span></span>
<span class="line">        maven <span class="token punctuation">{</span> </span>
<span class="line">        	url <span class="token string">&#39;https://127.0.0.1:8081/repository/maven-public/&#39;</span> </span>
<span class="line">			<span class="token comment">// 允许http协议</span></span>
<span class="line">			allowInsecureProtocol <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">settingsEvaluated <span class="token punctuation">{</span> settings <span class="token operator">-&gt;</span></span>
<span class="line">    settings<span class="token punctuation">.</span>pluginManagement <span class="token punctuation">{</span></span>
<span class="line">    	<span class="token comment">// 清除了默认的插件仓库配置</span></span>
<span class="line">        <span class="token keyword">repositories</span><span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">repositories</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">mavenLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token comment">// 可以多个地址</span></span>
<span class="line">            maven <span class="token punctuation">{</span></span>
<span class="line">                url <span class="token string">&#39;https://maven.aliyun.com/repository/gradle-plugin/&#39;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            maven <span class="token punctuation">{</span> </span>
<span class="line">        		url <span class="token string">&#39;https://127.0.0.1:8081/repository/maven-public/&#39;</span> </span>
<span class="line">				allowInsecureProtocol <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">        	<span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jitpack" tabindex="-1"><a class="header-anchor" href="#jitpack"><span>JitPack</span></a></h2><p><code>https://jitpack.io/</code> 是一个基于 Git 的 Maven 仓库服务，它的作用是允许开发者将他们的 GitHub 项目转换为 Maven 仓库中的依赖。这为那些没有将其项目发布到 Maven 中央仓库或其他公共 Maven 仓库的开发者提供了一个简便的方式分享和使用他们的库。</p><p>假设有一个名为 &quot;MyLibrary&quot; 的 Java 库，该库托管在 GitHub 上，GitHub 地址为<code>https://github.com/username/MyLibrary</code>。此库有一个标签为 &quot;v1.0.0&quot; 的发布版本。</p><p>如果开发者想在他们的项目中使用 &quot;MyLibrary&quot; 的 &quot;v1.0.0&quot; 版本作为依赖项，他们可以使用 JitPack。在项目的 <code>build.gradle</code> 中，他们可以添加以下配置：</p><div class="language-gradle" data-highlighter="prismjs" data-ext="gradle" data-title="gradle"><pre><code><span class="line"><span class="token keyword">repositories</span> <span class="token punctuation">{</span></span>
<span class="line">    maven <span class="token punctuation">{</span> url <span class="token string">&#39;https://jitpack.io&#39;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">dependencies</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">implementation</span> <span class="token string">&#39;com.github.username:MyLibrary:v1.0.0&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>这里，<code>https://jitpack.io</code> 被添加到 Maven 仓库列表中。然后，<code>implementation &#39;com.github.username:MyLibrary:v1.0.0&#39;</code> 指定了要使用的库及其版本。JitPack 将会按需构建并提供 &quot;MyLibrary&quot; 版本为 &quot;v1.0.0&quot; 的 JAR 文件。</p><p>这样，开发者就可以方便地将 GitHub 上的项目作为 Maven 仓库中的依赖项引入到他们的项目中，而无需将库发布到其他 Maven 仓库。</p><h2 id="java发起http请求" tabindex="-1"><a class="header-anchor" href="#java发起http请求"><span>Java发起Http请求</span></a></h2><h3 id="未设置代理访问www-google-com" tabindex="-1"><a class="header-anchor" href="#未设置代理访问www-google-com"><span>未设置代理访问www.google.com</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>oycm<span class="token punctuation">.</span>spring_mvc_starter<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">BufferedReader</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStreamReader</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">HttpURLConnection</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URL</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpRequestUtil</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 目标 URL</span></span>
<span class="line">        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;http://www.google.com&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 创建 URL 对象</span></span>
<span class="line">        <span class="token class-name">URL</span> apiUrl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 打开 HTTP 连接</span></span>
<span class="line">        <span class="token class-name">HttpURLConnection</span> connection <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpURLConnection</span><span class="token punctuation">)</span> apiUrl<span class="token punctuation">.</span><span class="token function">openConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 设置请求方法（GET、POST 等）</span></span>
<span class="line">        connection<span class="token punctuation">.</span><span class="token function">setRequestMethod</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 获取响应代码</span></span>
<span class="line">        <span class="token keyword">int</span> responseCode <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">getResponseCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Response Code: &quot;</span> <span class="token operator">+</span> responseCode<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 读取响应内容</span></span>
<span class="line">        <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>connection<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> line<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">StringBuilder</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            response<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 输出响应内容</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Response Content:\\n&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 关闭连接</span></span>
<span class="line">        connection<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://47.101.155.205/image-20240121165021306.png" alt="image-20240121165021306" tabindex="0" loading="lazy"><figcaption>image-20240121165021306</figcaption></figure><h3 id="设置http代理访问www-google-com" tabindex="-1"><a class="header-anchor" href="#设置http代理访问www-google-com"><span>设置http代理访问www.google.com</span></a></h3><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;http.proxyHost&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;http.proxyPort&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;33210&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20240121165226467.png" alt="image-20240121165226467" tabindex="0" loading="lazy"><figcaption>image-20240121165226467</figcaption></figure><p>发现设置代理之后，读取响应流会卡住。这个时候也可以来测试下System的properties中有没有加上这个代理参数，通过命令jinfo -sysprops &lt;vimid&gt;来查看。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># eg</span></span>
<span class="line">jinfo <span class="token parameter variable">-sysprops</span> <span class="token number">6088</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20240121170718122.png" alt="image-20240121170718122" tabindex="0" loading="lazy"><figcaption>image-20240121170718122</figcaption></figure>`,131)]))}const r=n(l,[["render",i],["__file","gradle.html.vue"]]),o=JSON.parse('{"path":"/build/gradle.html","title":"gradle","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"Linux安装","slug":"linux安装","link":"#linux安装","children":[]},{"level":3,"title":"Windows安装","slug":"windows安装","link":"#windows安装","children":[]}]},{"level":2,"title":"Gradle Wrapper","slug":"gradle-wrapper","link":"#gradle-wrapper","children":[{"level":3,"title":"1.添加Gradle Wrapper","slug":"_1-添加gradle-wrapper","link":"#_1-添加gradle-wrapper","children":[]},{"level":3,"title":"2.使用Gradle Wrapper","slug":"_2-使用gradle-wrapper","link":"#_2-使用gradle-wrapper","children":[]},{"level":3,"title":"3.升级Gradle Wrapper","slug":"_3-升级gradle-wrapper","link":"#_3-升级gradle-wrapper","children":[]},{"level":3,"title":"4.自定义Gradle Wrapper","slug":"_4-自定义gradle-wrapper","link":"#_4-自定义gradle-wrapper","children":[]},{"level":3,"title":"5.校验Gradle的完整性","slug":"_5-校验gradle的完整性","link":"#_5-校验gradle的完整性","children":[]}]},{"level":2,"title":"首次下载gradle wrapper失败解决方式","slug":"首次下载gradle-wrapper失败解决方式","link":"#首次下载gradle-wrapper失败解决方式","children":[{"level":3,"title":"1.使用代理","slug":"_1-使用代理","link":"#_1-使用代理","children":[]},{"level":3,"title":"2.环境变量配置代理","slug":"_2-环境变量配置代理","link":"#_2-环境变量配置代理","children":[]},{"level":3,"title":"3.本地替换","slug":"_3-本地替换","link":"#_3-本地替换","children":[]},{"level":3,"title":"4.使用国内镜像","slug":"_4-使用国内镜像","link":"#_4-使用国内镜像","children":[]},{"level":3,"title":"5.wrapper 配置镜像","slug":"_5-wrapper-配置镜像","link":"#_5-wrapper-配置镜像","children":[]}]},{"level":2,"title":"JitPack","slug":"jitpack","link":"#jitpack","children":[]},{"level":2,"title":"Java发起Http请求","slug":"java发起http请求","link":"#java发起http请求","children":[{"level":3,"title":"未设置代理访问www.google.com","slug":"未设置代理访问www-google-com","link":"#未设置代理访问www-google-com","children":[]},{"level":3,"title":"设置http代理访问www.google.com","slug":"设置http代理访问www-google-com","link":"#设置http代理访问www-google-com","children":[]}]}],"git":{"updatedTime":1736747696000,"contributors":[{"name":"oycm","username":"oycm","email":"1164864987@qq.com","commits":1,"url":"https://github.com/oycm"}]},"filePathRelative":"build/gradle.md"}');export{r as comp,o as data};
