import{_ as s,c as a,e,o as p}from"./app-DO9Fsueg.js";const t={};function l(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<p>SpringBoot2.1.14.RELEASE版本文档：https://docs.spring.io/spring-boot/docs/2.1.14.RELEASE/reference/html/ Spring SpringBoot2.1.14.RELEASE版本web开发文档：https://docs.spring.io/spring-boot/docs/2.1.14.RELEASE/reference/html/boot-features-developing-web-applications.html#boot-features-spring-mvc</p><p>SpringBoot2.7.12版本文档：https://docs.spring.io/spring-boot/docs/2.7.12/reference/html/</p><h2 id="springmvc" tabindex="-1"><a class="header-anchor" href="#springmvc"><span>SpringMvc</span></a></h2><h3 id="默认的首页" tabindex="-1"><a class="header-anchor" href="#默认的首页"><span>默认的首页/</span></a></h3><p><code>/</code>只有配置文件没有配置静态资源访问路径映射或<code>/</code>没有配置对应请求时，才能自动访问到resource目录下静态资源文件index.html。 例如：在resources/static/目录下有一个index.html，启动之后，访问ip+端口就能访问这个首页。</p><figure><img src="http://47.101.155.205/image-20240107212958806.png" alt="image-20240107212958806" tabindex="0" loading="lazy"><figcaption>image-20240107212958806</figcaption></figure><figure><img src="http://47.101.155.205/image-20240107213044394.png" alt="image-20240107213044394" tabindex="0" loading="lazy"><figcaption>image-20240107213044394</figcaption></figure><p>==favicon.ico浏览器请求的小图标功能已关闭，配置不生效了==</p><h3 id="静态资源访问配置" tabindex="-1"><a class="header-anchor" href="#静态资源访问配置"><span>静态资源访问配置</span></a></h3><h4 id="代码控制" tabindex="-1"><a class="header-anchor" href="#代码控制"><span>代码控制</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 配置文件的配置和这个都会生效</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">registry</span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addResourceHandlers</span><span class="token punctuation">(</span><span class="token class-name">ResourceHandlerRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">&quot;/resources/**&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">&quot;/public&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;classpath:/static/&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">setCachePeriod</span><span class="token punctuation">(</span><span class="token number">31556926</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置文件控制" tabindex="-1"><a class="header-anchor" href="#配置文件控制"><span>配置文件控制</span></a></h4><div class="language-properties" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment"># 将/statics/**请求映射到静态文件访问路径</span></span>
<span class="line"><span class="token key attr-name">spring.mvc.static-path-pattern</span><span class="token punctuation">=</span><span class="token value attr-value">/statics/**</span></span>
<span class="line"><span class="token comment"># 静态资源文件所在的位置,有默认值</span></span>
<span class="line"><span class="token key attr-name">spring.web.resources.static-locations</span><span class="token punctuation">=</span><span class="token value attr-value">classpath:/static/</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="错误处理" tabindex="-1"><a class="header-anchor" href="#错误处理"><span>错误处理</span></a></h3><p>####50x处理</p><h4 id="_404处理" tabindex="-1"><a class="header-anchor" href="#_404处理"><span>404处理</span></a></h4><p>在resources目录error/404.html文件，可以自定义404页面。</p><p>对于不同的请求头信息，404的结果会有不同</p><figure><img src="http://47.101.155.205/image-20240109200505176.png" alt="image-20240109200505176" tabindex="0" loading="lazy"><figcaption>image-20240109200505176</figcaption></figure><figure><img src="http://47.101.155.205/image-20240109200730163.png" alt="image-20240109200730163" tabindex="0" loading="lazy"><figcaption>image-20240109200730163</figcaption></figure><h4 id="全局异常处理" tabindex="-1"><a class="header-anchor" href="#全局异常处理"><span>全局异常处理</span></a></h4><p>异常处理的return要与被拦截的返回数据一致，才能将真正的结果返回。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@ControllerAdvice</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token keyword">extends</span> <span class="token class-name">ResponseEntityExceptionHandler</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Log</span> log <span class="token operator">=</span> <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token annotation punctuation">@ResponseBody</span></span>
<span class="line">    <span class="token class-name">ReturnInfo</span> <span class="token function">handleControllerException</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">HttpStatus</span> status <span class="token operator">=</span> <span class="token function">getStatus</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//return new ReturnInfo(status.value(), ex.getMessage());</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">ReturnInfo</span><span class="token punctuation">.</span><span class="token function">buildErrorInfo</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">HttpStatus</span> <span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Integer</span> statusCode <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;javax.servlet.error.status_code&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>statusCode <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">INTERNAL_SERVER_ERROR</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>statusCode<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="json序列化和反序列化" tabindex="-1"><a class="header-anchor" href="#json序列化和反序列化"><span>Json序列化和反序列化</span></a></h3><div class="language-yaml" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line">spring.mvc.message<span class="token punctuation">-</span>codes<span class="token punctuation">-</span>resolver<span class="token punctuation">-</span>format=postfix_error_code</span>
<span class="line"></span></code></pre></div><h3 id="模板引擎" tabindex="-1"><a class="header-anchor" href="#模板引擎"><span>模板引擎</span></a></h3><p>SpringMvc支持多种模板引擎，以实现前后端不分离 FreeMarker：https://freemarker.apache.org/docs/ Groovy：https://docs.groovy-lang.org/docs/next/html/documentation/template-engines.html#_the_markuptemplateengine Thymeleaf：https://www.thymeleaf.org/ Mustache：https://mustache.github.io/ 如果有使用模板引擎，系统则自动从src/main/resources/templates目录读取模板。</p><h3 id="cors支持" tabindex="-1"><a class="header-anchor" href="#cors支持"><span>CORS支持</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConfiguration</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@Bean</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token function">corsConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">WebMvcConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token annotation punctuation">@Override</span></span>
<span class="line">			<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addCorsMappings</span><span class="token punctuation">(</span><span class="token class-name">CorsRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				registry<span class="token punctuation">.</span><span class="token function">addMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/api/**&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者之间在接口上使用<a href="https://docs.spring.io/spring/docs/5.1.15.RELEASE/javadoc-api/org/springframework/web/bind/annotation/CrossOrigin.html" target="_blank" rel="noopener noreferrer"><code>@CrossOrigin</code></a> 注解。</p><p>##SpringWebFlux</p><p>Spring WebFlux 框架是在Spring框架5.0引入的，与SpringMvc不同，它不需要ServletAPI，是完全异步、非阻塞的，通过Reactor项目实现的响应式流规范。</p><p>在项目中同时引入：spring-boot-starter-web和spring-boot-starter-webflux，SpringBoot会自动注入SpringMvc。</p><p>可以通过SpringApplication.setWebApplicationType(WebApplicationType.REACTIVE)指定以WebFlux模式启动。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@RestController</span></span>
<span class="line"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/users&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyRestController</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/{user}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// ...</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/{user}/customers&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Customer</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserCustomers</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// ...</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/{user}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// ...</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RoutingConfiguration</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@Bean</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">RouterFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServerResponse</span><span class="token punctuation">&gt;</span></span> <span class="token function">monoRouterFunction</span><span class="token punctuation">(</span><span class="token class-name">UserHandler</span> userHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> <span class="token function">route</span><span class="token punctuation">(</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/{user}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token constant">APPLICATION_JSON</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> userHandler<span class="token operator">::</span><span class="token function">getUser</span><span class="token punctuation">)</span></span>
<span class="line">				<span class="token punctuation">.</span><span class="token function">andRoute</span><span class="token punctuation">(</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/{user}/customers&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token constant">APPLICATION_JSON</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> userHandler<span class="token operator">::</span><span class="token function">getUserCustomers</span><span class="token punctuation">)</span></span>
<span class="line">				<span class="token punctuation">.</span><span class="token function">andRoute</span><span class="token punctuation">(</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">&quot;/{user}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token constant">APPLICATION_JSON</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> userHandler<span class="token operator">::</span><span class="token function">deleteUser</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserHandler</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServerResponse</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token class-name">ServerRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// ...</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServerResponse</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserCustomers</span><span class="token punctuation">(</span><span class="token class-name">ServerRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// ...</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServerResponse</span><span class="token punctuation">&gt;</span></span> <span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token class-name">ServerRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// ...</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="序列化和反序列化" tabindex="-1"><a class="header-anchor" href="#序列化和反序列化"><span>序列化和反序列化</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span><span class="token class-name">CodecCustomizer</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConfiguration</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">	<span class="token annotation punctuation">@Bean</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token class-name">CodecCustomizer</span> <span class="token function">myCodecCustomizer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">return</span> codecConfigurer <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token comment">// ...</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="静态资源访问" tabindex="-1"><a class="header-anchor" href="#静态资源访问"><span>静态资源访问</span></a></h3><div class="language-properties" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment"># 映射静态资源请求</span></span>
<span class="line"><span class="token key attr-name">spring.webflux.static-path-pattern</span><span class="token punctuation">=</span><span class="token value attr-value">/resources/**</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 静态资源位置</span></span>
<span class="line">spring.resources.static-locations</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="模板引擎-1" tabindex="-1"><a class="header-anchor" href="#模板引擎-1"><span>模板引擎</span></a></h3><p>支持下面三种模板引擎</p><ul><li><a href="https://freemarker.apache.org/docs/" target="_blank" rel="noopener noreferrer">FreeMarker</a></li><li><a href="https://www.thymeleaf.org/" target="_blank" rel="noopener noreferrer">Thymeleaf</a></li><li><a href="https://mustache.github.io/" target="_blank" rel="noopener noreferrer">Mustache</a></li></ul><p>模板引擎默认配置的路径是src/main/resources/templates</p><h3 id="错误处理-1" tabindex="-1"><a class="header-anchor" href="#错误处理-1"><span>错误处理</span></a></h3><h3 id="filter" tabindex="-1"><a class="header-anchor" href="#filter"><span>Filter</span></a></h3><p>提供了WebFilter接口用作过滤请求和响应。可以通过实现Ordered或者@Order注解控制过滤器执行的顺序。</p><figure><img src="http://47.101.155.205/image-20240109205442653.png" alt="image-20240109205442653" tabindex="0" loading="lazy"><figcaption>image-20240109205442653</figcaption></figure>`,48)]))}const o=s(t,[["render",l],["__file","starter-web.html.vue"]]),u=JSON.parse('{"path":"/springboot/starter-web.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"SpringMvc","slug":"springmvc","link":"#springmvc","children":[{"level":3,"title":"默认的首页/","slug":"默认的首页","link":"#默认的首页","children":[]},{"level":3,"title":"静态资源访问配置","slug":"静态资源访问配置","link":"#静态资源访问配置","children":[]},{"level":3,"title":"错误处理","slug":"错误处理","link":"#错误处理","children":[]},{"level":3,"title":"Json序列化和反序列化","slug":"json序列化和反序列化","link":"#json序列化和反序列化","children":[]},{"level":3,"title":"模板引擎","slug":"模板引擎","link":"#模板引擎","children":[]},{"level":3,"title":"CORS支持","slug":"cors支持","link":"#cors支持","children":[]},{"level":3,"title":"序列化和反序列化","slug":"序列化和反序列化","link":"#序列化和反序列化","children":[]},{"level":3,"title":"静态资源访问","slug":"静态资源访问","link":"#静态资源访问","children":[]},{"level":3,"title":"模板引擎","slug":"模板引擎-1","link":"#模板引擎-1","children":[]},{"level":3,"title":"错误处理","slug":"错误处理-1","link":"#错误处理-1","children":[]},{"level":3,"title":"Filter","slug":"filter","link":"#filter","children":[]}]}],"git":{"updatedTime":1746970709000,"contributors":[{"name":"oycm","username":"oycm","email":"1164864987@qq.com","commits":1,"url":"https://github.com/oycm"}]},"filePathRelative":"springboot/starter-web.md"}');export{o as comp,u as data};
