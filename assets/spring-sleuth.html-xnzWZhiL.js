import{_ as s,c as a,e as p,o as t}from"./app-DO9Fsueg.js";const e={};function l(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="spring-cloud-sleuth" tabindex="-1"><a class="header-anchor" href="#spring-cloud-sleuth"><span>spring-cloud-sleuth</span></a></h1><h2 id="sleuth简介" tabindex="-1"><a class="header-anchor" href="#sleuth简介"><span>sleuth简介</span></a></h2><p>该项目的核心功能迁移到Micrometer tracing：https://micrometer.io/docs/tracing</p><p>迁移指南：https://github.com/micrometer-metrics/tracing/wiki/Spring-Cloud-Sleuth-3.1-Migration-Guide</p><p><code>spring-cloud-starter-sleuth</code>的版本与<code>spring-boot</code>的版本有差异可能导致不能启动。</p><p>Spring文档：https://docs.spring.io/spring-cloud-sleuth/docs/2.2.7.RELEASE/reference/html/</p><p>最新文档地址：https://docs.spring.io/spring-cloud-sleuth/docs/3.1.10-SNAPSHOT/reference/htmlsingle/</p><p>spring-cloud-sleuth借用了<a href="https://research.google.com/pubs/pub36356.html" target="_blank" rel="noopener noreferrer">Dapper</a>技术。</p><p><strong>Span</strong>：基本工作单元。</p><p><strong>Trace</strong>：形成树状结构的一组Span。</p><p><strong>初始化span称为root span。该Span的ID等于Trace的ID。</strong></p><p><strong>Annotation</strong>：用于实时记录事件。可以使用<a href="https://zipkin.io/" target="_blank" rel="noopener noreferrer">Zipkin</a>记录事件。</p><ul><li><strong>cs</strong>：客户端已发送(Client Sent)。表示span开始。</li><li><strong>sr</strong>：服务端已接收(Server Received)。服务端收到并开始处理请求，此时间戳减去<code>cs</code>时间戳表示网络延迟。</li><li><strong>ss</strong>：服务端已发送(Server Sent)。服务端请求处理完成。此时间戳减去<code>sr</code>时间戳表示服务端处理耗时。</li><li><strong>cr</strong>：客户端已接收(Client Received)。表示一个<code>span</code>的结束。<code>cr</code>时间戳减去<code>cs</code>时间戳表示调用全部耗时。</li></ul><figure><img src="http://47.101.155.205/image-20250416134540189.png" alt="Trace和Span流程" tabindex="0" loading="lazy"><figcaption>Trace和Span流程</figcaption></figure><figure><img src="http://47.101.155.205/image-20250416134635133.png" alt="Span的父子关系" tabindex="0" loading="lazy"><figcaption>Span的父子关系</figcaption></figure><h2 id="使用sleuth" tabindex="-1"><a class="header-anchor" href="#使用sleuth"><span>使用sleuth</span></a></h2><p>使用spring-cloud-dependencies管理依赖</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span> </span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${release.train.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span> </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-sleuth<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在没有配置日志打印格式应用，会有默认的日志打印格式(SLF4J的Logback实现功能)：</p><div class="language-markdown" data-highlighter="prismjs" data-ext="md" data-title="md"><pre><code><span class="line">2025-04-16 16:43:10.825  INFO [frontServer,8e2fc1735a5fc5e3,2476ec3b6252548c,true] 21196 --- [Undertow task-2] com.oycm.controller.CustomerController   : /getCus</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>其中INFO后面的格式是[appname,traceId,spanId,exportable]。</p><ul><li><code>appname</code>：表示记录span的应用名称。</li><li><code>traceId</code>：追踪id</li><li><code>spanId</code>：span的id</li><li><code>exportable</code>：表示日志是否记录到zipkin。</li></ul><h2 id="使用zipkin" tabindex="-1"><a class="header-anchor" href="#使用zipkin"><span>使用Zipkin</span></a></h2><h3 id="zipkin服务端" tabindex="-1"><a class="header-anchor" href="#zipkin服务端"><span>Zipkin服务端</span></a></h3><p>官网：https://zipkin.io/pages/quickstart.html</p><p>源码地址：https://github.com/openzipkin/zipkin/tree/master</p><p>java8下载地址：https://search.maven.org/remote_content?g=io.zipkin.java&amp;a=zipkin-server&amp;v=LATEST&amp;c=exec</p><p>最新jar下载地址：https://search.maven.org/remote_content?g=io.zipkin&amp;a=zipkin-server&amp;v=LATEST&amp;c=exec</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">java</span> <span class="token parameter variable">-jar</span> zipkin-server-2.12.9-exec.jar</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="http" tabindex="-1"><a class="header-anchor" href="#http"><span>Http</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span> </span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${release.train.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span> </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-zipkin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认http配置：</p><div class="language-properties" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">spring.zipkin.baseUrl</span><span class="token punctuation">=</span><span class="token value attr-value">http://localhost:9411/</span></span>
<span class="line"><span class="token key attr-name">spring.zipkin.enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>**可以通过自定义<code>ZipkinAutoConfiguration.REPORTER_BEAN_NAME(Reporter)</code>、<code>ZipkinAutoConfiguration.SENDER_BEAN_NAME(Sender)</code> **覆盖默认的配置。</p><h3 id="rabbitmq或kafka" tabindex="-1"><a class="header-anchor" href="#rabbitmq或kafka"><span>RabbitMQ或Kafka</span></a></h3><p>添加依赖：</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span> </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.amqp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-kafka<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span> </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.amqp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-rabbit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置文件调整：</p><div class="language-yaml" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">spring.zipkin.sender.type</span><span class="token punctuation">:</span> kafka</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="采样" tabindex="-1"><a class="header-anchor" href="#采样"><span>采样</span></a></h2><figure><img src="http://47.101.155.205/image-20250416202345724.png" alt="image-20250416202345724" tabindex="0" loading="lazy"><figcaption>image-20250416202345724</figcaption></figure><p>配置设置采样频率：<strong>配置后的对象创建也无法Debug到</strong></p><div class="language-properties" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token comment"># 采样的概率</span></span>
<span class="line"><span class="token key attr-name">spring.sleuth.sampler.probability</span><span class="token punctuation">=</span><span class="token value attr-value">0.01-1</span></span>
<span class="line"><span class="token comment"># 每秒的速率</span></span>
<span class="line"><span class="token key attr-name">spring.sleuth.sampler.rate</span><span class="token punctuation">=</span><span class="token value attr-value">10</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 两者只能同时生效一个</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>采样概率使用算法：http://stackoverflow.com/questions/12817946/generate-a-random-bitset-with-n-1s</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// size 默认100</span></span>
<span class="line"><span class="token comment">// cardinality是概率1-100</span></span>
<span class="line"><span class="token comment">// rnd new Random()对象</span></span>
<span class="line"><span class="token keyword">static</span> <span class="token class-name">BitSet</span> <span class="token function">randomBitSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">,</span> <span class="token keyword">int</span> cardinality<span class="token punctuation">,</span> <span class="token class-name">Random</span> rnd<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">BitSet</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BitSet</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chosen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>cardinality<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> i<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cardinality<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      chosen<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span></span>
<span class="line">      result<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">int</span> j <span class="token operator">=</span> rnd<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> cardinality<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        result<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>chosen<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        result<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        chosen<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> result<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 方法判断是否采样 counter=AtomicInteger</span></span>
<span class="line"><span class="token class-name">BitSet</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token function">mod</span><span class="token punctuation">(</span>counter<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Http请求头<code>X-B3-Flags=1</code>会强制采样，不管配置</strong></p><h3 id="声明式采样" tabindex="-1"><a class="header-anchor" href="#声明式采样"><span>声明式采样</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Autowired</span> <span class="token class-name">Tracer</span> tracer<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 自定义的 Traced 对象</span></span>
<span class="line"><span class="token class-name">DeclarativeSampler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Traced</span><span class="token punctuation">&gt;</span></span> sampler <span class="token operator">=</span> <span class="token class-name">DeclarativeSampler</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Traced</span><span class="token operator">::</span><span class="token function">sampleRate</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// AOP 拦截带有Traced参数的方法</span></span>
<span class="line"><span class="token annotation punctuation">@Around</span><span class="token punctuation">(</span><span class="token string">&quot;@annotation(traced)&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">traceThing</span><span class="token punctuation">(</span><span class="token class-name">ProceedingJoinPoint</span> pjp<span class="token punctuation">,</span> <span class="token class-name">Traced</span> traced<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 创建采样</span></span>
<span class="line">  <span class="token class-name">Sampler</span> decideUsingAnnotation <span class="token operator">=</span> <span class="token class-name">DeclarativeSampler</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>traced<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toSampler</span><span class="token punctuation">(</span>traced<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token class-name">Tracer</span> tracer <span class="token operator">=</span> tracer<span class="token punctuation">.</span><span class="token function">withSampler</span><span class="token punctuation">(</span>decideUsingAnnotation<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// This code looks the same as if there was no declarative override</span></span>
<span class="line">  <span class="token class-name">ScopedSpan</span> span <span class="token operator">=</span> tracer<span class="token punctuation">.</span><span class="token function">startScopedSpan</span><span class="token punctuation">(</span><span class="token function">spanName</span><span class="token punctuation">(</span>pjp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> pjp<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token operator">|</span> <span class="token class-name">Error</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    span<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">throw</span> e<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">    span<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义sampler" tabindex="-1"><a class="header-anchor" href="#自定义sampler"><span>自定义Sampler</span></a></h3><p>通过继承抽象类Sampler重写方法实现自定义采样功能。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Autowired</span> <span class="token class-name">Tracer</span> tracer<span class="token punctuation">;</span></span>
<span class="line"><span class="token annotation punctuation">@Autowired</span> <span class="token class-name">Sampler</span> fallback<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">Span</span> <span class="token function">nextSpan</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Request</span> input<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">Sampler</span> requestBased <span class="token operator">=</span> <span class="token class-name">Sampler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSampled</span><span class="token punctuation">(</span><span class="token keyword">long</span> traceId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;/experimental&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;/static&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">return</span> fallback<span class="token punctuation">.</span><span class="token function">isSampled</span><span class="token punctuation">(</span>traceId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> tracer<span class="token punctuation">.</span><span class="token function">withSampler</span><span class="token punctuation">(</span>requestBased<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextSpan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,51)]))}const o=s(e,[["render",l],["__file","spring-sleuth.html.vue"]]),u=JSON.parse('{"path":"/springcloud/spring-sleuth.html","title":"spring-cloud-sleuth","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"sleuth简介","slug":"sleuth简介","link":"#sleuth简介","children":[]},{"level":2,"title":"使用sleuth","slug":"使用sleuth","link":"#使用sleuth","children":[]},{"level":2,"title":"使用Zipkin","slug":"使用zipkin","link":"#使用zipkin","children":[{"level":3,"title":"Zipkin服务端","slug":"zipkin服务端","link":"#zipkin服务端","children":[]},{"level":3,"title":"Http","slug":"http","link":"#http","children":[]},{"level":3,"title":"RabbitMQ或Kafka","slug":"rabbitmq或kafka","link":"#rabbitmq或kafka","children":[]}]},{"level":2,"title":"采样","slug":"采样","link":"#采样","children":[{"level":3,"title":"声明式采样","slug":"声明式采样","link":"#声明式采样","children":[]},{"level":3,"title":"自定义Sampler","slug":"自定义sampler","link":"#自定义sampler","children":[]}]}],"git":{"updatedTime":1744808829000,"contributors":[{"name":"oycm","username":"oycm","email":"1164864987@qq.com","commits":3,"url":"https://github.com/oycm"},{"name":"ouyangcm","username":"ouyangcm","email":"mingorg@163.com","commits":3,"url":"https://github.com/ouyangcm"}]},"filePathRelative":"springcloud/spring-sleuth.md"}');export{o as comp,u as data};
