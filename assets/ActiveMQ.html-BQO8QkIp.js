import{_ as a,c as s,e as t,o as e}from"./app-DO9Fsueg.js";const p={};function l(c,n){return e(),s("div",null,n[0]||(n[0]=[t(`<h1 id="activemq" tabindex="-1"><a class="header-anchor" href="#activemq"><span>ActiveMQ</span></a></h1><h2 id="_1-activemq介绍" tabindex="-1"><a class="header-anchor" href="#_1-activemq介绍"><span>1.ActiveMQ介绍</span></a></h2><p>ActiveMQ是开源的、多协议的，基于Java开发的消息中间件。</p><p>ActiveMQ现在有两个可选的版本：classic-经典版、Artemis-下一代版本。</p><p>Artemis初始迁移文档：https://activemq.apache.org/components/artemis/migration</p><p>Artemis开发路线：https://activemq.apache.org/activemq-artemis-roadmap</p><figure><img src="http://47.101.155.205/image-20231202213702422.png" alt="JVM内存模型" tabindex="0" loading="lazy"><figcaption>JVM内存模型</figcaption></figure><p>classic-经典版下载地址：https://activemq.apache.org/components/classic/download/</p><p>classic版本文档：https://activemq.apache.org/components/classic/documentation</p><p>Artemis版本下载地址：https://activemq.apache.org/components/artemis/download/</p><p>Artemis版本文档：https://activemq.apache.org/components/artemis/documentation/</p><h2 id="_2-activemq入门" tabindex="-1"><a class="header-anchor" href="#_2-activemq入门"><span>2.ActiveMQ入门</span></a></h2><p>官网文档：https://activemq.apache.org/getting-started#AdditionalResources</p><p>安装目录文档：<code>docs/WebConsole-README.txt</code></p><h3 id="_2-1-预安装要求" tabindex="-1"><a class="header-anchor" href="#_2-1-预安装要求"><span>2.1.预安装要求</span></a></h3><p>内存：</p><p>ActiveMQ5.x二进制发行版需要60MB的磁盘空间安装(需要额外的磁盘空间来存储持久性消息到磁盘)。</p><p>ActiveMQ 5.x 源码或开发者版本需要约 300 MB 的空闲磁盘空间。</p><p>系统：</p><p>Windows系统：Windows XP SP2,Windows 2000,Windows Vista,Window 7.</p><p>Unix系统：Ubuntu Linux,Powerdog Linux,MacOS,AIX,HP-UX,Solaris,或者任何支持Java的Unix系统。</p><p>环境：</p><p>JRE1.8，ActiveMQ5.15.0之前可以是1.7，ActiveMQ5.10.0之前可以是1.6。</p><p>JAVA_HOME环境变量必须设置为JRE安装目录。</p><p>maven3.0.0构建工具(需要重新编译源码)。</p><p>将要使用的jar添加到类路径中(需要重新编译源码时)。</p><h3 id="_2-2-windows安装" tabindex="-1"><a class="header-anchor" href="#_2-2-windows安装"><span>2.2.Windows安装</span></a></h3><h4 id="解压缩安装" tabindex="-1"><a class="header-anchor" href="#解压缩安装"><span>解压缩安装</span></a></h4><figure><img src="http://47.101.155.205/image-20231204221338663.png" alt="image-20231204221338663" tabindex="0" loading="lazy"><figcaption>image-20231204221338663</figcaption></figure><ol><li>https://activemq.apache.org/download地址下载apache-activemq-x.x.x-bin.zip文件，将zip文件解压到安装目录。</li><li>启动ActiveMQ</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Windos命令启动</span></span>
<span class="line"><span class="token builtin class-name">cd</span> <span class="token punctuation">[</span>activemq_install_dir<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在安装目录的bin目录下</span></span>
<span class="line">bin<span class="token punctuation">\\</span>activemq start</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20231205213933921.png" alt="启动报错,java版本太低" tabindex="0" loading="lazy"><figcaption>启动报错,java版本太低</figcaption></figure><figure><img src="http://47.101.155.205/image-20231205214239759.png" alt="image-20231205214239759" tabindex="0" loading="lazy"><figcaption>image-20231205214239759</figcaption></figure><p><strong>ActiveMQ的启动会相对于当前目录创建工作目录，为了能在正确的位置创建工作目录，ActiveMQ必须中安装目录启动。</strong></p><ol start="3"><li>测试是否安装成功： <ol><li>打开浏览器管理界面：http://127.0.0.1:8161/admin/，登录名：admin，密码：admin</li><li>选择<code>Queues</code>，添加一个队列的名称，点击<code>create</code></li><li>点击<code>Send to</code>发送测试消息</li></ol></li><li>启动成功，在控制台会有日志，也可以在[activemq_install_dir]/data/activemq.log查看日志</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">Apache ActiveMQ <span class="token number">5.11</span>.1 <span class="token punctuation">(</span>localhost, ID:ntbk11111-50816-1428933306116-0:1<span class="token punctuation">)</span> started <span class="token operator">|</span> org.apache.activemq.broker.BrokerService <span class="token operator">|</span> main</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><ol start="5"><li>ActiveMQ默认61616端口，可以另开窗口测试端口是否被占用。</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">netstat</span> -an<span class="token operator">|</span><span class="token function">find</span> <span class="token string">&quot;61616&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># linux系统</span></span>
<span class="line"><span class="token function">netstat</span> <span class="token parameter variable">-nl</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">61616</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20231205214434574.png" alt="image-20231205214434574" tabindex="0" loading="lazy"><figcaption>image-20231205214434574</figcaption></figure><ol start="6"><li>停止ActiveMQ</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 在控制台可以ctel+c停止,后台运行停止使用命令</span></span>
<span class="line"><span class="token builtin class-name">cd</span> <span class="token punctuation">[</span>activemq_install_dir<span class="token punctuation">]</span>/bin</span>
<span class="line">./activemq stop</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20231205214542401.png" alt="image-20231205214542401" tabindex="0" loading="lazy"><figcaption>image-20231205214542401</figcaption></figure><p><strong>源代码安装：</strong></p><ol><li>https://activemq.apache.org/download地址下载apache-activemq-x.x.x-source-release.zip文件，将zip文件解压到安装目录。</li><li>在安装目录执行mvn clean install命令，如果失败，添加-Dmaven.test.skip=true参数执行。也可以通过idea执行mvn idea:idea。</li><li>启动MQ：同解压缩安装方式启动</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> <span class="token punctuation">[</span>activemq_install_dir<span class="token punctuation">]</span><span class="token punctuation">\\</span>assembly<span class="token punctuation">\\</span>target</span>
<span class="line"><span class="token function">unzip</span> activemq-x.x-SNAPSHOT.zip</span>
<span class="line"><span class="token builtin class-name">cd</span> activemq-x.x-SNAPSHOT</span>
<span class="line">bin<span class="token punctuation">\\</span>activemq</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h4 id="快照安装" tabindex="-1"><a class="header-anchor" href="#快照安装"><span>快照安装</span></a></h4><p>Windows开发者快照版本地址：https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/，根据下载文件类型，可以安装前面的解压缩安装或源代码安装方式。</p><h3 id="_2-3-unix系统安装" tabindex="-1"><a class="header-anchor" href="#_2-3-unix系统安装"><span>2.3.Unix系统安装</span></a></h3><h4 id="二进制版本安装" tabindex="-1"><a class="header-anchor" href="#二进制版本安装"><span>二进制版本安装</span></a></h4><ol><li>下载压缩文件，Unix系统可以使用浏览器或者工具：wget、scp、ftp等</li><li>启动ActiveMQ</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># wget下载命令</span></span>
<span class="line"><span class="token function">wget</span> http://activemq.apache.org/path/tofile/apache-activemq-x.x.x-bin.tar.gz</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 解压缩文件</span></span>
<span class="line"><span class="token builtin class-name">cd</span> <span class="token punctuation">[</span>activemq_install_dir<span class="token punctuation">]</span></span>
<span class="line"><span class="token function">tar</span> zxvf activemq-x.x.x-bin.tar.gz</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动ActiveMQ</span></span>
<span class="line"><span class="token builtin class-name">cd</span> <span class="token punctuation">[</span>activemq_install_dir<span class="token punctuation">]</span>/bin</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 前台启动,窗口关闭则停止</span></span>
<span class="line">./activemq console</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 后台启动</span></span>
<span class="line">./activemq start</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>验证是否启动成功</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 默认端口是否被占用</span></span>
<span class="line"><span class="token function">netstat</span> -nl<span class="token operator">|</span><span class="token function">grep</span> <span class="token number">61616</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h4 id="osx系统使用homebrew安装" tabindex="-1"><a class="header-anchor" href="#osx系统使用homebrew安装"><span>OSX系统使用Homebrew安装</span></a></h4><ol><li>安装Homebrew包管理器:brew install apache-activemq</li></ol><figure><img src="http://47.101.155.205/image-20231205203823776.png" alt="image-20231205203823776" tabindex="0" loading="lazy"><figcaption>image-20231205203823776</figcaption></figure><h4 id="源代码安装" tabindex="-1"><a class="header-anchor" href="#源代码安装"><span>源代码安装</span></a></h4><ol><li>下载activemq-parent-x.x.x-source-release.zip文件，解压缩文件</li></ol><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">tar</span> zxvf activemq.x.x-src.tar.gz</span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">cd</span> <span class="token punctuation">[</span>activemq_install_dir<span class="token punctuation">]</span></span>
<span class="line">mvn clean <span class="token function">install</span> <span class="token comment"># 构建失败添加-Dmaven.test.skip=true这个参数</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 如果构建过程中出现java.lang.OutOfMemoryError,执行</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">MAVEN_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-Xmx512M&quot;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h4 id="快照安装-1" tabindex="-1"><a class="header-anchor" href="#快照安装-1"><span>快照安装</span></a></h4><p>地址：https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/</p><ol><li>选中一个版本，下载<code>activemq-x.x.x-tar.gz</code>.文件</li><li>解压缩文件</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 解压缩二进制文件</span></span>
<span class="line"><span class="token function">tar</span> zxvf activemq-x.x.x.tar.gz</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 解压缩源码文件</span></span>
<span class="line"><span class="token function">tar</span> zxvf activemq-x.x.x-src.tar.gz</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 切目录,给命令赋权 </span></span>
<span class="line"><span class="token comment"># 读、写、执行的权限分别是4、2、1 </span></span>
<span class="line"><span class="token builtin class-name">cd</span> <span class="token punctuation">[</span>activemq_install_dir<span class="token punctuation">]</span>/bin</span>
<span class="line"><span class="token function">chmod</span> <span class="token number">755</span> activemq</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-其他启动activemq的方式" tabindex="-1"><a class="header-anchor" href="#_2-4-其他启动activemq的方式"><span>2.4.其他启动ActiveMQ的方式</span></a></h3><p>官网文档：https://activemq.apache.org/run-broker</p><h4 id="_2-4-1-嵌入方式启动" tabindex="-1"><a class="header-anchor" href="#_2-4-1-嵌入方式启动"><span>2.4.1.嵌入方式启动</span></a></h4><p>官网文档：https://activemq.apache.org/how-do-i-embed-a-broker-inside-a-connection</p><h4 id="_2-4-2-spring启动" tabindex="-1"><a class="header-anchor" href="#_2-4-2-spring启动"><span>2.4.2.Spring启动</span></a></h4><p>配置文件</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> </span>
<span class="line">  <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span> </span>
<span class="line">  <span class="token attr-name"><span class="token namespace">xmlns:</span>amq</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://activemq.apache.org/schema/core<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span></span>
<span class="line">  <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd</span>
<span class="line">  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">&lt;!--  lets create an embedded ActiveMQ Broker --&gt;</span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">amq:</span>broker</span> <span class="token attr-name">useJmx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token attr-name">persistent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">amq:</span>transportConnectors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">amq:</span>transportConnector</span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tcp://localhost:0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">amq:</span>transportConnectors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">amq:</span>broker</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">   <span class="token comment">&lt;!--  ActiveMQ destinations to use,指定一个队列名称  --&gt;</span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">amq:</span>queue</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>destination<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">physicalName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.apache.activemq.spring.Test.spring.embedded<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">&lt;!-- JMS ConnectionFactory to use, configuring the embedded broker using XML --&gt;</span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">amq:</span>connectionFactory</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jmsFactory<span class="token punctuation">&quot;</span></span> <span class="token attr-name">brokerURL</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vm://localhost<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">  </span>
<span class="line"></span>
<span class="line">  <span class="token comment">&lt;!-- Spring JMS Template --&gt;</span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myJmsTemplate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.jms.core.JmsTemplate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>connectionFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token comment">&lt;!-- lets wrap in a pool to avoid creating a connection per send --&gt;</span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.jms.connection.SingleConnectionFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>targetConnectionFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">local</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jmsFactory<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>consumerJmsTemplate<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.jms.core.JmsTemplate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>connectionFactory<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jmsFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">&lt;!-- a sample POJO which uses a Spring JmsTemplate --&gt;</span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>producer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.apache.activemq.spring.SpringProducer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>template<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myJmsTemplate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ref</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>destination<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ref</span> <span class="token attr-name">bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>destination<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>messageCount<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">&lt;!-- a sample POJO consumer --&gt;</span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>consumer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.apache.activemq.spring.SpringConsumer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>template<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>consumerJmsTemplate<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>destination<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>destination<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-5-web控制台" tabindex="-1"><a class="header-anchor" href="#_2-5-web控制台"><span>2.5.Web控制台</span></a></h3><p>官网文档：https://activemq.apache.org/web-console</p><p>本地默认地址：<code>http://localhost:8161/admin</code>。</p><p>在conf/jetty-real.properties可以配置账号和密码。</p><h3 id="_2-6-jmx观察启动状态" tabindex="-1"><a class="header-anchor" href="#_2-6-jmx观察启动状态"><span>2.6.JMX观察启动状态</span></a></h3><p>官网文档：https://activemq.apache.org/jmx</p><h3 id="_2-7-样例" tabindex="-1"><a class="header-anchor" href="#_2-7-样例"><span>2.7.样例</span></a></h3><p>官网文档：https://activemq.apache.org/web-samples</p><p>web演示在5.8版本之前，在http://localhost:8161/demo可以之间访问，在5.8版本之后，默认配置是不包含的。可以在启动时使用配置开启。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">bin/activemq console xbean:examples/conf/activemq-demo.xml</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20231206210110164.png" alt="image-20231206210110164" tabindex="0" loading="lazy"><figcaption>image-20231206210110164</figcaption></figure><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">activemq start xbean:<span class="token punctuation">..</span>/examples/conf/activemq-demo.xml</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20231206210336750.png" alt="image-20231206210336750" tabindex="0" loading="lazy"><figcaption>image-20231206210336750</figcaption></figure><h2 id="_3-activemq特性" tabindex="-1"><a class="header-anchor" href="#_3-activemq特性"><span>3.ActiveMQ特性</span></a></h2><p>文档：https://activemq.apache.org/features</p><h3 id="_3-1-active-groups" tabindex="-1"><a class="header-anchor" href="#_3-1-active-groups"><span>3.1.Active Groups</span></a></h3><figure><img src="http://47.101.155.205/image-20231206212716409.png" alt="image-20231206212716409" tabindex="0" loading="lazy"><figcaption>image-20231206212716409</figcaption></figure><p>一种将多个消费者组织在一起以消费消息的方式。组织消费组；实现消息负载均衡；故障转移；并行处理消息。</p><h3 id="_3-2-activemq-real-time" tabindex="-1"><a class="header-anchor" href="#_3-2-activemq-real-time"><span>3.2.ActiveMQ Real Time</span></a></h3><p>低延迟高吞吐量协作实时应用程序的需求而设计。</p><p>支持消费组消费，动态管理消费组(加入和离开)</p><figure><img src="http://47.101.155.205/image-20231206213456974.png" alt="image-20231206213456974" tabindex="0" loading="lazy"><figcaption>image-20231206213456974</figcaption></figure><h4 id="广播" tabindex="-1"><a class="header-anchor" href="#广播"><span>广播</span></a></h4><p>点对点的消费例子(广播)(路由)</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>activeblaze<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token class-name">BlazeChannelFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeChannelFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">BlazeChannel</span> sender <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//start the channel and send a message</span></span>
<span class="line">sender<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">String</span> destination <span class="token operator">=</span> <span class="token string">&quot;foo.bar&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">BlazeMessage</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeMessage</span><span class="token punctuation">(</span><span class="token string">&quot;test payload&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">sender<span class="token punctuation">.</span><span class="token function">broadcast</span><span class="token punctuation">(</span>destination<span class="token punctuation">,</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//shutdown the sender</span></span>
<span class="line">sender<span class="token punctuation">.</span><span class="token function">shutDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//You can similarly subscribe to Topic messages by using a listener</span></span>
<span class="line"><span class="token comment">// 监听队列</span></span>
<span class="line"><span class="token class-name">BlazeChannel</span> receiver <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">receiver<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//add a listener</span></span>
<span class="line"></span>
<span class="line">receiver<span class="token punctuation">.</span><span class="token function">addBlazeTopicMessageListener</span><span class="token punctuation">(</span>destination<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BlazeMessageListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token class-name">BlazeMessage</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Got a msg: &quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">receiver<span class="token punctuation">.</span><span class="token function">shutDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="消费者组" tabindex="-1"><a class="header-anchor" href="#消费者组"><span>消费者组</span></a></h4><p>消费组：支持加入、离开明确的组，也可以加入多个组。每个组都有一个全局唯一的id和名称。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>activeblaze<span class="token punctuation">.</span>group<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token class-name">BlazeGroupChannelFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeGroupChannelFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">BlazeGroupChannel</span> channel <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createGroupChannel</span><span class="token punctuation">(</span><span class="token string">&quot;My Channel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//join a group</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">addToGroup</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//listen for other members</span></span>
<span class="line"></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">addMemberChangedListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MemberChangedListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">memberStarted</span><span class="token punctuation">(</span><span class="token class-name">Member</span> member<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Member started&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">memberStopped</span><span class="token punctuation">(</span><span class="token class-name">Member</span> member<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Member stopped&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line">            </span>
<span class="line"> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期"><span>生命周期</span></a></h4><p>Blaze Channels有5个状态</p><ol><li>Constructed：通道未初始化或者已经被关闭</li><li>initialized:您可以通过调用 Channel 的 init() 方法来显式初始化 Channel。此时其配置已设置</li><li>started:这将隐式初始化通道并启动通道与其对等点的底层通信</li><li>stopped:这将停止通信,但是您可以稍后重新启动通道</li><li>shut down:这将隐式调用 stop() 并解构通道。可以再次重新初始化通道,建议对通道应用配置更改,将其关闭并重新启动</li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"># initialized</span>
<span class="line"><span class="token class-name">BlazeChannelFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeChannelFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">BlazeChannel</span> channel <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"># started</span>
<span class="line"><span class="token class-name">BlazeChannelFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeChannelFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">BlazeChannel</span> channel <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"># stopped</span>
<span class="line"><span class="token class-name">BlazeChannelFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeChannelFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">BlazeChannel</span> channel <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// do something else</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token comment">//re-start</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"># shut down</span>
<span class="line"><span class="token class-name">BlazeChannelFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeChannelFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">BlazeChannel</span> channel <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">shutDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// change the congiguration</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBroadcastURI</span><span class="token punctuation">(</span><span class="token string">&quot;tcp://localhost:60661&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//re-start</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="the-activeblaze-message-type" tabindex="-1"><a class="header-anchor" href="#the-activeblaze-message-type"><span>The ActiveBlaze Message type</span></a></h4><p>在ActiveBlaze中，消息和事件的解析基础是BlazeMessage.BlazeMessage是一个键值对Map的映射，其中key是String，value是基本对象。支持一下类型：</p><figure><img src="http://47.101.155.205/image-20231206215426193.png" alt="image-20231206215426193" tabindex="0" loading="lazy"><figcaption>image-20231206215426193</figcaption></figure><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>activeblaze<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">BlazeMessage</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">msg<span class="token punctuation">.</span><span class="token function">setFloatValue</span><span class="token punctuation">(</span><span class="token string">&quot;rate&quot;</span><span class="token punctuation">,</span><span class="token number">0.94f</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"># 设置其他对象</span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>activeblaze<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">BlazeMessage</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeMessage</span><span class="token punctuation">(</span><span class="token string">&quot;test string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> text <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">BlazeMessage</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">msg<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;test string&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> text <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data <span class="token operator">=</span> <span class="token function">getSomeData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">BlazeMessage</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeMessage</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result  <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">BlazeMessage</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">msg<span class="token punctuation">.</span><span class="token function">setBytes</span><span class="token punctuation">(</span>&quot;data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">BlazeMessage</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeMessage</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Date</span> result <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">BlazeMessage</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlazeMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">msg<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Object</span> result <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-broker-camel-component" tabindex="-1"><a class="header-anchor" href="#_3-3-broker-camel-component"><span>3.3.Broker Camel Component</span></a></h3><p>5.9版本才开始可用</p><p>在 ActiveMQ 代理中嵌入 Apache Camel 为利用 Camel 的集成功能扩展消息代理提供了极大的灵活性。 Apache Camel 路由的另一个好处是，如果您使用 activemq 组件，您可以避免远程连接到 ActiveMQ 的序列化和网络成本。</p><p>但是，如果您想要更改流经 ActiveMQ 消息代理本身的消息行为，您将只能使用附带的 ActiveMQ 代理集拦截器 - 或开发您自己的代理插件，然后将其作为 jar 引入到 ActiveMQ 代理的类路径中。 broker Camel 组件使这一切变得更加容易。它会在消息通过代理本身时拦截消息，从而允许在将消息持久保存到消息存储或传递给最终消费者之前对其进行修改和操作。</p><p>例如通过定义在代理的 JVM 内运行的 CamelContext broker 组件可以拦截所有消息比如说，发布到主题，然后将它们发布到队列，并在此过程中更改它们的优先级：</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token operator">&lt;</span>route id<span class="token operator">=</span><span class="token string">&quot;setPriority&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">   <span class="token operator">&lt;</span>from uri<span class="token operator">=</span><span class="token string">&quot;broker:topic:test.broker.&gt;&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span>setHeader headerName<span class="token operator">=</span><span class="token string">&quot;JMSPriority&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">         <span class="token generics"><span class="token punctuation">&lt;</span>constant<span class="token punctuation">&gt;</span></span><span class="token number">9</span><span class="token operator">&lt;</span><span class="token operator">/</span>constant<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span><span class="token operator">/</span>setHeader<span class="token operator">&gt;</span></span>
<span class="line">   <span class="token operator">&lt;</span><span class="token keyword">to</span> <span class="token namespace">uri</span><span class="token operator">=</span><span class="token string">&quot;broker:queue:test.broker.component.queue&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>route<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>注意：</p><ul><li>代理组件仅在启动时将拦截添加到代理中 - 因此代理组件在使用之前不会向正在运行的代理添加任何开销 - 然后开销将微不足道。</li><li>当代理收到消息时，但在处理消息（保留或路由到目的地）之前，消息将被代理组件拦截。</li><li>Exchange 上的 <code>IN</code> 消息是<code>CamelMessage</code>，也是 JMS 消息（从 STOMP/MQTT/AMQP 等通过 ActiveMQ 路由的消息是总是翻译成 JMS 消息）。</li><li><a href="https://activemq.apache.org/wildcards" target="_blank" rel="noopener noreferrer">通配符</a>可用于目标以拦截来自与通配符匹配的目标的消息。</li><li>拦截后，您必须显式地将消息发送回代理组件 - 这允许您删除选择的消息（通过不发送） - 或者像上面的情况一样 - 将消息重新路由到不同的目的地。</li></ul><p>不过，有一个特意的警告，只有拦截的消息才能发送到 <code>broker</code>组件。例如，从另一个组件路由 Camel 消息，例如<code>file</code>，将导致错误。</p><p>已添加到 <code>activemq-broker</code>包中以支持 <code>broker</code>组件的额外类。它们允许在不使用 JMX 的情况下询问正在运行的代理的状态。这些类是：</p><ul><li><a href="http://activemq.apache.org/maven/5.9.0/apidocs/org/apache/activemq/broker/view/MessageBrokerView.html" target="_blank" rel="noopener noreferrer">org.apache.activemq.broker.view.MessageBrokerView</a> - 提供检索代理统计信息的方法</li><li>从 <code>org.apache.activemq.broker.view.MessageBrokerView</code> - 您可以检索 <a href="http://activemq.apache.org/maven/5.9.0/apidocs/org/apache/activemq/broker/view/BrokerDestinationView.html" target="_blank" rel="noopener noreferrer">org.apache.activemq.broker.view.BrokerDestinationView</a>对于特定目的地。</li></ul><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>camelContext</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>camel<span class="token punctuation">&quot;</span></span> <span class="token attr-name">trace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://camel.apache.org/schema/spring<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>route</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>routeAboveQueueLimitTest<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>from</span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>broker:queue:test.broker.queue<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>choice</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spel</span><span class="token punctuation">&gt;</span></span>#{@destinationView.queueSize &gt;= 100}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spel</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>to</span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>broker:queue:test.broker.processLater<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>otherwise</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>to</span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>broker:queue:test.broker.queue<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>otherwise</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>choice</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>route</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>camelContext</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>brokerView<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.apache.activemq.broker.view.MessageBrokerView<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>testBroker<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>destinationView<span class="token punctuation">&quot;</span></span> <span class="token attr-name">factory-bean</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>brokerView<span class="token punctuation">&quot;</span></span> <span class="token attr-name">factory-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getDestinationView<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test.broker.component.route<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是使用 Camel 消息路由器模式。注意，在when子句中使用了Spring表达式语言拼写。</p><h3 id="_3-4-clustering-集群" tabindex="-1"><a class="header-anchor" href="#_3-4-clustering-集群"><span>3.4.Clustering]集群</span></a></h3><p>集群是一个很大的话题，对于不同的人来说通常意味着不同的事情。我们将尝试列出集群的各个方面以及它们与 ActiveMQ 的关系。</p><h4 id="_3-4-1-队列消费者集群" tabindex="-1"><a class="header-anchor" href="#_3-4-1-队列消费者集群"><span>3.4.1.队列消费者集群</span></a></h4><p>ActiveMQ 支持跨消费者的队列上消息的可靠高性能负载平衡。在企业集成中，这种情况称为<a href="http://www.eaipatterns.com/CompetingConsumers.html" target="_blank" rel="noopener noreferrer">竞争消费者</a>模式。下图说明了这个概念：</p><figure><img src="http://47.101.155.205/image-20231206220634696.png" alt="image-20231206220634696" tabindex="0" loading="lazy"><figcaption>image-20231206220634696</figcaption></figure><p>该解决方案接收生产者发送的消息，将它们排队并在所有注册的消费者之间分发它们。这样做有很多好处：</p><ul><li>负载以非常动态的方式分布。可以在高负载期间配置其他消费者并将其附加到队列，而无需修改队列中的任何配置，因为新消费者将表现为另一个竞争消费者。</li><li>比使用负载均衡器的系统具有更好的可用性。负载均衡器通常依靠监控系统来找出哪些真实服务器不可用。对于竞争的消费者，失败的消费者不会竞争消息，因此即使没有监视，消息也不会传递给它。</li><li>高可靠性，如果一个消费者失败，任何未确认的消息都会重新传递给队列上的其他消费者。</li></ul><p>缺点是，这种模式在需要订单处理的系统中可能并不理想。为了在保持优势的同时缓解此问题，竞争消费者模式应与其他 ActiveMQ功能（例如如<a href="https://activemq.apache.org/how-do-i-preserve-order-of-messages" target="_blank" rel="noopener noreferrer">ActiveMQ的FAQ常见问题解答中所述</a>的<a href="https://activemq.apache.org/exclusive-consumer" target="_blank" rel="noopener noreferrer">排他消费者</a>和<a href="https://activemq.apache.org/message-groups" target="_blank" rel="noopener noreferrer">消息组</a> 组合使用。</p><h4 id="_3-4-2-broker-clusters" tabindex="-1"><a class="header-anchor" href="#_3-4-2-broker-clusters"><span>3.4.2.Broker clusters</span></a></h4><p>JMS 上下文中最常见的集群思维模型是存在一组 JMS 代理，并且 JMS 客户端将连接到其中一个；那么如果 JMS 代理出现故障，它将自动重新连接到另一个代理。</p><p>我们在 JMS 客户端中使用 <code>failover://</code> 协议来实现这一点。有关如何配置故障转移协议的详细信息，请参阅<a href="https://activemq.apache.org/failover-transport-reference" target="_blank" rel="noopener noreferrer">故障转移传输参考</a>页面。 <strong>注意</strong>：ActiveMQ 3.x 中的<code>reliable://</code>协议现已更改为<code>failover://</code> 协议</p><p>如果我们只是在网络上运行多个代理并使用 <a href="https://activemq.apache.org/static-transport-reference" target="_blank" rel="noopener noreferrer">静态发现</a> 或 ，然后客户端可以轻松地从一个代理故障转移到另一个代理。然而，独立经纪商并不了解其他经纪商的消费者；因此，如果某个代理上没有消费者，消息可能会堆积起来而不会被消耗。我们有一个突出的<a href="http://issues.apache.org/activemq/browse/AMQ-816" target="_blank" rel="noopener noreferrer">功能请求</a>来在客户端解决这个问题 - 但目前这个问题的解决方案是创建一个代理网络来存储和转发代理之间的消息。</p><h4 id="_3-4-3-discovery-of-brokers" tabindex="-1"><a class="header-anchor" href="#_3-4-3-discovery-of-brokers"><span>3.4.3.Discovery of brokers</span></a></h4><p>我们支持使用<a href="https://activemq.apache.org/static-transport-reference" target="_blank" rel="noopener noreferrer">静态发现</a>自动发现代理<a href="https://activemq.apache.org/discovery" target="_blank" rel="noopener noreferrer">自动发现</a> &gt; 或 <a href="https://activemq.apache.org/discovery-transport-reference" target="_blank" rel="noopener noreferrer">动态发现</a>，以便客户端可以自动检测并连接到代理逻辑组中的代理，也可以让代理发现并连接到其他代理经纪人形成大型网络。</p><h4 id="_3-4-4-networks-of-brokers" tabindex="-1"><a class="header-anchor" href="#_3-4-4-networks-of-brokers"><span>3.4.4.Networks of brokers</span></a></h4><p>https://activemq.apache.org/networks-of-brokers</p><p>如果您使用<a href="https://activemq.apache.org/topologies" target="_blank" rel="noopener noreferrer">客户端/服务器或中心/辐射型拓扑</a>并且您有许多客户端和许多代理，则有可能一个代理有生产者但没有消费者，因此消息会堆积起来而没有被处理。为了避免这种情况，ActiveMQ 支持<a href="https://activemq.apache.org/networks-of-brokers" target="_blank" rel="noopener noreferrer">代理网络</a>，它提供<em>存储和转发</em> 将消息从具有生产者的代理移动到具有消费者的代理，这使我们能够跨代理网络支持<a href="https://activemq.apache.org/how-do-distributed-queues-work" target="_blank" rel="noopener noreferrer">分布式队列和主题</a>。</p><p>这允许客户端连接到任何代理(broker)- 并在出现故障时故障转移到另一个代理(broker)- 从客户端的角度提供代理(broker)集群。</p><p>经纪商(brokers)网络还允许我们在网络中扩展到大量客户，因为我们可以根据需要运行尽可能多的经纪商(brokers)。</p><p>您可以将其视为通过自动故障转移和发现功能与代理(broker)集群连接的客户端集群，从而形成简单且易于使用的消息传递结构。</p><p>配置</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://activemq.org/config/1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>broker</span> <span class="token attr-name">brokerName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>receiver<span class="token punctuation">&quot;</span></span> <span class="token attr-name">persistent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token attr-name">useJmx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>networkConnectors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>networkConnector</span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>static:(tcp://localhost:62001)<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>networkConnectors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>persistenceAdapter</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>memoryPersistenceAdapter</span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>persistenceAdapter</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transportConnectors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transportConnector</span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tcp://localhost:62002<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transportConnectors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>broker</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://activemq.org/config/1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>broker</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sender<span class="token punctuation">&quot;</span></span> <span class="token attr-name">persistent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span> <span class="token attr-name">useJmx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>  </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>networkConnectors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>networkConnector</span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>multicast://default<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>networkConnectors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>persistenceAdapter</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>memoryPersistenceAdapter</span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>persistenceAdapter</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transportConnectors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transportConnector</span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tcp://localhost:0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">discoveryUri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>multicast://default<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transportConnectors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>broker</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-4-5-masterslave" tabindex="-1"><a class="header-anchor" href="#_3-4-5-masterslave"><span>3.4.5.MasterSlave</span></a></h4><p>在网络中运行大量独立代理或代理的问题是消息在任何时间点都由单个物理代理拥有。如果该代理发生故障，您必须等待它重新启动才能传递消息。 （如果您使用非持久消息传递并且代理发生故障，您通常会丢失消息）。</p><p>MasterSlave 背后的想法 是将消息复制到从代理，这样即使主服务器发生灾难性的硬件故障、文件系统或数据中心，您可以立即故障转移到从属设备，而不会丢失任何消息。</p><p>两种模式：</p><figure><img src="http://47.101.155.205/image-20231207213349434.png" alt="image-20231207213349434" tabindex="0" loading="lazy"><figcaption>image-20231207213349434</figcaption></figure><h5 id="_3-4-5-1-共享文件系统主从" tabindex="-1"><a class="header-anchor" href="#_3-4-5-1-共享文件系统主从"><span>3.4.5.1.共享文件系统主从</span></a></h5><p>https://activemq.apache.org/shared-file-system-master-slave</p><p>有SAN或共享文件系统，它可用于提供高可用性，这样，如果一个代理被终止，另一个代理将继续运行可以立即接管。</p><p><strong>确保您的共享文件锁有效</strong></p><p>基本上，您可以从同一个共享文件系统目录运行任意数量的代理。第一个获取文件独占锁的代理是主代理。如果该经纪人死亡并释放锁，则另一个经纪人将接管。从属代理处于循环状态，试图从主代理那里获取锁。</p><p>以下示例演示如何为共享文件系统主从配置代理，其中 <strong>/sharedFileSystem</strong> 是共享文件系统上的某个目录。这只是配置基于文件的存储以使用共享目录的情况。</p><div class="language-xml" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>persistenceAdapter</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>kahaDB</span> <span class="token attr-name">directory</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/sharedFileSystem/sharedBrokerData<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>persistenceAdapter</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="language-xml" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>persistenceAdapter</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>levelDB</span> <span class="token attr-name">directory</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/sharedFileSystem/sharedBrokerData<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>persistenceAdapter</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="language-xml" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>persistenceAdapter</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>amqPersistenceAdapter</span> <span class="token attr-name">directory</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/sharedFileSystem/sharedBrokerData<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>persistenceAdapter</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>启动时，一个主服务器会获取代理文件目录上的独占锁 - 所有其他代理都是从属服务器，并暂停等待独占锁。</p><figure><img src="http://47.101.155.205/image-20231207213937239.png" alt="image-20231207213937239" tabindex="0" loading="lazy"><figcaption>image-20231207213937239</figcaption></figure><p>客户端应使用<a href="https://activemq.apache.org/failover-transport-reference" target="_blank" rel="noopener noreferrer">故障转移传输</a>连接到可用的代理。例如使用类似下面的 URL</p><div class="language-txt" data-highlighter="prismjs" data-ext="txt" data-title="txt"><pre><code><span class="line">failover:(tcp://broker1:61616,tcp://broker2:61616,tcp://broker3:61616)</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>只有主代理启动其传输连接器，因此客户端只能连接到主代理。</p><p><strong>主控故障</strong></p><p>如果主设备失去独占锁，那么它会立即关闭。如果主设备关闭或发生故障，其他从设备之一将抢占锁，因此拓扑切换到下图</p><figure><img src="http://47.101.155.205/image-20231207214053021.png" alt="image-20231207214053021" tabindex="0" loading="lazy"><figcaption>image-20231207214053021</figcaption></figure><p>其他从站之一立即获取文件系统上的独占锁，开始成为主站，启动其所有传输连接器。</p><p><strong>主控重启</strong></p><p>您可以随时重新启动加入集群的其他代理，并在主服务器关闭或发生故障时作为从服务器启动，等待成为主服务器。因此，在旧主服务器重新启动后，将创建以下拓扑：</p><figure><img src="http://47.101.155.205/image-20231207214143855.png" alt="image-20231207214143855" tabindex="0" loading="lazy"><figcaption>image-20231207214143855</figcaption></figure><p>ActiveMQ 维护与持久性适配器中的设置无关的计划信息。因此，对于共享文件系统，明确告诉 ActiveMQ 在何处存储调度程序信息非常重要。为此，请在 上设置 <code>dataDirectory</code> 属性，例如： <code>broker</code></p><div class="language-txt" data-highlighter="prismjs" data-ext="txt" data-title="txt"><pre><code><span class="line">&lt;broker xmlns=&quot;http://activemq.apache.org/schema/core&quot;</span>
<span class="line">dataDirectory=&quot;/some/location&quot;</span>
<span class="line">brokerName=&quot;mmuserb2&quot; useJmx=&quot;true&quot; advisorySupport=&quot;false&quot;</span>
<span class="line">persistent=&quot;true&quot; deleteAllMessagesOnStartup=&quot;false&quot;</span>
<span class="line">useShutdownHook=&quot;false&quot; schedulerSupport=&quot;true&quot;&gt;</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h5 id="_3-4-5-2-jdbc主从" tabindex="-1"><a class="header-anchor" href="#_3-4-5-2-jdbc主从"><span>3.4.5.2.JDBC主从</span></a></h5><p>https://activemq.apache.org/jdbc-master-slave</p><p>在4.1版本首次支持</p><p>如果您使用纯 JDBC 并且不使用高性能日志，那么您通常依赖数据库作为单点故障和持久性引擎。如果您没有真正的高性能要求，那么这种方法可能很有意义，因为您有一个持久性引擎来备份和管理等。</p><p><strong>启动</strong></p><p>当仅使用 JDBC 作为数据源时，您可以使用主从方法，运行任意数量的代理，如下图所示。启动时，一个主服务器会获取代理数据库中的独占锁 - 所有其他代理都是从属服务器，并暂停等待独占锁。</p><figure><img src="http://47.101.155.205/image-20231207214543323.png" alt="image-20231207214543323" tabindex="0" loading="lazy"><figcaption>image-20231207214543323</figcaption></figure><p>客户端应使用<a href="https://activemq.apache.org/failover-transport-reference" target="_blank" rel="noopener noreferrer">故障转移传输</a>连接到可用的代理。例如使用类似下面的 URL</p><div class="language-txt" data-highlighter="prismjs" data-ext="txt" data-title="txt"><pre><code><span class="line">failover:(tcp://broker1:61616,tcp://broker2:61616,tcp://broker3:61616)</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>只有主代理启动其传输连接器，因此客户端只能连接到主代理。</p><p><strong>主控故障</strong></p><p>如果主服务器失去与数据库的连接或失去排他锁，那么它会立即关闭。如果主设备关闭或发生故障，其他从设备之一将抢占锁，因此拓扑切换到下图：</p><figure><img src="http://47.101.155.205/image-20231207214640046.png" alt="image-20231207214640046" tabindex="0" loading="lazy"><figcaption>image-20231207214640046</figcaption></figure><p>其他从站之一立即获取数据库上的独占锁，开始成为主站，启动其所有传输连接器。</p><p>客户端松开与已停止的主服务器的连接，然后故障转移传输尝试连接到可用的代理，其中唯一可用的代理是新的主服务器。</p><p><strong>主控重启</strong></p><p>您可以随时重新启动加入集群的其他代理，并在主服务器关闭或发生故障时作为从服务器启动，等待成为主服务器。因此，在旧主服务器重新启动后，将创建以下拓扑：</p><figure><img src="http://47.101.155.205/image-20231207214754802.png" alt="image-20231207214754802" tabindex="0" loading="lazy"><figcaption>image-20231207214754802</figcaption></figure><p><strong>配置JDBC主从</strong></p><p>默认情况下，如果您使用为了避免高性能日志，您将默认使用 JDBC Master Slave。您只需要运行多个代理并将客户端 URI 指向它们即可获取主/从。这是可行的，因为它们都尝试获取数据库中共享表的排它锁，并且只有一个会成功。</p><p>以下示例展示了如何在 JDBC Master Slave 模式下配置 ActiveMQ Broker。<strong>这个配置文件放哪里？</strong></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">&lt;!-- Allows us to use system properties as variables in this configuration file --&gt;</span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.beans.factory.config.PropertyPlaceholderConfigurer<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>broker</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://activemq.apache.org/schema/core<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>destinationPolicy</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>policyMap</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>policyEntries</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        </span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>policyEntry</span> <span class="token attr-name">topic</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FOO.&gt;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dispatchPolicy</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strictOrderDispatchPolicy</span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dispatchPolicy</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>subscriptionRecoveryPolicy</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lastImageSubscriptionRecoveryPolicy</span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>subscriptionRecoveryPolicy</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>policyEntry</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>policyEntries</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>policyMap</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>destinationPolicy</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>persistenceAdapter</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdbcPersistenceAdapter</span> <span class="token attr-name">dataDirectory</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${activemq.base}/activemq-data<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">&lt;!-- </span>
<span class="line">        &lt;jdbcPersistenceAdapter dataDirectory=&quot;activemq-data&quot; dataSource=&quot;#oracle-ds&quot;/&gt;</span>
<span class="line">        --&gt;</span> </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>persistenceAdapter</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transportConnectors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transportConnector</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>default<span class="token punctuation">&quot;</span></span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tcp://localhost:61616<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transportConnectors</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>broker</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">&lt;!--  This xbean configuration file supports all the standard spring xml configuration options --&gt;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">&lt;!-- Postgres DataSource Sample Setup --&gt;</span></span>
<span class="line">  <span class="token comment">&lt;!-- </span>
<span class="line">  &lt;bean id=&quot;postgres-ds&quot; class=&quot;org.postgresql.ds.PGPoolingDataSource&quot;&gt;</span>
<span class="line">    &lt;property name=&quot;serverName&quot; value=&quot;localhost&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;databaseName&quot; value=&quot;activemq&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;portNumber&quot; value=&quot;0&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;user&quot; value=&quot;activemq&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;password&quot; value=&quot;activemq&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;dataSourceName&quot; value=&quot;postgres&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;initialConnections&quot; value=&quot;1&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;maxConnections&quot; value=&quot;10&quot;/&gt;</span>
<span class="line">  &lt;/bean&gt;</span>
<span class="line">  --&gt;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">&lt;!-- MySql DataSource Sample Setup --&gt;</span></span>
<span class="line">  <span class="token comment">&lt;!-- </span>
<span class="line">  &lt;bean id=&quot;mysql-ds&quot; class=&quot;org.apache.commons.dbcp.BasicDataSource&quot; destroy-method=&quot;close&quot;&gt;</span>
<span class="line">    &lt;property name=&quot;driverClassName&quot; value=&quot;com.mysql.jdbc.Driver&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;url&quot; value=&quot;jdbc:mysql://localhost/activemq?relaxAutoCommit=true&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;username&quot; value=&quot;activemq&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;password&quot; value=&quot;activemq&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;poolPreparedStatements&quot; value=&quot;true&quot;/&gt;</span>
<span class="line">  &lt;/bean&gt;</span>
<span class="line">  --&gt;</span>  </span>
<span class="line">   </span>
<span class="line">  <span class="token comment">&lt;!-- Oracle DataSource Sample Setup --&gt;</span></span>
<span class="line">  <span class="token comment">&lt;!--</span>
<span class="line">  &lt;bean id=&quot;oracle-ds&quot; class=&quot;org.apache.commons.dbcp.BasicDataSource&quot; destroy-method=&quot;close&quot;&gt;</span>
<span class="line">    &lt;property name=&quot;driverClassName&quot; value=&quot;oracle.jdbc.driver.OracleDriver&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;url&quot; value=&quot;jdbc:oracle:thin:@localhost:1521:AMQDB&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;username&quot; value=&quot;scott&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;password&quot; value=&quot;tiger&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;poolPreparedStatements&quot; value=&quot;true&quot;/&gt;</span>
<span class="line">  &lt;/bean&gt;</span>
<span class="line">  --&gt;</span></span>
<span class="line">      </span>
<span class="line">  <span class="token comment">&lt;!-- Embedded Derby DataSource Sample Setup --&gt;</span></span>
<span class="line">  <span class="token comment">&lt;!-- </span>
<span class="line">  &lt;bean id=&quot;derby-ds&quot; class=&quot;org.apache.derby.jdbc.EmbeddedDataSource&quot;&gt;</span>
<span class="line">    &lt;property name=&quot;databaseName&quot; value=&quot;derbydb&quot;/&gt;</span>
<span class="line">    &lt;property name=&quot;createDatabase&quot; value=&quot;create&quot;/&gt;</span>
<span class="line">  &lt;/bean&gt;</span>
<span class="line">  --&gt;</span>  </span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="pure-master-slave" tabindex="-1"><a class="header-anchor" href="#pure-master-slave"><span>Pure Master Slave</span></a></h5><p>https://activemq.apache.org/pure-master-slave</p><p>5.8已移除</p><h4 id="_3-4-6-replicated-message-stores" tabindex="-1"><a class="header-anchor" href="#_3-4-6-replicated-message-stores"><span>3.4.6.Replicated Message Stores</span></a></h4><p>替代 <a href="https://activemq.apache.org/masterslave" target="_blank" rel="noopener noreferrer">MasterSlave</a> 是通过某种方式来复制消息存储；这样磁盘文件就可以以某种方式共享。例如，使用 SAN 或共享网络驱动器，您可以共享代理的文件，以便在发生故障时另一个代理可以立即接管。</p><p>因此，通过支持<a href="https://activemq.apache.org/replicated-message-store" target="_blank" rel="noopener noreferrer">复制消息存储</a>，您可以降低消息丢失的风险，以提供 HA 备份或完整能够在数据中心故障中幸存的解决方案。<a href="https://activemq.apache.org/dr" target="_blank" rel="noopener noreferrer">灾难恢复</a></p><p>如果消息存储在代理的硬盘上或单个数据库内；那么消息持久性方面就会出现单点故障。如果您丢失了整个计算机、磁盘或数据库，那么您就丢失了消息。</p><p>对于一些高端用户来说，消息绝对不应该丢失，因为它们可能会对业务产生很大影响。这类用户通常需要某种<a href="https://activemq.apache.org/dr" target="_blank" rel="noopener noreferrer">DR</a>策略(灾难复原)来支持消息复制，以便他们可以丢失整个数据中心而仍然不会丢失消息。</p><p>对于减少消息丢失机会的问题有多种解决方案：</p><p><strong>使用RAID磁盘</strong></p><p>如果您使用的 RAID 磁盘已充分条带化，则只需重新启动计算机即可 - 或将磁盘移至新计算机并重新启动代理。如果您是小型企业，这可能就足够了，但如果您有严格的<a href="https://activemq.apache.org/dr" target="_blank" rel="noopener noreferrer">灾难恢复</a>要求，那么如果您失去数据中心，RAID 选项就不是解决方案。</p><p><strong>SAN 或共享网络驱动器</strong></p><p>如果您使用基于文件的持久性机制之一（例如默认高性能日志和 Apache Derby），则可以写入 SAN 或共享网络驱动器，并在发生故障时使用来自故障代理的文件启动新代理。</p><p>此外，4.1 还允许您启动多个代理从同一共享文件系统读取数据，以通过<a href="https://activemq.apache.org/shared-file-system-master-slave" target="_blank" rel="noopener noreferrer">共享文件系统主从</a> 功能支持高可用性。</p><p><strong>主从</strong></p><p>另一种方法是使用 <a href="https://activemq.apache.org/masterslave" target="_blank" rel="noopener noreferrer">MasterSlave</a> 功能将代理配对在一起，以便将所有消息复制到两个代理（主代理和从代理）确保消息有两个物理副本，以便可以处理灾难性的硬件故障（例如整个数据中心丢失）。</p><p><strong>集群JDBC数据库</strong></p><p>Oracle、MySQL等各种数据库都支持集群数据库；因此我们可以将这些数据库与 JDBC MessageStore 一起使用来获得集群消息存储。请注意，如果使用此选项，则必须禁用高性能日志（这会严重影响性能）</p><p><strong>使用C-JDBC</strong></p><p>如果您没有或买不起集群数据库，那么您可以使用<a href="http://c-jdbc.objectweb.org/" target="_blank" rel="noopener noreferrer">C-JDBC</a> 跨多个数据库复制状态物理数据库以避免单点故障并提供<a href="https://activemq.apache.org/dr" target="_blank" rel="noopener noreferrer">灾难恢复</a>解决方案。如上所述，使用复制 JDBC 方法非常慢，因为它需要我们禁用高性能日志。</p><h3 id="_3-5-command-agent" tabindex="-1"><a class="header-anchor" href="#_3-5-command-agent"><span>3.5.Command Agent</span></a></h3><p>https://activemq.apache.org/command-agent</p><p>5.9删除</p><h3 id="_3-6-consumer-features、" tabindex="-1"><a class="header-anchor" href="#_3-6-consumer-features、"><span>3.6.Consumer Features、</span></a></h3><p>https://activemq.apache.org/consumer-features</p><h4 id="_3-6-1-consumer-dispatch-async" tabindex="-1"><a class="header-anchor" href="#_3-6-1-consumer-dispatch-async"><span>3.6.1.Consumer Dispatch Async</span></a></h4><p>https://activemq.apache.org/consumer-dispatch-async</p><p>从ActiveMQ v4开始：对消费者执行同步或异步调度的代理的选择变得更加可配置。现在，它被配置为 <a href="https://activemq.apache.org/connection-configuration-uri" target="_blank" rel="noopener noreferrer">连接 URI、Connection 和 ConnectionFactory</a> 上的默认值，并且可以通过 根据每个消费者进行自定义&gt;<a href="https://activemq.apache.org/destination-options" target="_blank" rel="noopener noreferrer">目标选项</a>而不是以前只是传输服务器设置。</p><p>这更有意义，因为您希望对速度较慢的消费者进行异步消息传递，但对速度较快的消费者进行同步消息传递（以避免添加另一个 SEDA 队列的同步和上下文切换成本）。使用同步消息传递的缺点是，如果生产者正在向慢速消费者发送消息，则生产者更有可能阻塞。</p><p>默认设置为 <code>dispatchAsync=true</code>，这是获得高性能的最佳设置。如果您想更好地处理缓慢的消费者，您将需要启用此设置。如果您想要更好的吞吐量并且消费者速度缓慢的可能性很低，您可能需要将其更改为 <code>dispatchAsync=false</code>。</p><p><strong>在 ConnectionFactory 级别配置异步调度</strong></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ActiveMQConnectionFactory</span><span class="token punctuation">)</span>connectionFactory<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setDispatchAsync</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p><strong>在连接级别配置异步调度</strong></p><p>在此级别配置 <code>dispatchAsync</code>设置会覆盖连接工厂级别的设置。</p><p><strong>使用目标 URI 在使用者级别配置调度异步</strong></p><p>使用 <a href="https://activemq.apache.org/destination-options" target="_blank" rel="noopener noreferrer">目标选项配置</a>会覆盖连接和连接工厂级别的设置。<code>dispatchAsync</code></p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActiveMQQueue</span><span class="token punctuation">(</span><span class="token string">&quot;TEST.QUEUE?consumer.dispatchAsync=false&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">consumer <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">createConsumer</span><span class="token punctuation">(</span>queue<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p><strong>在代理的传输连接器上禁用异步调度</strong></p><p>可以通过 <code>disableAsyncDispatch</code> 属性禁用特定传输连接器上的异步调度。一旦禁用此传输，单个客户端就无法启用它。</p><div class="language-xml" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transportConnector</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>openwire<span class="token punctuation">&quot;</span></span> <span class="token attr-name">uri</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tcp://0.0.0.0:61616<span class="token punctuation">&quot;</span></span> <span class="token attr-name">disableAsyncDispatch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="_4-activemq配置" tabindex="-1"><a class="header-anchor" href="#_4-activemq配置"><span>4.ActiveMQ配置</span></a></h2><p>xml配置官网文档：https://activemq.apache.org/xml-configuration</p><p>命令配置文档：https://activemq.apache.org/broker-configuration-uri</p><p>配置传输：https://activemq.apache.org/configuring-transports</p><p>初始化配置：https://activemq.apache.org/configuration 404</p><p>JNDI支持：https://activemq.apache.org/jndi-support</p><p>Spring支持：https://activemq.apache.org/spring-support</p>`,239)]))}const i=a(p,[["render",l],["__file","ActiveMQ.html.vue"]]),u=JSON.parse('{"path":"/mq/ActiveMQ.html","title":"ActiveMQ","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1.ActiveMQ介绍","slug":"_1-activemq介绍","link":"#_1-activemq介绍","children":[]},{"level":2,"title":"2.ActiveMQ入门","slug":"_2-activemq入门","link":"#_2-activemq入门","children":[{"level":3,"title":"2.1.预安装要求","slug":"_2-1-预安装要求","link":"#_2-1-预安装要求","children":[]},{"level":3,"title":"2.2.Windows安装","slug":"_2-2-windows安装","link":"#_2-2-windows安装","children":[]},{"level":3,"title":"2.3.Unix系统安装","slug":"_2-3-unix系统安装","link":"#_2-3-unix系统安装","children":[]},{"level":3,"title":"2.4.其他启动ActiveMQ的方式","slug":"_2-4-其他启动activemq的方式","link":"#_2-4-其他启动activemq的方式","children":[]},{"level":3,"title":"2.5.Web控制台","slug":"_2-5-web控制台","link":"#_2-5-web控制台","children":[]},{"level":3,"title":"2.6.JMX观察启动状态","slug":"_2-6-jmx观察启动状态","link":"#_2-6-jmx观察启动状态","children":[]},{"level":3,"title":"2.7.样例","slug":"_2-7-样例","link":"#_2-7-样例","children":[]}]},{"level":2,"title":"3.ActiveMQ特性","slug":"_3-activemq特性","link":"#_3-activemq特性","children":[{"level":3,"title":"3.1.Active Groups","slug":"_3-1-active-groups","link":"#_3-1-active-groups","children":[]},{"level":3,"title":"3.2.ActiveMQ Real Time","slug":"_3-2-activemq-real-time","link":"#_3-2-activemq-real-time","children":[]},{"level":3,"title":"3.3.Broker Camel Component","slug":"_3-3-broker-camel-component","link":"#_3-3-broker-camel-component","children":[]},{"level":3,"title":"3.4.Clustering]集群","slug":"_3-4-clustering-集群","link":"#_3-4-clustering-集群","children":[]},{"level":3,"title":"3.5.Command Agent","slug":"_3-5-command-agent","link":"#_3-5-command-agent","children":[]},{"level":3,"title":"3.6.Consumer Features、","slug":"_3-6-consumer-features、","link":"#_3-6-consumer-features、","children":[]}]},{"level":2,"title":"4.ActiveMQ配置","slug":"_4-activemq配置","link":"#_4-activemq配置","children":[]}],"git":{"updatedTime":1760063112000,"contributors":[{"name":"ouyangcm","username":"ouyangcm","email":"mingorg@163.com","commits":2,"url":"https://github.com/ouyangcm"}]},"filePathRelative":"mq/ActiveMQ.md"}');export{i as comp,u as data};
