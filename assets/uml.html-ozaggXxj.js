import{_ as a,c as i,e,o as n}from"./app-DO9Fsueg.js";const p={};function s(t,l){return n(),i("div",null,l[0]||(l[0]=[e('<h1 id="uml" tabindex="-1"><a class="header-anchor" href="#uml"><span>UML</span></a></h1><h2 id="uml介绍" tabindex="-1"><a class="header-anchor" href="#uml介绍"><span>UML介绍</span></a></h2><p>1997年，OMG组织(Object Management Group对象管理组织)发布了UML(Unified Modeling Language统一建模语言)。UML是编制软件蓝图的标准化语言，它的目标之一是为了开发团队提供标准通用的设计语言来开发和构建计算机应用。</p><p>UML图是面向对象概念的表示，面向对象概念：</p><ul><li>抽象化：抽象代表现实世界的实体的行为。</li><li>类：类是对象的蓝图。</li><li>封装：封装将数据绑定在一起，并隐藏它们。</li><li>对象：对象代表一个实体的构建基本块。</li><li>继承：从现有的类中生成新的类。</li><li>多态性：同一个抽象，不同的类，不同的行为。</li></ul><p>面向对象分析和设计可以描述为：</p><ol><li>OOA：Object Oriented Analysis(面向对象分析)</li><li>OOD：Object Oriented Design(面向对象设计)</li><li>OOI：Object Oriented Implementation(面向对象实现)</li></ol><p>UML模型的主要构成部分：</p><ul><li>事物(Things)：UML模型中最基本的构成元素，是最具有代表性的抽象。</li><li>关系(Relationships)：关系把事物紧密联系在一起。</li><li>图(Diagrams)：图是事物和关系的可视化表示。</li></ul><p>四种事物：</p><ol><li>结构事物：类，接口，协作，活动类，组件，节点。</li><li>行为事物：交互，状态机。</li><li>分组事物：包。</li><li>注释事物：注释。</li></ol><p>四种依赖关系：</p><ol><li>依赖：依赖是两个事物之间的联系，长虚线箭头表示依赖关系。</li><li>关联(协作)：一组对象之间连接的结构关系。</li><li>实现(继承)：继承关系，实线箭头。</li><li>泛化：实现，短虚线箭头。</li></ol><h3 id="uml建模类型" tabindex="-1"><a class="header-anchor" href="#uml建模类型"><span>UML建模类型</span></a></h3><p>结构建模：捕捉静态的功能</p><ol><li>类图：表示类之间的关系图</li><li>对象图：类图的一种形式。</li><li>部署图：系统的结构体系。</li></ol><p>行为建模：系统交互的结构图。</p><ol><li>交互图：序列图、协作图。</li><li>用例图。</li></ol><h4 id="类图" tabindex="-1"><a class="header-anchor" href="#类图"><span>类图</span></a></h4><p>描述类的特性和类之间的静态关系。</p><p>类之间的六种静态关系：关联、依赖、组合、聚合、继承、泛化。</p><h4 id="序列图" tabindex="-1"><a class="header-anchor" href="#序列图"><span>序列图</span></a></h4><p>描述参与者之间的动态调用关系。</p><p>每个参与者都有一条垂直向下的虚线。</p><figure><img src="http://47.101.155.205/image-20250606194428241.png" alt="image-20250606194428241" tabindex="0" loading="lazy"><figcaption>image-20250606194428241</figcaption></figure><h4 id="组件图" tabindex="-1"><a class="header-anchor" href="#组件图"><span>组件图</span></a></h4><p>组件图描述组件之间的静态关系，主要是依赖关系。</p><h4 id="部署图" tabindex="-1"><a class="header-anchor" href="#部署图"><span>部署图</span></a></h4><p>部署图描述软件系统的最终部署情况，比如需要部署的服务器，组件部署的在哪台服务器上。</p><h4 id="用例图" tabindex="-1"><a class="header-anchor" href="#用例图"><span>用例图</span></a></h4><p>用例图主要用在需求分析阶段。</p><h4 id="状态图" tabindex="-1"><a class="header-anchor" href="#状态图"><span>状态图</span></a></h4><p>状态图用来展示单个对象生命周期的状态变迁。</p><h3 id="活动图" tabindex="-1"><a class="header-anchor" href="#活动图"><span>活动图</span></a></h3><p>活动图(流程图)主要用来描述过程逻辑和业务流程。</p>',35)]))}const r=a(p,[["render",s],["__file","uml.html.vue"]]),o=JSON.parse('{"path":"/tools/uml.html","title":"UML","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"UML介绍","slug":"uml介绍","link":"#uml介绍","children":[{"level":3,"title":"UML建模类型","slug":"uml建模类型","link":"#uml建模类型","children":[]},{"level":3,"title":"活动图","slug":"活动图","link":"#活动图","children":[]}]}],"git":{"updatedTime":1749217120000,"contributors":[{"name":"oycm","username":"oycm","email":"1164864987@qq.com","commits":3,"url":"https://github.com/oycm"}]},"filePathRelative":"tools/uml.md"}');export{r as comp,o as data};
