import{_ as e,c as o,e as n,o as r}from"./app-DO9Fsueg.js";const s={};function a(i,t){return r(),o("div",null,t[0]||(t[0]=[n('<h1 id="领域驱动设计" tabindex="-1"><a class="header-anchor" href="#领域驱动设计"><span>领域驱动设计</span></a></h1><p>领域驱动设计(DDD，Domain-Driven Design)是一种<strong>软件开发方法论</strong>，由 Eric Evans 在他的经典著作《Domain-Driven Design: Tackling Complexity in the Heart of Software》一书中提出（2003 年）。核心理念：<strong>以领域模型为核心推动软件设计与开发。</strong></p><h2 id="领域模型模式" tabindex="-1"><a class="header-anchor" href="#领域模型模式"><span>领域模型模式</span></a></h2><p>目前在企业级应用开发中，业务逻辑的组织方式主要是<strong>事务脚本模式</strong>。事务脚本按照业务处理的过程组织业务逻辑。</p><p>典型的事务脚本模式就是Controller-&gt; Service -&gt; Dao这样的程序设计模式。Controller封装用户请求，根据请求参数构造数据对象调用Service，Service中包含大量的业务逻辑代码，完成对数据的处理，期间可能需要通过Dao从数据库中获取数据，或者将数据写入数据库中。</p><p>事务脚本模式中Service、Dao这些对象只有方法，没有成员变量，方法调用时传递的对象没有方法（或者只有一些get和set），因此事务脚本模式又被称为贫血模式。</p><p><strong>领域模型模式</strong>与事务脚本模式不同，领域模式下，业务逻辑围绕领域模型设计。</p><p><strong>领域</strong>：业务知识和活动的集合，是系统要解决的问题空间。例如：银行的账户系统、支付系统等。</p><p><strong>模型</strong>：对领域中业务概念的抽象，是开发团队对领域的共同理解。模型是用来沟通的工具，也是代码实现的基础。</p><p><strong>限界上下文(Bounded Context)</strong>：对业务领域范围的描述，对于系统实现而言，相当于一个子系统或者一个子模块。</p><p><strong>通用语言(Ubiquitous Language)</strong>：开发人员、领域专家、测试人员共享的一套业务语言，贯穿文档、设计和代码，使沟通无歧义。</p><p><strong>聚合(Aggregate)</strong>：具有一致性边界的对象集合，一个聚合有一个根(Aggregate Root)，外部只能通过根访问内部对象。例如：订单聚合根为订单，内部有订单项、地址等。</p><p><strong>实体(Entity)与值对象(Value Object)</strong>：实体是有唯一标识、生命周期，如用户、订单；值对象是无唯一标识，关注属性，如金额、地址。</p><p><strong>领域服务(Domain Service)</strong>：不属于某个实体或值对象的行为，仍然属于领域逻辑。例如转账行为：涉及两个账户，不宜放在某一个账户对象中。</p><p><strong>应用服务(Application Service)</strong>：协调多个领域对象完成一次业务，处理事务、权限、调用外部服务等。</p><h2 id="分层架构" tabindex="-1"><a class="header-anchor" href="#分层架构"><span>分层架构</span></a></h2><ol><li><strong>接口层</strong>：示、REST等</li><li><strong>应用层</strong>：协调任务、事务等</li><li><strong>领域层</strong>：核心模型、规则</li><li><strong>基础设施层</strong>：数据库、消息中间件等</li></ol>',17)]))}const l=e(s,[["render",a],["__file","DDD.html.vue"]]),p=JSON.parse('{"path":"/tools/DDD.html","title":"领域驱动设计","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"领域模型模式","slug":"领域模型模式","link":"#领域模型模式","children":[]},{"level":2,"title":"分层架构","slug":"分层架构","link":"#分层架构","children":[]}],"git":{"updatedTime":1749217131000,"contributors":[{"name":"oycm","username":"oycm","email":"1164864987@qq.com","commits":1,"url":"https://github.com/oycm"}]},"filePathRelative":"tools/DDD.md"}');export{l as comp,p as data};
