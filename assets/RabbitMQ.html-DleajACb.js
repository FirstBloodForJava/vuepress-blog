import{_ as s,c as a,e as p,o as t}from"./app-DO9Fsueg.js";const e={};function l(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="rabbitmq" tabindex="-1"><a class="header-anchor" href="#rabbitmq"><span>RabbitMQ</span></a></h1><p>MQ(Message Queue)消息队列，典型的生产者消费者模式，生产者不断向消息队列生产消息，消费者不断从消息队列中获取消息。因为消息的生产和消费都是异步的，而且只关心消息的发送和接收，没有业务逻辑的侵入，轻松实现了系统之间的解耦合。通过高效的可靠的消息传递机制进行系统之间的通信来实现分布式系统。</p><p>RabbitMQ是实现了高级消息队列协议（AMQP）的开源消息代理软件（亦称面向消息的中间件）。RabbitMQ服务器是用Erlang语言编写的，而集群和故障转移是构建在开放电信平台框架上的。所有主要的编程语言均有与代理接口通讯的客户端库。</p><p>官网：https://www.rabbitmq.com/</p><p>官方文档：http://www.weicot.com/dev/guides/v2.0/install-gde/prereq/install-rabbitmq.html</p><p>java客户端文档：https://www.rabbitmq.com/api-guide.html</p><h2 id="为什么使用rabbitmq" tabindex="-1"><a class="header-anchor" href="#为什么使用rabbitmq"><span>为什么使用RabbitMQ</span></a></h2><ul><li>异步处理：消息队列的异步处理机制，不需要立即处理共享数据带来的业务，可以通过消息队列的死信队列来处理。</li><li>解耦：传统的开发模式中，各个模块之间相互调用，数据共享，每个模块都需要关注其他模块是否挂掉。使用消息队列，可以将共享的数据放在消息队列中，新增业务模块，业务模块可以订阅该消息，对原有的系统业务没有任何影响，降低了各个系统之间的耦合度，提高系统的可扩展性。</li><li>流量削锋：将对服务器的请求通过消息队列再次拦截处理</li><li>日志处理</li><li>消息通讯</li></ul><h2 id="使用rabbitmq带来的缺点" tabindex="-1"><a class="header-anchor" href="#使用rabbitmq带来的缺点"><span>使用RabbitMQ带来的缺点</span></a></h2><ul><li>系统可用性降低</li><li>系统复杂性提高</li><li>一致性问题</li><li>消息顺序问题：一个队列一个consumer，利用consumer内部做内存队列做排队处理，然后分发底层的worker处理</li><li>消息重复问题</li></ul><table><thead><tr><th></th><th>Kafka</th><th>RocketMQ</th><th>RabbitMQ</th><th>ActiveMQ</th></tr></thead><tbody><tr><td>单机吞吐量</td><td>100万级</td><td>10万级</td><td>万级</td><td>万级</td></tr><tr><td>开发语言</td><td>Scala和Java</td><td>Java</td><td>Erlang</td><td>Java</td></tr><tr><td>高可用</td><td>分布式架构</td><td>分布式架构</td><td>主从架构</td><td>主从架构</td></tr><tr><td>性能</td><td>ms</td><td>ms</td><td>us</td><td>ms</td></tr><tr><td>功能</td><td>简单的MQ功能</td><td>分布式扩展性好</td><td>并发高，性能高，延时低</td><td>功能完备</td></tr></tbody></table><h2 id="rabbitmq基本概念" tabindex="-1"><a class="header-anchor" href="#rabbitmq基本概念"><span>RabbitMQ基本概念</span></a></h2><ul><li>Broker：消息队列服务器实体</li><li>Exchange：消息交换机，消息发布的规则，消息路由到哪个队列</li><li>Queue：消息的载体，队列</li><li>Binding：Exchange和Queue安装路由规则绑定</li><li>Routing key：路由关键字，exchange根据这个投递消息</li><li>Vhost：一个Broker可以有多个Vhost，Vhost可以有不同的exchange、queue，不同模块可以对应不同的vhost</li><li>Producer：消息生产者</li><li>Consumer：消息消费者</li><li>Channel：消息通道，客户端每个连接可以建立通道，一个通道代表一个会话任务</li></ul><h2 id="centos安装rabbitmq" tabindex="-1"><a class="header-anchor" href="#centos安装rabbitmq"><span>Centos安装RabbitMQ</span></a></h2><p>Erlang版本和RabbitMQ版本对应关系：https://www.rabbitmq.com/which-erlang.html</p><p>Erlang下载官网：https://www.erlang.org/downloads</p><h3 id="解压缩安装erlang环境-23-3-4-6" tabindex="-1"><a class="header-anchor" href="#解压缩安装erlang环境-23-3-4-6"><span>解压缩安装Erlang环境(23.3.4.6)</span></a></h3><p>官网下载地址：https://www.erlang.org/patches/otp-23.3.4.1</p><p>官网安装步骤文档地址：https://www.erlang.org/docs/23/installation_guide/install</p><figure><img src="http://47.101.155.205/image-20241029161441112.png" alt="image-20241029161441112" tabindex="0" loading="lazy"><figcaption>image-20241029161441112</figcaption></figure><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 可以用命令检查是否安装</span></span>
<span class="line">yum list installed <span class="token operator">|</span> <span class="token function">grep</span> <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> </span>
<span class="line"></span>
<span class="line"><span class="token comment"># 构建前准备,安装所需依赖</span></span>
<span class="line">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> ncurses ncurses-devel</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 指定gzip解压缩文件</span></span>
<span class="line"><span class="token function">tar</span> <span class="token parameter variable">-zxf</span> otp_src_23.3.4.6.tar.gz</span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">cd</span> otp_src_23.3.4.6/</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 配置当前otp文件目录为ERL_TOP环境变量的值为/opt/erlang/otp_src_23.3.4.6</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">ERL_TOP</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 默认安装至/usr/local/{bin,lib/erlang}目录,配置编译项安装至指定目录</span></span>
<span class="line">./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/opt/erlang/otp_src_23.3.4.6</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 配置报错(缺少依赖)</span></span>
<span class="line">configure: error: No curses library functions found</span>
<span class="line">ERROR: /opt/erlang/otp_src_23.3.4.6/erts/configure failed<span class="token operator">!</span></span>
<span class="line">已杀死</span>
<span class="line"></span>
<span class="line"><span class="token comment">#  echo $LANG =&gt; zh_CN.UTF-8</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>C</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 构建</span></span>
<span class="line"><span class="token function">make</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 测试</span></span>
<span class="line"><span class="token function">make</span> release_tests</span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">cd</span> release/tests/test_server</span>
<span class="line"></span>
<span class="line"><span class="token variable">$ERL_TOP</span>/bin/erl <span class="token parameter variable">-s</span> ts <span class="token function">install</span> <span class="token parameter variable">-s</span> ts smoke_test batch <span class="token parameter variable">-s</span> init stop</span>
<span class="line"><span class="token comment"># $ERL_TOP/release/tests/test_server/index.html查看html有没有失败的测试用例</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装命令一起执行</span></span>
<span class="line">./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/opt/erlang/otp_src_23.3.4.6 <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 没有报错,则执行安装</span></span>
<span class="line"><span class="token function">make</span> <span class="token function">install</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 卸载命令(编译目录执行),如果配置安装目录是解压的文件</span></span>
<span class="line"><span class="token function">make</span> clean</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://47.101.155.205/image-20241029153650983.png" alt="image-20241029153650983" tabindex="0" loading="lazy"><figcaption>image-20241029153650983</figcaption></figure><figure><img src="http://47.101.155.205/image-20241029160022911.png" alt="image-20241029160022911" tabindex="0" loading="lazy"><figcaption>image-20241029160022911</figcaption></figure><h3 id="安装rabbitmq" tabindex="-1"><a class="header-anchor" href="#安装rabbitmq"><span>安装RabbitMQ</span></a></h3><p>软件包托管：https://packagecloud.io/</p><p>https://packagecloud.io/rabbitmq/rabbitmq-server/packages/el/7/rabbitmq-server-3.8.16-1.el7.noarch.rpm</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 创建快捷方式链接</span></span>
<span class="line"><span class="token function">ln</span> <span class="token parameter variable">-s</span> /opt/erlang/otp_src_23.3.4.6/bin/erl /usr/bin/erl</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 下载并添加 RabbitMQ的存储库,提示如下图</span></span>
<span class="line">yum <span class="token function">install</span> --skip-broken rabbitmq-server-3.8.16-1.el7.noarch.rpm</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 换成rpm命令，忽略依赖</span></span>
<span class="line"><span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> <span class="token parameter variable">--nodeps</span> rabbitmq-server-3.8.16-1.el7.noarch.rpm</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 执行这个检查是否安装成功</span></span>
<span class="line">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> rabbitmq-server</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://47.101.155.205/image-20241029163704147.png" alt="提示缺少erlang环境" tabindex="0" loading="lazy"><figcaption>提示缺少erlang环境</figcaption></figure><figure><img src="http://47.101.155.205/image-20241029165616957.png" alt="启动成功" tabindex="0" loading="lazy"><figcaption>启动成功</figcaption></figure><h3 id="yum安装erlang环境" tabindex="-1"><a class="header-anchor" href="#yum安装erlang环境"><span>yum安装Erlang环境</span></a></h3><p>yum包下载地址：https://github.com/rabbitmq/erlang-rpm/releases/download/v23.3.4.6/erlang-23.3.4.6-1.el7.x86_64.rpm</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 添加erlang的存储库</span></span>
<span class="line">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> epel-release</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 执行慢，可以先下载，然后根据文件安装</span></span>
<span class="line">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> https://github.com/rabbitmq/erlang-rpm/releases/download/v23.3.4.6/erlang-23.3.4.6-1.el7.x86_64.rpm</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 手动确认安装</span></span>
<span class="line">yum <span class="token function">install</span> erlang-23.3.4.6-1.el7.x86_64.rpm</span>
<span class="line"><span class="token comment"># 自动确认安装</span></span>
<span class="line">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> erlang-23.3.4.6-1.el7.x86_64.rpm</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装erlang</span></span>
<span class="line">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> erlang</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://47.101.155.205/image-20241029172936970.png" alt="image-20241029172936970" tabindex="0" loading="lazy"><figcaption>image-20241029172936970</figcaption></figure><figure><img src="http://47.101.155.205/image-20241029173059001.png" alt="image-20241029173059001" tabindex="0" loading="lazy"><figcaption>image-20241029173059001</figcaption></figure><h3 id="安装rabbitmq-1" tabindex="-1"><a class="header-anchor" href="#安装rabbitmq-1"><span>安装RabbitMQ</span></a></h3><p>软件包托管：https://packagecloud.io/</p><p>https://packagecloud.io/rabbitmq/rabbitmq-server/packages/el/7/rabbitmq-server-3.8.16-1.el7.noarch.rpm</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 下载并添加 RabbitMQ的存储库,提示如下图</span></span>
<span class="line">yum <span class="token function">install</span> --skip-broken rabbitmq-server-3.8.16-1.el7.noarch.rpm</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 执行这个检查是否安装成功</span></span>
<span class="line">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> rabbitmq-server</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20241030092309866.png" alt="image-20241030092309866" tabindex="0" loading="lazy"><figcaption>image-20241030092309866</figcaption></figure><figure><img src="http://47.101.155.205/image-20241030092249668.png" alt="image-20241030092249668" tabindex="0" loading="lazy"><figcaption>image-20241030092249668</figcaption></figure><h3 id="rabbitmq启动相关命令" tabindex="-1"><a class="header-anchor" href="#rabbitmq启动相关命令"><span>RabbitMQ启动相关命令</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 启动RabbittMQ服务端,默认5672端口</span></span>
<span class="line">systemctl start rabbitmq-server</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 关闭RabbitMQ</span></span>
<span class="line">systemctl stop rabbitmq-server</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 重启服务</span></span>
<span class="line">systemctl restart rabbitmq-server </span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20220623212231673.png" alt="image-20220623212231673" tabindex="0" loading="lazy"><figcaption>image-20220623212231673</figcaption></figure><p>以系统命令方式启动，自动为节点命名为rabbit，会自动在/var/lib/rabbitmq/mnesia目录下生成对应的文件。使用rabbitmqctl stop关闭服务，会自动删除对应的pid文件，里面对应的每次会不一样。使用systemctl stop rabbitmq-server也会删除pid文件。这里的pid文件和redis启动生成的pid文件应该类似。</p><h3 id="rabbitmq安装可视化web插件" tabindex="-1"><a class="header-anchor" href="#rabbitmq安装可视化web插件"><span>RabbitMQ安装可视化web插件</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 执行插件安装命令</span></span>
<span class="line">rabbitmq-plugins <span class="token builtin class-name">enable</span> rabbitmq_management</span>
<span class="line"></span>
<span class="line"><span class="token comment">#重启服务</span></span>
<span class="line">systemctl restart rabbitmq-server</span>
<span class="line"></span>
<span class="line"><span class="token comment">#http://ip:15672/ 可以进入登陆界面，默认本机登陆账户guest guest</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20241029170425056.png" alt="image-20241029170425056" tabindex="0" loading="lazy"><figcaption>image-20241029170425056</figcaption></figure><h3 id="rabbitmq账号命令" tabindex="-1"><a class="header-anchor" href="#rabbitmq账号命令"><span>RabbitMQ账号命令</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment">#添加账号rabbitmqctl add_user admin &lt;Aliyunoycm1234&gt;</span></span>
<span class="line">rabbitmqctl add_user <span class="token operator">&lt;</span>admin<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>Aliyunoycm123<span class="token operator"><span class="token file-descriptor important">4</span>&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">#设置账号adminstrator权限,只有4种权限</span></span>
<span class="line">rabbitmqctl set_user_tags <span class="token operator">&lt;</span>admin<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>administrator<span class="token operator">&gt;</span> </span>
<span class="line"></span>
<span class="line"><span class="token comment"># &quot;.*&quot; &quot;.*&quot; &quot;.*&quot; #授予文件管理权限</span></span>
<span class="line">rabbitmqctl set_permissions <span class="token parameter variable">-p</span> / admin </span>
<span class="line"></span>
<span class="line"><span class="token comment">#修改密码</span></span>
<span class="line">rabbitmqctl change_password <span class="token operator">&lt;</span>user<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>password<span class="token operator">&gt;</span> </span>
<span class="line"></span>
<span class="line"><span class="token comment">#删除用户</span></span>
<span class="line">rabbitmqctl delete_user <span class="token operator">&lt;</span>user<span class="token operator">&gt;</span> </span>
<span class="line"></span>
<span class="line"><span class="token comment">#查看所用用户</span></span>
<span class="line">rabbitmqctl list_users </span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意：设置权限对应失败，会导致无法登陆，提示Not management user(非管理用户)</li></ul><blockquote><p>用户权限</p></blockquote><ol><li>administrator</li><li>monitoring</li><li>policymaker</li><li>managment</li><li>none</li></ol><h3 id="卸载rabbitmq" tabindex="-1"><a class="header-anchor" href="#卸载rabbitmq"><span>卸载RabbitMQ</span></a></h3><figure><img src="http://47.101.155.205/image-20220927212720036.png" alt="image-20220927212720036" tabindex="0" loading="lazy"><figcaption>image-20220927212720036</figcaption></figure><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># rabbitmq-server卸载</span></span>
<span class="line"><span class="token comment"># yum命令安装的软件，yum remove 软件名字</span></span>
<span class="line"><span class="token comment"># rpm命令安装的软件，rpm -e --nodeps 软件名 --nodeps表示忽略依赖关系卸载</span></span>
<span class="line"><span class="token function">rpm</span> <span class="token parameter variable">-e</span> rabbitmq-server </span>
<span class="line"><span class="token function">rpm</span> <span class="token parameter variable">-e</span> rabbitmq-server <span class="token parameter variable">--nodeps</span></span>
<span class="line"><span class="token comment"># 查询是否卸载好了</span></span>
<span class="line"><span class="token function">rpm</span> <span class="token parameter variable">-qa</span> <span class="token operator">|</span> <span class="token function">grep</span> rabbitmq</span>
<span class="line"></span>
<span class="line"><span class="token comment"># yum查询所有可用的软件包</span></span>
<span class="line">yum list <span class="token function">install</span> <span class="token operator">|</span> <span class="token function">grep</span> rabbitmq</span>
<span class="line"><span class="token comment"># yum查询安装的软件</span></span>
<span class="line">yum list installed <span class="token operator">|</span> <span class="token function">grep</span> rabbitmq</span>
<span class="line"><span class="token comment"># 查询安装的程序，直接确认进行卸载</span></span>
<span class="line">yum list installed <span class="token operator">|</span> <span class="token function">grep</span> rabbitmq <span class="token operator">|</span> <span class="token function">xargs</span> yum remove <span class="token parameter variable">-y</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># erlang环境卸载</span></span>
<span class="line"><span class="token comment"># tar包安装，使用make uninstall在之前编译的位置</span></span>
<span class="line"><span class="token comment"># 其它情况相同</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://47.101.155.205/image-20220927214739142.png" alt="image-20220927214739142" tabindex="0" loading="lazy"><figcaption>image-20220927214739142</figcaption></figure><h2 id="docker安装rabbitmq" tabindex="-1"><a class="header-anchor" href="#docker安装rabbitmq"><span>Docker安装RabbitMQ</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> pull rabbitmq:management <span class="token comment">#拉取镜像</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-di</span> <span class="token parameter variable">--name</span> my-rabbitmq <span class="token parameter variable">-e</span> <span class="token assign-left variable">RABBITMQ_DEFUALT_USER</span><span class="token operator">=</span>oycm <span class="token parameter variable">-e</span> <span class="token assign-left variable">RABBITMQ_DEFAULT_PASS</span><span class="token operator">=</span>admin1234 <span class="token parameter variable">-p</span> <span class="token number">15672</span>:15672 <span class="token parameter variable">-p</span> <span class="token number">5672</span>:5672 <span class="token parameter variable">-p</span> <span class="token number">25672</span>:25672 rabbitmq:management <span class="token comment">#-e配置,并不能直接访问可视化界面</span></span>
<span class="line"><span class="token comment"># 15672是可视化web端口</span></span>
<span class="line"><span class="token comment"># 5672是RabbitMQ消息接收中心端口，消息获取和发送的端口</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="java-client" tabindex="-1"><a class="header-anchor" href="#java-client"><span>Java Client</span></a></h2><h3 id="连接" tabindex="-1"><a class="header-anchor" href="#连接"><span>连接</span></a></h3><p>普通的RabbitMQjava客户端连接</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ConnectionFactory</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Channel</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">ConnectionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">factory<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">factory<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">factory<span class="token punctuation">.</span><span class="token function">setVirtualHost</span><span class="token punctuation">(</span>virtualHost<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//默认是/</span></span>
<span class="line">factory<span class="token punctuation">.</span><span class="token function">setHost</span><span class="token punctuation">(</span>hostName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">factory<span class="token punctuation">.</span><span class="token function">setPort</span><span class="token punctuation">(</span>portNumber<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">Connection</span> conn <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">Address</span><span class="token punctuation">[</span><span class="token punctuation">]</span> addrArr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Address</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span> <span class="token keyword">new</span> <span class="token class-name">Address</span><span class="token punctuation">(</span>hostname1<span class="token punctuation">,</span> portnumber1<span class="token punctuation">)</span></span>
<span class="line">                                 <span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Address</span><span class="token punctuation">(</span>hostname2<span class="token punctuation">,</span> portnumber2<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Connection</span> conn <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span>addrArr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//可以指定连接时使用的端点列表。将使用第一个可到达的端点。在连接失败的情况下，使用端点列表使应用程序可以在原始节点关闭时连接到不同的节点。</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="uri连接" tabindex="-1"><a class="header-anchor" href="#uri连接"><span>URI连接</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">ConnectionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">factory<span class="token punctuation">.</span><span class="token function">setUri</span><span class="token punctuation">(</span><span class="token string">&quot;amqp://userName:password@hostName:portNumber/virtualHost&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Connection</span> conn <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">amqp_URI <span class="token operator">=</span> <span class="token string">&quot;amqp://&quot;</span> <span class="token operator">+</span> amqp_authority <span class="token operator">+</span> <span class="token punctuation">[</span> <span class="token string">&quot;/&quot;</span> vhost <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token string">&quot;?&quot;</span> query <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">amqp_authority <span class="token operator">=</span> <span class="token punctuation">[</span>amqp_userinfo<span class="token string">&quot;@&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span> host <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token string">&quot;:&quot;</span> port<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">amqp_userinfo <span class="token operator">=</span> username <span class="token punctuation">[</span><span class="token string">&quot;:&quot;</span> password<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//springboot项目启动的输出日志</span></span>
<span class="line"><span class="token class-name">Created</span> <span class="token keyword">new</span> connection<span class="token operator">:</span> rabbitConnectionFactory#<span class="token number">2</span>af69643<span class="token operator">:</span><span class="token number">0</span><span class="token operator">/</span><span class="token class-name">SimpleConnection</span><span class="token annotation punctuation">@40e32762</span> <span class="token punctuation">[</span>delegate<span class="token operator">=</span>amqp<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>oycm<span class="token annotation punctuation">@39.101.165.70</span><span class="token operator">:</span><span class="token number">5672</span><span class="token operator">/</span><span class="token punctuation">,</span> localPort<span class="token operator">=</span> <span class="token number">55143</span><span class="token punctuation">]</span></span>
<span class="line">                                                                                      </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>测试代码</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>uri</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Channel</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ConnectionFactory</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Send</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> exchange <span class="token operator">=</span> <span class="token string">&quot;uri&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ConnectionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setUri</span><span class="token punctuation">(</span><span class="token string">&quot;amqp://admin:Aliyunoycm1234@106.15.234.93:5672/%2f&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//%2f代表/</span></span>
<span class="line">        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Channel</span> channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        channel<span class="token punctuation">.</span><span class="token function">exchangeDeclare</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;fanout&quot;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> queueName <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//独占队列非持久性，排他性，自动删除</span></span>
<span class="line">        channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span>queueName<span class="token punctuation">,</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">//通过uri连接server</span></span>
<span class="line"><span class="token comment">//独占队列当只有一个客户端想要使用它时，没有其他客户端可以使用它</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="channel" tabindex="-1"><a class="header-anchor" href="#channel"><span>channel</span></a></h3><p>虽然channel上的某些操作可以安全地并发调用，但有些操作不是。<strong>应该避免多线程使用同一个通道，可以使用通道池。</strong></p><blockquote><p>被动声明</p></blockquote><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">final</span> <span class="token class-name">AMQP<span class="token punctuation">.</span>Queue<span class="token punctuation">.</span>DeclareOk</span> response <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">queueDeclarePassive</span><span class="token punctuation">(</span>queueName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getMessageCount()&quot;</span><span class="token operator">+</span>response<span class="token punctuation">.</span><span class="token function">getMessageCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//队列可用的的消息数</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getConsumerCount()&quot;</span><span class="token operator">+</span>response<span class="token punctuation">.</span><span class="token function">getConsumerCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//队列连接的消费者</span></span>
<span class="line"><span class="token comment">//注意点：如果队列不存在，通道将不可用，使用临时渠道进行被动声明</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//声明队列不需要服务器进行响应，速度快，安全性低</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueDeclareNoWait</span><span class="token punctuation">(</span>queueName<span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token punctuation">,</span> <span class="token keyword">null</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><blockquote><p>队列删除</p></blockquote><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token function">queueDelete</span><span class="token punctuation">(</span><span class="token class-name">String</span> queue<span class="token punctuation">,</span> <span class="token keyword">boolean</span> ifUnused<span class="token punctuation">,</span> <span class="token keyword">boolean</span> ifEmpty<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 为空才删除</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueDelete</span><span class="token punctuation">(</span><span class="token string">&quot;queue-name&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 队列没有消费者才删除</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueDelete</span><span class="token punctuation">(</span><span class="token string">&quot;queue-name&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 删除队列所有消息</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queuePurge</span><span class="token punctuation">(</span><span class="token string">&quot;queue-name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="工作模式" tabindex="-1"><a class="header-anchor" href="#工作模式"><span>工作模式</span></a></h2><h3 id="helloworld-simple模式" tabindex="-1"><a class="header-anchor" href="#helloworld-simple模式"><span>HelloWorld(Simple模式)</span></a></h3><p>message的properties</p><ul><li>content_type</li><li>content_encoding</li><li>priority</li><li>correlation_id √</li><li>reply_to √</li><li>expiration √</li><li>message_id</li><li>timestamp</li><li>type</li><li>user_id</li><li>app_id</li><li>cluster_id</li><li>deli</li></ul><p>https://www.rabbitmq.com/tutorials/tutorial-one-java.html</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/com.rabbitmq/amqp-client  客户端 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.rabbitmq<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>amqp-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.15.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>rabbitmq配置文件官网介绍：https://www.rabbitmq.com/configure.html#config-items</p><blockquote><p>生产者</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>send</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ConnectionFactory</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Channel</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Send</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">QUEUE_NAME</span> <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ConnectionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;Aliyunoycm1234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setHost</span><span class="token punctuation">(</span><span class="token string">&quot;106.15.234.93&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setPort</span><span class="token punctuation">(</span><span class="token number">5672</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">(</span></span>
<span class="line">            <span class="token class-name">Connection</span> connection <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">Channel</span> channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token constant">QUEUE_NAME</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">basicPublish</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token constant">QUEUE_NAME</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;消息发送：&quot;</span> <span class="token operator">+</span> message <span class="token operator">+</span> <span class="token string">&quot;成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">//执行channel.close()，消息发送完成程序不会自动退出。使用try...with会自动退出程序</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>消费者</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>receive</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeoutException</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Receive</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">QUEUE_NAME</span> <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> host <span class="token operator">=</span> <span class="token string">&quot;106.15.234.93&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ConnectionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setHost</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;Aliyunoycm1234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Channel</span> channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token constant">QUEUE_NAME</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;等待接收消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">DeliverCallback</span> deliverCallback <span class="token operator">=</span> <span class="token punctuation">(</span>consumerTag<span class="token punctuation">,</span>message<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Receive</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;类接收到：&quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;程序退出&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        channel<span class="token punctuation">.</span><span class="token function">basicConsume</span><span class="token punctuation">(</span><span class="token constant">QUEUE_NAME</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> deliverCallback<span class="token punctuation">,</span> consumerTag <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>怎么实现手动ack模式？</p><h3 id="work-queues-work-工作模式" tabindex="-1"><a class="header-anchor" href="#work-queues-work-工作模式"><span>Work queues(work 工作模式)</span></a></h3><p>Distributing tasks among workers</p><ol><li>消息持久化(队列的持久化，消息持久化)</li><li>消息持久化的可靠性(publisher confirm)</li><li>使用消息确认和预取计数，您可以设置工作队列。</li></ol><blockquote><p>队列持久性</p></blockquote><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 已近存在的队列就不能修改他的持久性了</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token string">&quot;task_queue&quot;</span><span class="token punctuation">,</span> durable<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><blockquote><p>消息持久性</p></blockquote><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">MessageProperties</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//设置队列中的消息持久性，通过</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">basicPublish</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;task_queue&quot;</span><span class="token punctuation">,</span><span class="token class-name">MessageProperties</span><span class="token punctuation">.</span><span class="token constant">PERSISTENT_TEXT_PLAIN</span><span class="token punctuation">,</span>message<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>消息调度模式：默认是循环调度(Round-robin dispatching)，可以指定为公平调度(Fair dispatch)</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">// 设置公平调度模式</span></span>
<span class="line"><span class="token comment">// 设置给消息调用者调用多少条消息</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">basicQos</span><span class="token punctuation">(</span>prefetchCount<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><blockquote><p>循环模式</p></blockquote><ul><li>生产者</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>work</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Channel</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ConnectionFactory</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeoutException</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Send</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> queueName <span class="token operator">=</span> <span class="token string">&quot;work&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ConnectionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;Aliyunoycm1234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setHost</span><span class="token punctuation">(</span><span class="token string">&quot;106.15.234.93&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> connection <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">Channel</span> channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span>queueName<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">20</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token string">&quot;message -&gt; &quot;</span><span class="token punctuation">;</span></span>
<span class="line">                msg <span class="token operator">+=</span> i<span class="token punctuation">;</span></span>
<span class="line">                channel<span class="token punctuation">.</span><span class="token function">basicPublish</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>queueName<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>msg<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">TimeoutException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>消费者</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>work</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Work1</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> queueName <span class="token operator">=</span> <span class="token string">&quot;work&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ConnectionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;Aliyunoycm1234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setHost</span><span class="token punctuation">(</span><span class="token string">&quot;106.15.234.93&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Channel</span> channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">DeliverCallback</span> deliverCallback <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>consumerTag<span class="token punctuation">,</span> message<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">CancelCallback</span> cancelCallback <span class="token operator">=</span> <span class="token punctuation">(</span>consumerTag <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        channel<span class="token punctuation">.</span><span class="token function">basicConsume</span><span class="token punctuation">(</span>queueName<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span>deliverCallback<span class="token punctuation">,</span>cancelCallback<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>公平调度</p></blockquote><ul><li>消费者</li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>work</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Work3</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> queueName <span class="token operator">=</span> <span class="token string">&quot;work&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ConnectionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;Aliyunoycm1234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setHost</span><span class="token punctuation">(</span><span class="token string">&quot;106.15.234.93&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Channel</span> channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">DeliverCallback</span> deliverCallback <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>consumerTag<span class="token punctuation">,</span> message<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">                channel<span class="token punctuation">.</span><span class="token function">basicAck</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getEnvelope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">CancelCallback</span> cancelCallback <span class="token operator">=</span> <span class="token punctuation">(</span>consumerTag <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        channel<span class="token punctuation">.</span><span class="token function">basicQos</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        channel<span class="token punctuation">.</span><span class="token function">basicConsume</span><span class="token punctuation">(</span>queueName<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span>deliverCallback<span class="token punctuation">,</span>cancelCallback<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">//设置消息自动确定为false</span></span>
<span class="line"><span class="token comment">//设置Qos值</span></span>
<span class="line"><span class="token comment">//手动确认接收消息</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="routing-路由模式" tabindex="-1"><a class="header-anchor" href="#routing-路由模式"><span>Routing(路由模式)</span></a></h3><p>Receiving messages selectively</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">channel<span class="token punctuation">.</span><span class="token function">exchangeDeclare</span><span class="token punctuation">(</span><span class="token constant">EXCHANGE_NAME</span><span class="token punctuation">,</span> <span class="token string">&quot;direct&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">basicPublish</span><span class="token punctuation">(</span><span class="token constant">EXCHANGE_NAME</span><span class="token punctuation">,</span> severity<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//绑定queue和exchange</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span>queueName<span class="token punctuation">,</span> <span class="token constant">EXCHANGE_NAME</span><span class="token punctuation">,</span> routing<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><blockquote><p>生产者</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>routing</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Channel</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ConnectionFactory</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeoutException</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Send</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> exchange <span class="token operator">=</span> <span class="token string">&quot;routing&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ConnectionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setHost</span><span class="token punctuation">(</span><span class="token string">&quot;106.15.234.93&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;Aliyunoycm1234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> connection <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">Channel</span> channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token string">&quot;q4&quot;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">exchangeDeclare</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;direct&quot;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span><span class="token string">&quot;q1&quot;</span><span class="token punctuation">,</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span><span class="token string">&quot;q2&quot;</span><span class="token punctuation">,</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span><span class="token string">&quot;q3&quot;</span><span class="token punctuation">,</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span><span class="token string">&quot;q4&quot;</span><span class="token punctuation">,</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">basicPublish</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">&quot;routing world&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;消息发送成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">TimeoutException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>消费者</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>routing</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Channel</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ConnectionFactory</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">DeliverCallback</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Receive</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> exchange <span class="token operator">=</span> <span class="token string">&quot;routing&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ConnectionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setHost</span><span class="token punctuation">(</span><span class="token string">&quot;106.15.234.93&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;Aliyunoycm1234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Channel</span> channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">DeliverCallback</span> deliverCallback <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>consumerTag<span class="token punctuation">,</span> message<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;等待接收消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        channel<span class="token punctuation">.</span><span class="token function">basicConsume</span><span class="token punctuation">(</span><span class="token string">&quot;q3&quot;</span><span class="token punctuation">,</span>deliverCallback<span class="token punctuation">,</span><span class="token punctuation">(</span>consumerTag<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        channel<span class="token punctuation">.</span><span class="token function">basicConsume</span><span class="token punctuation">(</span><span class="token string">&quot;q4&quot;</span><span class="token punctuation">,</span>deliverCallback<span class="token punctuation">,</span><span class="token punctuation">(</span>consumerTag<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="topics-topic主题模式" tabindex="-1"><a class="header-anchor" href="#topics-topic主题模式"><span>Topics(topic主题模式)</span></a></h3><p>Receiving messages based on a pattern</p><ul><li>* （star） can substitute for exactly <strong>one</strong> word</li><li># （hash）can substitute for <strong>zero or more</strong> words.</li></ul><div class="language-tex" data-highlighter="prismjs" data-ext="tex" data-title="tex"><pre><code><span class="line">Topic exchange is powerful and can behave like other exchanges.</span>
<span class="line"></span>
<span class="line">When a queue is bound with &quot;#&quot; (hash) binding key - it will receive all the messages, regardless of the routing key - like in fanout exchange.</span>
<span class="line"></span>
<span class="line">When special characters, &quot;*&quot; (star) and &quot;#&quot; (hash), aren&#39;t used in bindings, the topic exchange will behave just like a direct one.</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">channel<span class="token punctuation">.</span><span class="token function">exchangeDeclare</span><span class="token punctuation">(</span><span class="token constant">EXCHANGE_NAME</span><span class="token punctuation">,</span> <span class="token string">&quot;topic&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">basicPublish</span><span class="token punctuation">(</span><span class="token constant">EXCHANGE_NAME</span><span class="token punctuation">,</span> routingKey<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> message<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">String</span> queueName <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span>queueName<span class="token punctuation">,</span> <span class="token constant">EXCHANGE_NAME</span><span class="token punctuation">,</span> topic<span class="token operator">-</span>routing<span class="token operator">-</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><blockquote><p>生产者</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>topic</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Channel</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ConnectionFactory</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeoutException</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Send</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> exchange <span class="token operator">=</span> <span class="token string">&quot;topic&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ConnectionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setHost</span><span class="token punctuation">(</span><span class="token string">&quot;106.15.234.93&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;Aliyunoycm1234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> connection <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">Channel</span> channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">exchangeDeclare</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;topic&quot;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token string">&quot;q5&quot;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span><span class="token string">&quot;q5&quot;</span><span class="token punctuation">,</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;*.study.*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span><span class="token string">&quot;q4&quot;</span><span class="token punctuation">,</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;#.study.#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span><span class="token string">&quot;q3&quot;</span><span class="token punctuation">,</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;#.study&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            channel<span class="token punctuation">.</span><span class="token function">basicPublish</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;com.study.hello&quot;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">&quot;com.study.hello topic&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">TimeoutException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>消费者</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>topic</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>rabbitmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Receive</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> exchange <span class="token operator">=</span> <span class="token string">&quot;topic&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ConnectionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setHost</span><span class="token punctuation">(</span><span class="token string">&quot;106.15.234.93&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        factory<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;Aliyunoycm1234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Channel</span> channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">DeliverCallback</span> deliverCallback <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>consumerTag<span class="token punctuation">,</span> message<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">CancelCallback</span> cancelCallback <span class="token operator">=</span> <span class="token punctuation">(</span>consumerTag<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        channel<span class="token punctuation">.</span><span class="token function">basicConsume</span><span class="token punctuation">(</span><span class="token string">&quot;q3&quot;</span><span class="token punctuation">,</span>deliverCallback<span class="token punctuation">,</span>cancelCallback<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        channel<span class="token punctuation">.</span><span class="token function">basicConsume</span><span class="token punctuation">(</span><span class="token string">&quot;q4&quot;</span><span class="token punctuation">,</span>deliverCallback<span class="token punctuation">,</span>cancelCallback<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        channel<span class="token punctuation">.</span><span class="token function">basicConsume</span><span class="token punctuation">(</span><span class="token string">&quot;q5&quot;</span><span class="token punctuation">,</span>deliverCallback<span class="token punctuation">,</span>cancelCallback<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="publish-confirms-发布确认模式" tabindex="-1"><a class="header-anchor" href="#publish-confirms-发布确认模式"><span>publish confirms(发布确认模式)</span></a></h3><blockquote><p>单条消息确认</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Channel</span> channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">confirmSelect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//开启发布确认 publish confirm</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">waitForConfirmsOrDie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//等待确认，下面每次发送消息都需要返回确认，ack的multiple为false</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token class-name">String</span> message <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;时间 =&gt; %s&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;===&gt;&quot;</span> <span class="token operator">+</span> i <span class="token punctuation">;</span></span>
<span class="line">    channel<span class="token punctuation">.</span><span class="token function">basicPublish</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>message<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    channel<span class="token punctuation">.</span><span class="token function">waitForConfirmsOrDie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">//发送消息速度非常慢，普通publish发送500，里面只有2-3条publish confirm的消息。</span></span>
<span class="line"><span class="token comment">//publish 655ms</span></span>
<span class="line"><span class="token comment">//publish confirm 616160ms</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>批量消息确认</p></blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> batchSize <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> outstandingMessageCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> body <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">BasicProperties</span> properties <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span></span>
<span class="line">    channel<span class="token punctuation">.</span><span class="token function">basicPublish</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span> queue<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    outstandingMessageCount<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>outstandingMessageCount <span class="token operator">==</span> batchSize<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        ch<span class="token punctuation">.</span><span class="token function">waitForConfirmsOrDie</span><span class="token punctuation">(</span><span class="token number">5_000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        outstandingMessageCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>outstandingMessageCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    ch<span class="token punctuation">.</span><span class="token function">waitForConfirmsOrDie</span><span class="token punctuation">(</span><span class="token number">5_000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">//速度快，981ms</span></span>
<span class="line"><span class="token comment">//不过回调方法会有multiple为true的情况。出现true的情况是前面有消息没有响应。</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>异步发布确认</p></blockquote><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">ConfirmListener</span> <span class="token function">addConfirmListener</span><span class="token punctuation">(</span><span class="token class-name">ConfirmCallback</span> ackCallback<span class="token punctuation">,</span> <span class="token class-name">ConfirmCallback</span> nackCallback<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">addConfirmListener</span><span class="token punctuation">(</span>ackCallback<span class="token punctuation">,</span>nackCallback<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//820ms</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>不打印日志的情况下，异步发布确认条件下最快。</p><p>消息发布到服务器有三种情况：</p><ul><li>消息发送成功</li><li>有交换机没有对应的路由键队列，消息发送成功</li><li>没有交换机</li><li>没有交换机及路由键队列同上</li></ul><figure><img src="http://47.101.155.205/image-20220716215819774.png" alt="image-20220716215819774" tabindex="0" loading="lazy"><figcaption>image-20220716215819774</figcaption></figure><figure><img src="http://47.101.155.205/image-20220716220038132.png" alt="image-20220716220038132" tabindex="0" loading="lazy"><figcaption>image-20220716220038132</figcaption></figure><figure><img src="http://47.101.155.205/image-20220716220207308.png" alt="image-20220716220207308" tabindex="0" loading="lazy"><figcaption>image-20220716220207308</figcaption></figure><figure><img src="http://47.101.155.205/image-20220716220308392.png" alt="image-20220716220308392" tabindex="0" loading="lazy"><figcaption>image-20220716220308392</figcaption></figure><p>总结：消息没有发送成功回调ConfirmCallback。消息发送只回调ConfirmCallback。交换机存在没有路由键，先调用ReturnsCallback，再调用ConfirmCallback。</p><h2 id="srpingboot整合" tabindex="-1"><a class="header-anchor" href="#srpingboot整合"><span>SrpingBoot整合</span></a></h2><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h3><blockquote><p>pom依赖</p></blockquote><div class="language-xml" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-amqp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.amqp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-rabbit-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre></div><blockquote><p>yaml配置</p></blockquote><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">spring</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1</span>
<span class="line">    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5672</span></span>
<span class="line">    <span class="token key atrule">username</span><span class="token punctuation">:</span> guest</span>
<span class="line">    <span class="token key atrule">password</span><span class="token punctuation">:</span> guest</span>
<span class="line">    <span class="token key atrule">connection-timeout</span><span class="token punctuation">:</span> 60s</span>
<span class="line">    <span class="token key atrule">listener</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">direct</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">acknowledge-mode</span><span class="token punctuation">:</span> none</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">spring.rabbitmq.host</span><span class="token punctuation">:</span> <span class="token value attr-value">服务Host</span></span>
<span class="line"><span class="token key attr-name">spring.rabbitmq.port</span><span class="token punctuation">:</span> <span class="token value attr-value">服务端口</span></span>
<span class="line"><span class="token key attr-name">spring.rabbitmq.username</span><span class="token punctuation">:</span> <span class="token value attr-value">用户名</span></span>
<span class="line"><span class="token key attr-name">spring.rabbitmq.password</span><span class="token punctuation">:</span> <span class="token value attr-value">密码</span></span>
<span class="line"><span class="token key attr-name">spring.rabbitmq.virtual-host</span><span class="token punctuation">:</span>  <span class="token value attr-value">RabbitMQ的虚拟主机</span></span>
<span class="line"><span class="token key attr-name">spring.rabbitmq.addresses</span><span class="token punctuation">:</span> <span class="token value attr-value">指定client连接到的server的地址，多个以逗号分隔(优先取addresses，然后再取host)</span></span>
<span class="line"><span class="token key attr-name">spring.rabbitmq.requested-heartbeat</span><span class="token punctuation">:</span> <span class="token value attr-value">指定心跳超时，单位秒，0为不指定；默认60s</span></span>
<span class="line"><span class="token key attr-name">spring.rabbitmq.publisher-confirm-type</span><span class="token punctuation">:</span> <span class="token value attr-value">开启Publisher Confirm机制:simple、none、rorrelated，关闭时默认none</span></span>
<span class="line"><span class="token key attr-name">spring.rabbitmq.publisher-returns</span><span class="token punctuation">:</span> <span class="token value attr-value">开启publisher Return机制</span></span>
<span class="line"><span class="token key attr-name">spring.rabbitmq.connection-timeout</span><span class="token punctuation">:</span> <span class="token value attr-value">连接超时，单位毫秒，0表示无穷大，不超时</span></span>
<span class="line"><span class="token key attr-name">spring.rabbitmq.listener.simple.acknowledge-mode</span><span class="token punctuation">:</span> <span class="token value attr-value">表示消息确认方式，分别是none、manual和auto；默认auto</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">spring</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">username</span><span class="token punctuation">:</span> oycm</span>
<span class="line">    <span class="token key atrule">password</span><span class="token punctuation">:</span> Aliyunoycm1234</span>
<span class="line">    <span class="token key atrule">host</span><span class="token punctuation">:</span> 39.101.165.70</span>
<span class="line">    <span class="token key atrule">virtual-host</span><span class="token punctuation">:</span> /</span>
<span class="line">    <span class="token key atrule">publisher-returns</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#查看自动配置源码，这里配置为true，template.mandatory会配</span></span>
<span class="line">    <span class="token key atrule">publisher-confirm-type</span><span class="token punctuation">:</span> correlated <span class="token comment">#simple表示同步等待，correlated表示异步回调ConfirmCallback(上面false没事)</span></span>
<span class="line">    <span class="token key atrule">template</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">mandatory</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#消息路由失败策略,true表示消息发送到交换机没有路由键ReturnCallBack，false表示直接丢失消息，消息创建时的模板</span></span>
<span class="line">    <span class="token key atrule">listener</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">simple</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">acknowledge-mode</span><span class="token punctuation">:</span> manual <span class="token comment">#消费者确认模式，开启之后，没有加入监听的队列，消息在得到后是UnAcked，使用手动Ack，第一次的消息不会</span></span>
<span class="line">        <span class="token key atrule">retry</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#开启消费者失败重试</span></span>
<span class="line">          </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自动配置原理" tabindex="-1"><a class="header-anchor" href="#自动配置原理"><span>自动配置原理</span></a></h3><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span></span>RabbitProperties</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span></span>RabbitAutoConfiguration</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token annotation punctuation">@ConditionalOnSingleCandidate</span><span class="token punctuation">(</span><span class="token class-name">ConnectionFactory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">RabbitOperations</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">RabbitTemplate</span> <span class="token function">rabbitTemplate</span><span class="token punctuation">(</span><span class="token class-name">RabbitTemplateConfigurer</span> configurer<span class="token punctuation">,</span> <span class="token class-name">ConnectionFactory</span> connectionFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token class-name">RabbitTemplate</span> template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RabbitTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	configurer<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> connectionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">return</span> template<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">RabbitTemplate</span> template<span class="token punctuation">,</span> <span class="token class-name">ConnectionFactory</span> connectionFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token class-name">PropertyMapper</span> map <span class="token operator">=</span> <span class="token class-name">PropertyMapper</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	template<span class="token punctuation">.</span><span class="token function">setConnectionFactory</span><span class="token punctuation">(</span>connectionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>messageConverter <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		template<span class="token punctuation">.</span><span class="token function">setMessageConverter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>messageConverter<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	template<span class="token punctuation">.</span><span class="token function">setMandatory</span><span class="token punctuation">(</span><span class="token function">determineMandatoryFlag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token class-name">RabbitProperties<span class="token punctuation">.</span>Template</span> templateProperties <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rabbitProperties<span class="token punctuation">.</span><span class="token function">getTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span>templateProperties<span class="token punctuation">.</span><span class="token function">getRetry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		template<span class="token punctuation">.</span><span class="token function">setRetryTemplate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RetryTemplateFactory</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>retryTemplateCustomizers<span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">.</span><span class="token function">createRetryTemplate</span><span class="token punctuation">(</span>templateProperties<span class="token punctuation">.</span><span class="token function">getRetry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">RabbitRetryTemplateCustomizer<span class="token punctuation">.</span>Target</span><span class="token punctuation">.</span><span class="token constant">SENDER</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	map<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>templateProperties<span class="token operator">::</span><span class="token function">getReceiveTimeout</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">whenNonNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token operator">::</span><span class="token function">toMillis</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span>template<span class="token operator">::</span><span class="token function">setReceiveTimeout</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	map<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>templateProperties<span class="token operator">::</span><span class="token function">getReplyTimeout</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">whenNonNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token operator">::</span><span class="token function">toMillis</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span>template<span class="token operator">::</span><span class="token function">setReplyTimeout</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	map<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>templateProperties<span class="token operator">::</span><span class="token function">getExchange</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span>template<span class="token operator">::</span><span class="token function">setExchange</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	map<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>templateProperties<span class="token operator">::</span><span class="token function">getRoutingKey</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span>template<span class="token operator">::</span><span class="token function">setRoutingKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	map<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>templateProperties<span class="token operator">::</span><span class="token function">getDefaultReceiveQueue</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">whenNonNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span>template<span class="token operator">::</span><span class="token function">setDefaultReceiveQueue</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置了绑定exchange和queue" tabindex="-1"><a class="header-anchor" href="#配置了绑定exchange和queue"><span>配置了绑定exchange和queue</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Configuration</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MQConfig</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">FanoutExchange</span> <span class="token function">fanoutExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FanoutExchange</span><span class="token punctuation">(</span><span class="token string">&quot;shop&quot;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Queue</span> <span class="token function">queue1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Queue</span><span class="token punctuation">(</span><span class="token string">&quot;s1&quot;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Queue</span> <span class="token function">queue2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Queue</span><span class="token punctuation">(</span><span class="token string">&quot;s2&quot;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Queue</span> <span class="token function">queue3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Queue</span><span class="token punctuation">(</span><span class="token string">&quot;s3&quot;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Binding</span> <span class="token function">binding1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">BindingBuilder</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token function">queue1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token function">fanoutExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Binding</span> <span class="token function">binding2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">BindingBuilder</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token function">queue2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token function">fanoutExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Bean</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Binding</span> <span class="token function">binding3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">BindingBuilder</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token function">queue3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">(</span><span class="token function">fanoutExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注入rabbittemplate发送消息" tabindex="-1"><a class="header-anchor" href="#注入rabbittemplate发送消息"><span>注入RabbitTemplate发送消息</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>provider</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RabbitTemplate</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShopServicePublish</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">RabbitTemplate</span> rabbitTemplate<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">shop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;进入消费，通知到rabbitmq&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        rabbitTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;shop&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;消费了一次&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注解消费消息" tabindex="-1"><a class="header-anchor" href="#注解消费消息"><span>注解消费消息</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>consumer</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>amqp<span class="token punctuation">.</span>rabbit<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RabbitListener</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServiceSubscribe</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>queues <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;s1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;s2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;s3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">receive</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token class-name">MessageProperties</span></span>
<span class="line">    <span class="token punctuation">[</span><span class="token function">headers</span><span class="token punctuation">(</span>map集合<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">{</span>spring_listener_return_correlation<span class="token operator">=</span>a84d29ba<span class="token operator">-</span>bc8f<span class="token operator">-</span><span class="token number">4727</span><span class="token operator">-</span>a959<span class="token operator">-</span>b8b361e223d3<span class="token punctuation">,</span> spring_returned_message_correlation<span class="token operator">=</span><span class="token number">815d</span><span class="token number">8347</span><span class="token operator">-</span><span class="token number">5</span>ee2<span class="token operator">-</span><span class="token number">49f</span><span class="token number">3</span><span class="token operator">-</span>ab70<span class="token operator">-</span>a7ebe231a9d9<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">	contentType<span class="token operator">=</span>text<span class="token operator">/</span>plain<span class="token punctuation">;</span></span>
<span class="line">	contentEncoding<span class="token operator">=</span><span class="token constant">UTF</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">;</span></span>
<span class="line">    contentLength<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    receivedDeliveryMode<span class="token operator">=</span><span class="token constant">PERSISTENT</span><span class="token punctuation">;</span></span>
<span class="line">    priority<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    redelivered<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">    receivedExchange<span class="token operator">=</span>confirm<span class="token punctuation">;</span></span>
<span class="line">    receivedRoutingKey<span class="token operator">=</span>ack<span class="token punctuation">;</span></span>
<span class="line">    deliveryTag<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    consumerTag<span class="token operator">=</span>amq<span class="token punctuation">.</span>ctag<span class="token operator">-</span><span class="token number">2</span>kyYLSIEOJCMoPzISGJBsw<span class="token punctuation">;</span></span>
<span class="line">    consumerQueue<span class="token operator">=</span>my_ack<span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="features属性" tabindex="-1"><a class="header-anchor" href="#features属性"><span>Features属性</span></a></h2><h3 id="x-message-ttl" tabindex="-1"><a class="header-anchor" href="#x-message-ttl"><span>x-message-ttl</span></a></h3><p>队列消息存活时间，单位毫秒</p><p>消息策略</p><blockquote><p>创建一个队列，声明消息只能存活60s</p></blockquote><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> args <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">args<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;x-message-ttl&quot;</span><span class="token punctuation">,</span> <span class="token number">60000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token string">&quot;myqueue&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rabbitmqctl set_policy TTL <span class="token string">&quot;.*&quot;</span>  <span class="token string">&#39;{&quot;x-message-ttl&quot;:60000}&#39;</span> --apply-to</span>
<span class="line"></span></code></pre></div><h3 id="x-expires" tabindex="-1"><a class="header-anchor" href="#x-expires"><span>x-expires</span></a></h3><p>队列存活时间，单位毫秒</p><p>如果exchange存在，还创建这样的交换机，注册的exchange的Features如果和以前的不同，会出现异常，程序直接退出。</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> args <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">args<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;x-expires&quot;</span><span class="token punctuation">,</span> <span class="token number">1800000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token string">&quot;myqueue&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rabbitmqctl set_policy expiry <span class="token string">&quot;.*&quot;</span> <span class="token string">&#39;{&quot;expires&quot;:1800000}&#39;</span> --apply-to queues</span>
<span class="line"></span></code></pre></div><h3 id="dead-letter-exchange" tabindex="-1"><a class="header-anchor" href="#dead-letter-exchange"><span>Dead letter exchange</span></a></h3><p>死信发送的消息的条件是</p><ul><li>rejected消息被消费者手动拒绝(basic.reject / basic.nack)，并且requeue = false</li><li>expired消息过期</li><li>maxlen消息接收消息满了</li><li>delivery_limit消息返回的次数超过了限制</li></ul><p>x-dead-letter-exchange</p><p>队列属性绑定Dead letter exchange，如果消息存满了，消息过期，会自动存到死性队列中去。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rabbitmqctl set_policy DLX <span class="token string">&quot;.*&quot;</span> <span class="token string">&#39;{&quot;dead-letter-exchange&quot;:&quot;my-dlx&quot;}&#39;</span> --apply-to queues</span>
<span class="line"></span></code></pre></div><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">channel<span class="token punctuation">.</span><span class="token function">exchangeDeclare</span><span class="token punctuation">(</span><span class="token string">&quot;some.exchange.name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;direct&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> args <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">args<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;x-dead-letter-exchange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;some.exchange.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token string">&quot;myqueue&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h3 id="dead-letter-routing-key" tabindex="-1"><a class="header-anchor" href="#dead-letter-routing-key"><span>Dead letter routing key</span></a></h3><p>x-dead-letter-routing-key</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">exchangeDeclare</span><span class="token punctuation">(</span><span class="token string">&quot;some.exchange.name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;direct&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> args <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">args<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;x-dead-letter-exchange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;some.exchange.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">args<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span> <span class="token string">&quot;x-dead-letter-routing-key&quot;</span> <span class="token punctuation">,</span> <span class="token string">&quot;some-routing-key&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token string">&quot;myqueue&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><figure><img src="http://47.101.155.205/image-20220712113851924.png" alt="image-20220712113851924" tabindex="0" loading="lazy"><figcaption>image-20220712113851924</figcaption></figure><h3 id="alternate-exchanges交换机属性" tabindex="-1"><a class="header-anchor" href="#alternate-exchanges交换机属性"><span>Alternate Exchanges交换机属性</span></a></h3><p>绑定交换机之间的关系</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment">#条件如下，已经存在交换机my-direct,my-ae。</span></span>
<span class="line"><span class="token comment">#my-direct交换机是direct类型，绑定了队列round下的key1</span></span>
<span class="line"><span class="token comment">#my-ae是fanout类型，绑定了队列q1,q2,q3</span></span>
<span class="line"><span class="token comment">#如果向交换机my-direct下的路由key1发送消息，这时队列round会收到message</span></span>
<span class="line"><span class="token comment">#如果向交换机my-direct下的路由key2(未绑定)发送消息，这时my-ae绑定的队列q1，q2，q3会收到消息</span></span>
<span class="line">rabbitmqctl set_policy AE <span class="token string">&quot;^my-direct$&quot;</span> <span class="token string">&#39;{&quot;alternate-exchange&quot;:&quot;my-ae&quot;}&#39;</span> --apply-to exchanges</span>
<span class="line"><span class="token comment">#可视化界面会有AE属性，悬浮上面显示alternate-exchange: run</span></span>
<span class="line"></span></code></pre></div><blockquote><p>代码声明绑定</p></blockquote><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> args <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">args<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;alternate-exchange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;my-ae&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">exchangeDeclare</span><span class="token punctuation">(</span><span class="token string">&quot;my-direct&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;direct&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">exchangeDeclare</span><span class="token punctuation">(</span><span class="token string">&quot;my-ae&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;fanout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token string">&quot;routed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span><span class="token string">&quot;routed&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;my-direct&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;key1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span><span class="token string">&quot;unrouted&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueBind</span><span class="token punctuation">(</span><span class="token string">&quot;unrouted&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;my-ae&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h2 id="rabbitmq配置" tabindex="-1"><a class="header-anchor" href="#rabbitmq配置"><span>RabbitMQ配置</span></a></h2><p>https://www.rabbitmq.com/configure.html#config-items</p><h3 id="内存配置" tabindex="-1"><a class="header-anchor" href="#内存配置"><span>内存配置</span></a></h3><blockquote><p>命令设置</p></blockquote><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rabbitmqctl set_vm_memory_high_watermark absolute 2GB</span>
<span class="line">rabbitmqctl set_vm_memory_high_watermark <span class="token number">0.4</span></span>
<span class="line">rabbitmq-diagnostics memory_breakdown <span class="token comment">#查询内存配置</span></span>
<span class="line">rabbitmq-diagnostics status <span class="token comment">#查询</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><blockquote><p>配置文件设置</p></blockquote><div class="language-conf" data-highlighter="prismjs" data-ext="conf" data-title="conf"><pre><code><span class="line">vm_memory_high_watermark.absolute = 2GB </span>
<span class="line">vm_memory_high_watermark.relative = 0.4 #默认</span>
<span class="line">vm_memory_high_watermark.relative = 0.7 #推荐0.4-0.7</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><blockquote><p>测试，设置内存空间为50MB</p></blockquote><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rabbitmqctl set_vm_memory_high_watermark absolute 50MB <span class="token comment">#设置最大内存为50MB</span></span>
<span class="line"><span class="token comment">#这个时候向队列里发送，消息，不会被接收</span></span>
<span class="line">rabbitmqctl set_vm_memory_high_watermark <span class="token number">0.4</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="内存存盘" tabindex="-1"><a class="header-anchor" href="#内存存盘"><span>内存存盘</span></a></h3><blockquote><p>配置文件设置</p></blockquote><div class="language-conf" data-highlighter="prismjs" data-ext="conf" data-title="conf"><pre><code><span class="line"># 默认的</span>
<span class="line">vm_memory_high_watermark_paging_ratio = 0.5 </span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="磁盘配置" tabindex="-1"><a class="header-anchor" href="#磁盘配置"><span>磁盘配置</span></a></h3><blockquote><p>命令设置</p></blockquote><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rabbitmqctl set_disk_free_limit</span>
<span class="line">rabbitmqctl set_disk_free_limit mem_relative <span class="token number">1.0</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><blockquote><p>配置文件配置</p></blockquote><div class="language-conf" data-highlighter="prismjs" data-ext="conf" data-title="conf"><pre><code><span class="line">disk_free_limit.relative = 3.0 #在具有4GB内存的节点上，系统的磁盘低于12GB，则所有的新消息都会被阻止，直到磁盘警报被清除。</span>
<span class="line">disk_free_limit.absolute = 2GB</span>
<span class="line">disk_free_limit.absolute = 50MB</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><blockquote><p>测试，设置绝对内存100GB</p></blockquote><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">rabbitmqctl set_disk_free_limit 100GB</span>
<span class="line"><span class="token comment">#设置磁盘内存最小为100GB时，不能往exchage的queue中写入消息，直到磁盘警告被清除。</span></span>
<span class="line">rabbitmqctl set_disk_free_limit 50MB</span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="集群搭建" tabindex="-1"><a class="header-anchor" href="#集群搭建"><span>集群搭建</span></a></h2><p>官网文档：https://www.rabbitmq.com/clustering.html</p><ul><li>linux系统rabbitmq节点cookie的位置：/var/lib/rabbitmq/.erlang.cookie</li><li>Docker使用RABBITMQ_ERLANG_COOKIE环境变量配置cookie</li><li>CLI查看cookie信息 rabbitmq-diagnostics erlang_cookie_sources</li></ul><p>官方推荐搭建奇数节点的集群</p><blockquote><p>本机集群搭建</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">RABBITMQ_NODE_PORT</span><span class="token operator">=</span><span class="token number">5677</span> <span class="token assign-left variable">RABBITMQ_SERVER_START_ARGS</span><span class="token operator">=</span><span class="token string">&quot;-rabbitmq_management listener [{port,15679}]&quot;</span> <span class="token assign-left variable">RABBITMQ_NODENAME</span><span class="token operator">=</span>rabbit-1 rabbitmq-server <span class="token parameter variable">-detached</span> <span class="token comment">#开启一个节点为rabbit-1的rabbitmq服务</span></span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-1 stop_app <span class="token comment">#关闭rabbit-1服务 </span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">RABBITMQ_NODE_PORT</span><span class="token operator">=</span><span class="token number">5673</span> <span class="token assign-left variable">RABBITMQ_SERVER_START_ARGS</span><span class="token operator">=</span><span class="token string">&quot;-rabbitmq_management listener [{port,15673}]&quot;</span> <span class="token assign-left variable">RABBITMQ_NODENAME</span><span class="token operator">=</span>rabbit-3 rabbitmq-server <span class="token parameter variable">-detached</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">RABBITMQ_NODE_PORT</span><span class="token operator">=</span><span class="token number">5674</span> <span class="token assign-left variable">RABBITMQ_SERVER_START_ARGS</span><span class="token operator">=</span><span class="token string">&quot;-rabbitmq_management listener [{port,15674}]&quot;</span> <span class="token assign-left variable">RABBITMQ_NODENAME</span><span class="token operator">=</span>rabbit-4 rabbitmq-server <span class="token parameter variable">-detached</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">#绑定主从关系</span></span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-3 stop_app</span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-3 join_cluster rabbit-1@oycm</span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-3 start_app</span>
<span class="line"></span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-4 stop_app</span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-4 join_cluster rabbit-1@oycm</span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-4 start_app</span>
<span class="line"></span>
<span class="line"><span class="token comment">#查看集群关系</span></span>
<span class="line">rabbitmqctl cluster_status <span class="token parameter variable">-n</span> rabbit-1</span>
<span class="line"></span>
<span class="line"><span class="token comment">#设置账户关系</span></span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-1 add_user admin Aliyunoycm1234</span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-1 set_user_tags admin administrator</span>
<span class="line"></span>
<span class="line"><span class="token comment">#删除绑定关系</span></span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-1@oycm forget_cluster_node rabbit-4@oycm</span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> 主节点名@主节点名 forget_cluster_node 要删除的节点名@主机名</span>
<span class="line"></span>
<span class="line">rabbitmqctl stop <span class="token comment">#停止服务</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>firewall-cmd --zone=public --add-port=15674/tcp --permanent</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">RABBITMQ_NODE_PORT</span><span class="token operator">=</span><span class="token number">5672</span> <span class="token assign-left variable">RABBITMQ_NODENAME</span><span class="token operator">=</span>rabbit rabbitmq-server start <span class="token operator">&amp;</span></span>
<span class="line"><span class="token assign-left variable">RABBITMQ_NODE_PORT</span><span class="token operator">=</span><span class="token number">5673</span> <span class="token assign-left variable">RABBITMQ_SERVER_START_ARGS</span><span class="token operator">=</span><span class="token string">&quot;-rabbitmq_management listener [{port,15673}]&quot;</span> <span class="token assign-left variable">RABBITMQ_NODENAME</span><span class="token operator">=</span>rabbit-3 rabbitmq-server start <span class="token operator">&amp;</span></span>
<span class="line"><span class="token assign-left variable">RABBITMQ_NODE_PORT</span><span class="token operator">=</span><span class="token number">5674</span> <span class="token assign-left variable">RABBITMQ_SERVER_START_ARGS</span><span class="token operator">=</span><span class="token string">&quot;-rabbitmq_management listener [{port,15674}]&quot;</span> <span class="token assign-left variable">RABBITMQ_NODENAME</span><span class="token operator">=</span>rabbit-4 rabbitmq-server start <span class="token operator">&amp;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">#这里的&amp;表示后台启动的运行</span></span>
<span class="line"></span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-3 stop_app</span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-3 join_cluster rabbit@oycm</span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-3 start_app</span>
<span class="line"></span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-1@oycm forget_cluster_node rabbit-4@oycm</span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-4 reset</span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-4 join_cluster rabbit@oycm</span>
<span class="line">rabbitmqctl <span class="token parameter variable">-n</span> rabbit-4 start_app</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">/var/lib/rabbitmq/mnesia <span class="token comment">#目录中生成节点的pid文件</span></span>
<span class="line">/var/log/rabbitmq <span class="token comment">#目录中是节点生成的日志</span></span>
<span class="line">/lib/rabbitmq/bin <span class="token comment">#目录是rabbimtmq命令所在位置</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="分布式事务" tabindex="-1"><a class="header-anchor" href="#分布式事务"><span>分布式事务</span></a></h2><h2 id="lazy-queues" tabindex="-1"><a class="header-anchor" href="#lazy-queues"><span>Lazy Queues</span></a></h2><p>官网地址：https://www.rabbitmq.com/lazy-queues.html</p><h2 id="streams" tabindex="-1"><a class="header-anchor" href="#streams"><span>Streams(?)</span></a></h2><p>官网：https://www.rabbitmq.com/streams.html</p><p>队列的类型，Stream</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//java声明一个Stream队列</span></span>
<span class="line"><span class="token class-name">ConnectionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Connection</span> connection <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">newConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">Channel</span> channel <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">createChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;my-stream&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token boolean">true</span><span class="token punctuation">,</span>         <span class="token comment">// durable</span></span>
<span class="line">  <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// not exclusive, not auto-delete</span></span>
<span class="line">  <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;x-queue-type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;stream&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//java客户端声明一个流队列</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> arguments <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">arguments<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;x-queue-type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;stream&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">arguments<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;x-max-length-bytes&quot;</span><span class="token punctuation">,</span> <span class="token number">20_000_000_000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// maximum stream size: 20 GB</span></span>
<span class="line">arguments<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;x-stream-max-segment-size-bytes&quot;</span><span class="token punctuation">,</span> <span class="token number">100_000_000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// size of segment files: 100 MB</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">queueDeclare</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;my-stream&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token boolean">true</span><span class="token punctuation">,</span>         <span class="token comment">// durable</span></span>
<span class="line">  <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// not exclusive, not auto-delete</span></span>
<span class="line">  arguments</span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line">channel<span class="token punctuation">.</span><span class="token function">basicQos</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// QoS must be specified</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">basicConsume</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;my-stream&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;x-stream-offset&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;first&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// &quot;first&quot; offset specification</span></span>
<span class="line">  <span class="token punctuation">(</span>consumerTag<span class="token punctuation">,</span> message<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// message processing</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">   channel<span class="token punctuation">.</span><span class="token function">basicAck</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getEnvelope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ack is required</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  consumerTag <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:left;">Feature</th><th style="text-align:left;">Classic</th><th style="text-align:left;">Stream</th></tr></thead><tbody><tr><td style="text-align:left;">Non-durable queues</td><td style="text-align:left;">yes</td><td style="text-align:left;">no</td></tr><tr><td style="text-align:left;">Exclusivity</td><td style="text-align:left;">yes</td><td style="text-align:left;">no</td></tr><tr><td style="text-align:left;">Per message persistence</td><td style="text-align:left;">per message</td><td style="text-align:left;">always</td></tr><tr><td style="text-align:left;">Membership changes</td><td style="text-align:left;">automatic</td><td style="text-align:left;">manual</td></tr><tr><td style="text-align:left;">TTL</td><td style="text-align:left;">yes</td><td style="text-align:left;">no (but see <a href="https://www.rabbitmq.com/streams.html#retention" target="_blank" rel="noopener noreferrer">Retention</a>)</td></tr><tr><td style="text-align:left;">Queue length limits</td><td style="text-align:left;">yes</td><td style="text-align:left;">no (but see <a href="https://www.rabbitmq.com/streams.html#retention" target="_blank" rel="noopener noreferrer">Retention</a>)</td></tr><tr><td style="text-align:left;">Lazy behaviour</td><td style="text-align:left;">yes</td><td style="text-align:left;">inherent固有</td></tr><tr><td style="text-align:left;">Message priority</td><td style="text-align:left;">yes</td><td style="text-align:left;">no</td></tr><tr><td style="text-align:left;">Consumer priority</td><td style="text-align:left;">yes</td><td style="text-align:left;">no</td></tr><tr><td style="text-align:left;">Dead letter exchanges</td><td style="text-align:left;">yes</td><td style="text-align:left;">no</td></tr><tr><td style="text-align:left;">Adheres to <a href="https://www.rabbitmq.com/parameters.html#policies" target="_blank" rel="noopener noreferrer">policies</a></td><td style="text-align:left;">yes</td><td style="text-align:left;">(see <a href="https://www.rabbitmq.com/streams.html#retention" target="_blank" rel="noopener noreferrer">Retention</a>)</td></tr><tr><td style="text-align:left;">Reacts to <a href="https://www.rabbitmq.com/alarms.html" target="_blank" rel="noopener noreferrer">memory alarms</a></td><td style="text-align:left;">yes</td><td style="text-align:left;">no (uses minimal RAM)</td></tr><tr><td style="text-align:left;">Poison message handling</td><td style="text-align:left;">no</td><td style="text-align:left;">no</td></tr><tr><td style="text-align:left;">Global <a href="https://www.rabbitmq.com/streams.html#global-qos" target="_blank" rel="noopener noreferrer">QoS Prefetch</a></td><td style="text-align:left;">yes</td><td style="text-align:left;">no</td></tr></tbody></table><h2 id="log-collection" tabindex="-1"><a class="header-anchor" href="#log-collection"><span>Log Collection（*）</span></a></h2><h2 id="basic-nack" tabindex="-1"><a class="header-anchor" href="#basic-nack"><span>basic.nack</span></a></h2><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">GetResponse</span> gr1 <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">basicGet</span><span class="token punctuation">(</span><span class="token string">&quot;some.queue&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">GetResponse</span> gr2 <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">basicGet</span><span class="token punctuation">(</span><span class="token string">&quot;some.queue&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">channel<span class="token punctuation">.</span><span class="token function">basicNack</span><span class="token punctuation">(</span>gr2<span class="token punctuation">.</span><span class="token function">getEnvelope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="延迟机制" tabindex="-1"><a class="header-anchor" href="#延迟机制"><span>延迟机制</span></a></h2><figure><img src="http://47.101.155.205/image-20220713210849492.png" alt="image-20220713210849492" tabindex="0" loading="lazy"><figcaption>image-20220713210849492</figcaption></figure><h2 id="思考" tabindex="-1"><a class="header-anchor" href="#思考"><span>思考</span></a></h2><h3 id="如何保证rabbitmq顺序消费" tabindex="-1"><a class="header-anchor" href="#如何保证rabbitmq顺序消费"><span>如何保证RabbitMQ顺序消费？</span></a></h3><p>使用单一队列+单一消费者模式。</p><p>FIFO(先进先出)设计。</p><h3 id="rabbitmq如何保证消息不会丢失" tabindex="-1"><a class="header-anchor" href="#rabbitmq如何保证消息不会丢失"><span>RabbitMQ如何保证消息不会丢失？</span></a></h3><p>出现消息丢失的情况：</p><ul><li><p>生产者发送消息丢失</p></li><li><p>RabbitMQ服务端消息丢失</p></li><li><p>消费者消息丢失</p></li><li><p>一是使用RabbitMQ的事务功能，同步效率低。二是使用RabbitMQ的confirm模式，异步确认模式。</p></li><li><p>消息持久化，设置队列持久化，消息deliverMode设置为2。</p></li><li><p>手动ack。</p></li></ul><h3 id="怎么保证消息不重复消费" tabindex="-1"><a class="header-anchor" href="#怎么保证消息不重复消费"><span>怎么保证消息不重复消费</span></a></h3><p>幂等性：同一操作进行一次或多次执行的结果是一致的，不会因为重复执行而产生副作用。</p><h4 id="mvcc" tabindex="-1"><a class="header-anchor" href="#mvcc"><span>MVCC</span></a></h4><p>MVCC（Multi-Version Concurrency Control多版本并发控制）是一种用于数据库管理系统（DBMS）中实现并发控制的技术。MVCC 机制通过每个事务分配唯一的事务标识符（Transaction ID，TID）来允许多个事务并发地访问数据库，从而避免了锁定资源以防止冲突的传统并发控制方法的一些缺点。</p><p>在 MVCC 中，每个事务在开始时都会创建一个时间戳，并在其执行期间保持不变。每个数据库对象（如表、行或页）都会分配一个或多个版本号。当事务访问数据库对象时，它将只能访问<strong>早于</strong>该时间戳的版本。</p><p>MVCC 机制中的读操作与写操作之间存在不同的规则。在读操作中，只有早于该时间戳的已提交版本才会被读取，因此读操作不会受到正在执行的并发写操作的干扰。在写操作中，事务会创建新版本，并将其写入磁盘。如果另一个事务正在访问旧版本，则该事务将继续读取旧版本，而不是被新版本所覆盖。</p><p>MVCC 机制的优点是提高了数据库系统的并发性能，因为多个事务可以同时读取和修改数据库对象，而不会互相干扰。同时，MVCC 机制也降低了死锁的风险，因为事务不需要等待其他事务释放锁定的资源才能继续执行。</p><p>但是，MVCC 机制也有一些缺点。例如，它会增加数据库系统的存储成本，因为每个版本都需要额外的存储空间。此外，在某些情况下，MVCC 机制可能会导致一些奇怪的现象，例如<code>不可重复读</code>或<code>幻读</code>，这些都是因为在不同的时间戳下读取了不同的版本所导致的。</p><blockquote><p>介绍</p></blockquote><p>MVCC（Multi-Version Concurrency Control）是一种数据库并发控制技术，它允许多个事务同时读取数据库中的同一数据，而不会发生数据冲突和丢失更新的问题。MVCC最早是在PostgreSQL数据库中实现的，现在已经被广泛应用于许多数据库系统中。</p><p>MVCC的基本思想是，为每个事务分配一个唯一的时间戳（或版本号），并将每个数据行的所有版本都保存在数据库中。每个事务只能看到早于自己时间戳（或版本号）的数据行版本。当一个事务修改一行数据时，它会在该数据行的版本链中创建一个新版本，并将自己的时间戳（或版本号）分配给这个新版本。因此，不同事务的修改会形成不同的版本链。</p><p>当一个事务要读取一个数据行时，它会查找该数据行的版本链，找到最新的早于自己时间戳（或版本号）的版本，并读取其中的数据。如果数据行的最新版本早于事务的时间戳（或版本号），则意味着其他事务已经修改了该数据行，该事务需要回滚并重新读取数据。</p><p>MVCC的优点在于它允许并发访问数据库，而不需要锁定整个表或行，从而提高了并发性能和吞吐量。但是，它也会带来一些额外的开销，例如在版本链中保存数据的多个版本可能会占用更多的存储空间。</p><h4 id="tocken机制" tabindex="-1"><a class="header-anchor" href="#tocken机制"><span>Tocken机制</span></a></h4><p>首先将 RabbitMQ 的消息自动确认机制改为手动确认，每当有一条消息消费成功，就把消息的唯一Id记录在redis上，并且每次收到消息时，都先去redis上查询是否有该消息id，如果有消息id，则表示已经消费过了，不需要再去处理，否则再去处理。</p><h4 id="设计去重表" tabindex="-1"><a class="header-anchor" href="#设计去重表"><span>设计去重表</span></a></h4><p>给每条消息一个唯一 ID，消费者在处理消息时将 ID 存储。如果接收到相同 ID 的消息，消费者可以选择跳过，从而避免重复处理。</p>`,246)]))}const i=s(e,[["render",l],["__file","RabbitMQ.html.vue"]]),u=JSON.parse('{"path":"/mq/RabbitMQ.html","title":"RabbitMQ","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"为什么使用RabbitMQ","slug":"为什么使用rabbitmq","link":"#为什么使用rabbitmq","children":[]},{"level":2,"title":"使用RabbitMQ带来的缺点","slug":"使用rabbitmq带来的缺点","link":"#使用rabbitmq带来的缺点","children":[]},{"level":2,"title":"RabbitMQ基本概念","slug":"rabbitmq基本概念","link":"#rabbitmq基本概念","children":[]},{"level":2,"title":"Centos安装RabbitMQ","slug":"centos安装rabbitmq","link":"#centos安装rabbitmq","children":[{"level":3,"title":"解压缩安装Erlang环境(23.3.4.6)","slug":"解压缩安装erlang环境-23-3-4-6","link":"#解压缩安装erlang环境-23-3-4-6","children":[]},{"level":3,"title":"安装RabbitMQ","slug":"安装rabbitmq","link":"#安装rabbitmq","children":[]},{"level":3,"title":"yum安装Erlang环境","slug":"yum安装erlang环境","link":"#yum安装erlang环境","children":[]},{"level":3,"title":"安装RabbitMQ","slug":"安装rabbitmq-1","link":"#安装rabbitmq-1","children":[]},{"level":3,"title":"RabbitMQ启动相关命令","slug":"rabbitmq启动相关命令","link":"#rabbitmq启动相关命令","children":[]},{"level":3,"title":"RabbitMQ安装可视化web插件","slug":"rabbitmq安装可视化web插件","link":"#rabbitmq安装可视化web插件","children":[]},{"level":3,"title":"RabbitMQ账号命令","slug":"rabbitmq账号命令","link":"#rabbitmq账号命令","children":[]},{"level":3,"title":"卸载RabbitMQ","slug":"卸载rabbitmq","link":"#卸载rabbitmq","children":[]}]},{"level":2,"title":"Docker安装RabbitMQ","slug":"docker安装rabbitmq","link":"#docker安装rabbitmq","children":[]},{"level":2,"title":"Java Client","slug":"java-client","link":"#java-client","children":[{"level":3,"title":"连接","slug":"连接","link":"#连接","children":[]},{"level":3,"title":"URI连接","slug":"uri连接","link":"#uri连接","children":[]},{"level":3,"title":"channel","slug":"channel","link":"#channel","children":[]}]},{"level":2,"title":"工作模式","slug":"工作模式","link":"#工作模式","children":[{"level":3,"title":"HelloWorld(Simple模式)","slug":"helloworld-simple模式","link":"#helloworld-simple模式","children":[]},{"level":3,"title":"Work queues(work 工作模式)","slug":"work-queues-work-工作模式","link":"#work-queues-work-工作模式","children":[]},{"level":3,"title":"Routing(路由模式)","slug":"routing-路由模式","link":"#routing-路由模式","children":[]},{"level":3,"title":"Topics(topic主题模式)","slug":"topics-topic主题模式","link":"#topics-topic主题模式","children":[]},{"level":3,"title":"publish confirms(发布确认模式)","slug":"publish-confirms-发布确认模式","link":"#publish-confirms-发布确认模式","children":[]}]},{"level":2,"title":"SrpingBoot整合","slug":"srpingboot整合","link":"#srpingboot整合","children":[{"level":3,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]},{"level":3,"title":"自动配置原理","slug":"自动配置原理","link":"#自动配置原理","children":[]},{"level":3,"title":"配置了绑定exchange和queue","slug":"配置了绑定exchange和queue","link":"#配置了绑定exchange和queue","children":[]},{"level":3,"title":"注入RabbitTemplate发送消息","slug":"注入rabbittemplate发送消息","link":"#注入rabbittemplate发送消息","children":[]},{"level":3,"title":"注解消费消息","slug":"注解消费消息","link":"#注解消费消息","children":[]}]},{"level":2,"title":"Features属性","slug":"features属性","link":"#features属性","children":[{"level":3,"title":"x-message-ttl","slug":"x-message-ttl","link":"#x-message-ttl","children":[]},{"level":3,"title":"x-expires","slug":"x-expires","link":"#x-expires","children":[]},{"level":3,"title":"Dead letter exchange","slug":"dead-letter-exchange","link":"#dead-letter-exchange","children":[]},{"level":3,"title":"Dead letter routing key","slug":"dead-letter-routing-key","link":"#dead-letter-routing-key","children":[]},{"level":3,"title":"Alternate Exchanges交换机属性","slug":"alternate-exchanges交换机属性","link":"#alternate-exchanges交换机属性","children":[]}]},{"level":2,"title":"RabbitMQ配置","slug":"rabbitmq配置","link":"#rabbitmq配置","children":[{"level":3,"title":"内存配置","slug":"内存配置","link":"#内存配置","children":[]},{"level":3,"title":"内存存盘","slug":"内存存盘","link":"#内存存盘","children":[]},{"level":3,"title":"磁盘配置","slug":"磁盘配置","link":"#磁盘配置","children":[]}]},{"level":2,"title":"集群搭建","slug":"集群搭建","link":"#集群搭建","children":[]},{"level":2,"title":"分布式事务","slug":"分布式事务","link":"#分布式事务","children":[]},{"level":2,"title":"Lazy Queues","slug":"lazy-queues","link":"#lazy-queues","children":[]},{"level":2,"title":"Streams(?)","slug":"streams","link":"#streams","children":[]},{"level":2,"title":"Log Collection（*）","slug":"log-collection","link":"#log-collection","children":[]},{"level":2,"title":"basic.nack","slug":"basic-nack","link":"#basic-nack","children":[]},{"level":2,"title":"延迟机制","slug":"延迟机制","link":"#延迟机制","children":[]},{"level":2,"title":"思考","slug":"思考","link":"#思考","children":[{"level":3,"title":"如何保证RabbitMQ顺序消费？","slug":"如何保证rabbitmq顺序消费","link":"#如何保证rabbitmq顺序消费","children":[]},{"level":3,"title":"RabbitMQ如何保证消息不会丢失？","slug":"rabbitmq如何保证消息不会丢失","link":"#rabbitmq如何保证消息不会丢失","children":[]},{"level":3,"title":"怎么保证消息不重复消费","slug":"怎么保证消息不重复消费","link":"#怎么保证消息不重复消费","children":[]}]}],"git":{"updatedTime":1730279212000,"contributors":[{"name":"ouyangcm","username":"ouyangcm","email":"mingorg@163.com","commits":1,"url":"https://github.com/ouyangcm"}]},"filePathRelative":"mq/RabbitMQ.md"}');export{i as comp,u as data};
