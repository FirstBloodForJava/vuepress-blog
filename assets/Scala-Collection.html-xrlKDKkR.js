import{_ as s,c as a,e as p,o as e}from"./app-DO9Fsueg.js";const t={};function l(o,n){return e(),a("div",null,n[0]||(n[0]=[p(`<h1 id="scala-collection" tabindex="-1"><a class="header-anchor" href="#scala-collection"><span>Scala-Collection</span></a></h1><p><a href="https://docs.scala-lang.org/overviews/collections-2.13/introduction.html" target="_blank" rel="noopener noreferrer">集合更详细介绍</a></p><p>从集合类的结构来看，集合可分为 3 个类别：</p><ul><li><code>Sequence</code>：元素带有顺序的集合，indexed（数组）；linear（链表）</li><li><code>Map</code>：包含 key/value 键值对的集合</li><li><code>Set</code>：无序且唯一的集合</li></ul><h2 id="集合继承关系" tabindex="-1"><a class="header-anchor" href="#集合继承关系"><span>集合继承关系</span></a></h2><figure><img src="http://47.101.155.205/image-20251021161423971.png" alt="image-20251021161423971" tabindex="0" loading="lazy"><figcaption>image-20251021161423971</figcaption></figure><figure><img src="http://47.101.155.205/image-20251021161456897.png" alt="image-20251021161456897" tabindex="0" loading="lazy"><figcaption>image-20251021161456897</figcaption></figure><figure><img src="http://47.101.155.205/image-20251021162155509.png" alt="image-20251021162155509" tabindex="0" loading="lazy"><figcaption>image-20251021162155509</figcaption></figure><h2 id="常用集合" tabindex="-1"><a class="header-anchor" href="#常用集合"><span>常用集合</span></a></h2><table><thead><tr><th>类型</th><th>不可变</th><th>可变</th><th>描述</th></tr></thead><tbody><tr><td><code>List</code></td><td>✓</td><td></td><td>线性链表</td></tr><tr><td><code>Vector</code></td><td>✓</td><td></td><td>indexed</td></tr><tr><td><code>LazyList</code></td><td>✓</td><td></td><td>linked list，元素仅在需要时计算，适用于大小和无限序列</td></tr><tr><td><code>ArrayBuffer</code></td><td></td><td>✓</td><td>可变首选类型，indexed</td></tr><tr><td><code>ListBuffer</code></td><td></td><td>✓</td><td>Linked list</td></tr><tr><td><code>Map</code></td><td>✓</td><td>✓</td><td></td></tr><tr><td><code>Set</code></td><td>✓</td><td>✓</td><td></td></tr></tbody></table><h2 id="list" tabindex="-1"><a class="header-anchor" href="#list"><span>List</span></a></h2><div class="language-scala line-numbers-mode" data-highlighter="prismjs" data-ext="scala" data-title="scala"><pre><code><span class="line"><span class="token keyword">val</span> a <span class="token operator">=</span> List<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 多种类型</span></span>
<span class="line"><span class="token keyword">val</span> things<span class="token operator">:</span> List<span class="token punctuation">[</span><span class="token builtin">String</span> <span class="token operator">|</span> <span class="token builtin">Int</span> <span class="token operator">|</span> <span class="token builtin">Double</span><span class="token punctuation">]</span> <span class="token operator">=</span> List<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 在集合前面添加元素 element :: list</span></span>
<span class="line"><span class="token keyword">val</span> b <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">::</span> a  </span>
<span class="line"><span class="token comment">// 在集合前面添加多个元素 list ::: list</span></span>
<span class="line"><span class="token keyword">val</span> c <span class="token operator">=</span> b <span class="token operator">::</span><span class="token operator">:</span> a</span>
<span class="line"><span class="token comment">// a 左边添加元素</span></span>
<span class="line"><span class="token number">0</span> <span class="token operator">+</span><span class="token operator">:</span> a</span>
<span class="line"><span class="token comment">// a 右边添加元素</span></span>
<span class="line">a <span class="token operator">:</span><span class="token operator">+</span> <span class="token number">4</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 和 List(1, 2, 3) 等价</span></span>
<span class="line"><span class="token keyword">val</span> list <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">::</span> <span class="token number">2</span> <span class="token operator">::</span> <span class="token number">3</span> <span class="token operator">::</span> Nil</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>LazyList</strong></p><div class="language-scala" data-highlighter="prismjs" data-ext="scala" data-title="scala"><pre><code><span class="line"><span class="token keyword">val</span> x <span class="token operator">=</span> LazyList<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">Int</span><span class="token punctuation">.</span>MaxValue<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 取前面几个元素, 没用任何操作, 除非触发了 foreach</span></span>
<span class="line">x<span class="token punctuation">.</span>take<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">x<span class="token punctuation">.</span>take<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">x<span class="token punctuation">.</span>map<span class="token punctuation">(</span>_ <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">x<span class="token punctuation">.</span>map<span class="token punctuation">(</span>_ <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>take<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>foreach<span class="token punctuation">(</span>println<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="vector" tabindex="-1"><a class="header-anchor" href="#vector"><span>Vector</span></a></h2><p>Vevtor 不止 List 的 <code>::</code> 和 <code>:::</code> 运算符。</p><div class="language-scala line-numbers-mode" data-highlighter="prismjs" data-ext="scala" data-title="scala"><pre><code><span class="line"><span class="token keyword">val</span> nums <span class="token operator">=</span> Vector<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">val</span> strings <span class="token operator">=</span> Vector<span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">case</span> <span class="token keyword">class</span> Person<span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">val</span> people <span class="token operator">=</span> Vector<span class="token punctuation">(</span></span>
<span class="line">  Person<span class="token punctuation">(</span><span class="token string">&quot;Bert&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  Person<span class="token punctuation">(</span><span class="token string">&quot;Ernie&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  Person<span class="token punctuation">(</span><span class="token string">&quot;Grover&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">val</span> a <span class="token operator">=</span> Vector<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>         </span>
<span class="line"><span class="token keyword">val</span> b <span class="token operator">=</span> a <span class="token operator">:</span><span class="token operator">+</span> <span class="token number">4</span>                </span>
<span class="line"><span class="token keyword">val</span> c <span class="token operator">=</span> a <span class="token operator">++</span> Vector<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">val</span> a <span class="token operator">=</span> Vector<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">val</span> b <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">+</span><span class="token operator">:</span> a                </span>
<span class="line"><span class="token keyword">val</span> c <span class="token operator">=</span> Vector<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">++</span><span class="token operator">:</span> a   </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="arraybuffer" tabindex="-1"><a class="header-anchor" href="#arraybuffer"><span>ArrayBuffer</span></a></h2><p><code>import scala.collection.mutable.ArrayBuffer</code> 导入后才能使用。</p><div class="language-scala line-numbers-mode" data-highlighter="prismjs" data-ext="scala" data-title="scala"><pre><code><span class="line"><span class="token comment">// 创建空的集合</span></span>
<span class="line"><span class="token keyword">var</span> strings <span class="token operator">=</span> ArrayBuffer<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">var</span> ints <span class="token operator">=</span> ArrayBuffer<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">var</span> people <span class="token operator">=</span> ArrayBuffer<span class="token punctuation">[</span>Person<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 指定集合初始大小</span></span>
<span class="line"><span class="token keyword">val</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> ArrayBuffer<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">100</span>_000<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 携带元素创建</span></span>
<span class="line"><span class="token keyword">val</span> nums <span class="token operator">=</span> ArrayBuffer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 向后追加元素, append; appendAll; insert; insertAll; prepend; prependAll 方法追加</span></span>
<span class="line"><span class="token keyword">val</span> nums <span class="token operator">=</span> ArrayBuffer<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">nums <span class="token operator">+=</span> <span class="token number">4</span></span>
<span class="line">nums <span class="token operator">++</span><span class="token operator">=</span> List<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 删除元素, clear; remove 方法删除</span></span>
<span class="line"><span class="token keyword">val</span> a <span class="token operator">=</span> ArrayBuffer<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token char">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;h&#39;</span><span class="token punctuation">)</span></span>
<span class="line">a <span class="token operator">-=</span> <span class="token char">&#39;a&#39;</span></span>
<span class="line">a <span class="token operator">--</span><span class="token operator">=</span> Seq<span class="token punctuation">(</span><span class="token char">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;c&#39;</span><span class="token punctuation">)</span></span>
<span class="line">a <span class="token operator">--</span><span class="token operator">=</span> Set<span class="token punctuation">(</span><span class="token char">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;e&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 更新元素, 下标 0 开始</span></span>
<span class="line"><span class="token keyword">val</span> a <span class="token operator">=</span> ArrayBuffer<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>        </span>
<span class="line">a<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">50</span>                   </span>
<span class="line">a<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="map" tabindex="-1"><a class="header-anchor" href="#map"><span>Map</span></a></h2><div class="language-scala line-numbers-mode" data-highlighter="prismjs" data-ext="scala" data-title="scala"><pre><code><span class="line"><span class="token comment">// 默认创建不可变 Map</span></span>
<span class="line"><span class="token keyword">val</span> states <span class="token operator">=</span> Map<span class="token punctuation">(</span></span>
<span class="line">  <span class="token string">&quot;AK&quot;</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Alaska&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;AL&quot;</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Alabama&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;AZ&quot;</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Arizona&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">&lt;-</span> states <span class="token keyword">do</span> println<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token id function">s</span><span class="token string">&quot;key: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">k</span></span><span class="token string">, value: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">v</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 获取 key 对应 value</span></span>
<span class="line"><span class="token keyword">val</span> ak <span class="token operator">=</span> states<span class="token punctuation">(</span><span class="token string">&quot;AK&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 添加 key/value 并创建新的变量</span></span>
<span class="line"><span class="token keyword">val</span> a <span class="token operator">=</span> Map<span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">val</span> b <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">val</span> c <span class="token operator">=</span> b <span class="token operator">++</span> Seq<span class="token punctuation">(</span></span>
<span class="line">  <span class="token number">3</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token number">4</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;four&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 删除 key/value</span></span>
<span class="line"><span class="token keyword">val</span> b <span class="token operator">=</span> c <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">-</span> <span class="token number">3</span></span>
<span class="line"><span class="token keyword">val</span> a <span class="token operator">=</span> b <span class="token operator">-</span> <span class="token number">2</span></span>
<span class="line"><span class="token comment">// 更新 value</span></span>
<span class="line"><span class="token keyword">val</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span>updated<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;THREE!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">val</span> c <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;TWO...&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="set" tabindex="-1"><a class="header-anchor" href="#set"><span>Set</span></a></h2><div class="language-scala line-numbers-mode" data-highlighter="prismjs" data-ext="scala" data-title="scala"><pre><code><span class="line"><span class="token comment">// 默认创建不可变的 Set</span></span>
<span class="line"><span class="token keyword">val</span> nums <span class="token operator">=</span> Set<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">val</span> nums <span class="token operator">=</span> Set<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> </span>
<span class="line"><span class="token keyword">val</span> letters <span class="token operator">=</span> Set<span class="token punctuation">(</span><span class="token char">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;c&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 添加</span></span>
<span class="line"><span class="token keyword">val</span> a <span class="token operator">=</span> Set<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> </span>
<span class="line"><span class="token keyword">val</span> b <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">3</span></span>
<span class="line"><span class="token keyword">val</span> c <span class="token operator">=</span> b <span class="token operator">++</span> Seq<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 删除</span></span>
<span class="line"><span class="token keyword">val</span> b <span class="token operator">=</span> c <span class="token operator">--</span> Seq<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">val</span> a <span class="token operator">=</span> b <span class="token operator">-</span> <span class="token number">3</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="range" tabindex="-1"><a class="header-anchor" href="#range"><span>Range</span></a></h2><p>使用 Range 填充数据和使用 for 循环迭代。</p><div class="language-scala line-numbers-mode" data-highlighter="prismjs" data-ext="scala" data-title="scala"><pre><code><span class="line"><span class="token number">1</span> to <span class="token number">5</span>         <span class="token comment">// Range(1, 2, 3, 4, 5)</span></span>
<span class="line"><span class="token number">1</span> until <span class="token number">5</span>      <span class="token comment">// Range(1, 2, 3, 4)</span></span>
<span class="line"><span class="token number">1</span> to <span class="token number">10</span> by <span class="token number">2</span>   <span class="token comment">// Range(1, 3, 5, 7, 9)</span></span>
<span class="line"><span class="token char">&#39;a&#39;</span> to <span class="token char">&#39;c&#39;</span>     <span class="token comment">// NumericRange(a, b, c)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">val</span> x<span class="token operator">:</span> List<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toList</span>
<span class="line"><span class="token keyword">import</span> <span class="token namespace">scala<span class="token punctuation">.</span>collection<span class="token punctuation">.</span>mutable<span class="token punctuation">.</span></span>Buffer</span>
<span class="line"><span class="token keyword">val</span> x<span class="token operator">:</span> Buffer<span class="token punctuation">[</span><span class="token builtin">Int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> to <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>toBuffer</span>
<span class="line"></span>
<span class="line">Vector<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// Vector(1, 2, 3, 4)</span></span>
<span class="line">List<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// List(1, 3, 5, 7, 9)</span></span>
<span class="line">Set<span class="token punctuation">.</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// HashSet 1-9</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27)]))}const i=s(t,[["render",l],["__file","Scala-Collection.html.vue"]]),r=JSON.parse('{"path":"/spark/Scala-Collection.html","title":"Scala-Collection","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"集合继承关系","slug":"集合继承关系","link":"#集合继承关系","children":[]},{"level":2,"title":"常用集合","slug":"常用集合","link":"#常用集合","children":[]},{"level":2,"title":"List","slug":"list","link":"#list","children":[]},{"level":2,"title":"Vector","slug":"vector","link":"#vector","children":[]},{"level":2,"title":"ArrayBuffer","slug":"arraybuffer","link":"#arraybuffer","children":[]},{"level":2,"title":"Map","slug":"map","link":"#map","children":[]},{"level":2,"title":"Set","slug":"set","link":"#set","children":[]},{"level":2,"title":"Range","slug":"range","link":"#range","children":[]}],"git":{"updatedTime":1761039107000,"contributors":[{"name":"ouyangcm","username":"ouyangcm","email":"mingorg@163.com","commits":2,"url":"https://github.com/ouyangcm"}]},"filePathRelative":"spark/Scala-Collection.md"}');export{i as comp,r as data};
